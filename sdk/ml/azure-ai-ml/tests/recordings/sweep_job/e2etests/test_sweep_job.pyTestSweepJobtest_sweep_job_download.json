{
  "Entries": [
    {
      "RequestUri": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/v2.0/.well-known/openid-configuration",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-identity/1.11.0b2 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Methods": "GET, OPTIONS",
        "Access-Control-Allow-Origin": "*",
        "Cache-Control": "max-age=86400, private",
        "Content-Length": "1753",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:16 GMT",
        "P3P": "CP=\u0022DSP CUR OTPi IND OTRi ONL FIN\u0022",
        "Set-Cookie": [
          "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBAAAAAIiNNoOAAAALTeglgMAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; expires=Sat, 09-Jul-2022 17:20:16 GMT; path=/; secure; HttpOnly; SameSite=None",
          "x-ms-gateway-slice=estsfd; path=/; secure; samesite=none; httponly",
          "stsservicecookie=estsfd; path=/; secure; samesite=none; httponly"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-ests-server": "2.1.12851.7 - WUS2 ProdSlices",
        "X-XSS-Protection": "0"
      },
      "ResponseBody": {
        "token_endpoint": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/token",
        "token_endpoint_auth_methods_supported": [
          "client_secret_post",
          "private_key_jwt",
          "client_secret_basic"
        ],
        "jwks_uri": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/discovery/v2.0/keys",
        "response_modes_supported": [
          "query",
          "fragment",
          "form_post"
        ],
        "subject_types_supported": [
          "pairwise"
        ],
        "id_token_signing_alg_values_supported": [
          "RS256"
        ],
        "response_types_supported": [
          "code",
          "id_token",
          "code id_token",
          "id_token token"
        ],
        "scopes_supported": [
          "openid",
          "profile",
          "email",
          "offline_access"
        ],
        "issuer": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/v2.0",
        "request_uri_parameter_supported": false,
        "userinfo_endpoint": "https://graph.microsoft.com/oidc/userinfo",
        "authorization_endpoint": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/authorize",
        "device_authorization_endpoint": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/devicecode",
        "http_logout_supported": true,
        "frontchannel_logout_supported": true,
        "end_session_endpoint": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/logout",
        "claims_supported": [
          "sub",
          "iss",
          "cloud_instance_name",
          "cloud_instance_host_name",
          "cloud_graph_host_name",
          "msgraph_host",
          "aud",
          "exp",
          "iat",
          "auth_time",
          "acr",
          "nonce",
          "preferred_username",
          "name",
          "tid",
          "ver",
          "at_hash",
          "c_hash",
          "email"
        ],
        "kerberos_endpoint": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/kerberos",
        "tenant_region_scope": "WW",
        "cloud_instance_name": "microsoftonline.com",
        "cloud_graph_host_name": "graph.windows.net",
        "msgraph_host": "graph.microsoft.com",
        "rbac_url": "https://pas.windows.net"
      }
    },
    {
      "RequestUri": "https://login.microsoftonline.com/common/discovery/instance?api-version=1.1\u0026authorization_endpoint=https://login.microsoftonline.com/common/oauth2/authorize",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Cookie": "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBAAAAAIiNNoOAAAALTeglgMAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd",
        "User-Agent": "azsdk-python-identity/1.11.0b2 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Methods": "GET, OPTIONS",
        "Access-Control-Allow-Origin": "*",
        "Cache-Control": "max-age=86400, private",
        "Content-Length": "945",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:16 GMT",
        "P3P": "CP=\u0022DSP CUR OTPi IND OTRi ONL FIN\u0022",
        "Set-Cookie": [
          "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBAAAAAIiNNoOAAAALTeglgMAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; expires=Sat, 09-Jul-2022 17:20:16 GMT; path=/; secure; HttpOnly; SameSite=None",
          "x-ms-gateway-slice=estsfd; path=/; secure; samesite=none; httponly",
          "stsservicecookie=estsfd; path=/; secure; samesite=none; httponly"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-ests-server": "2.1.12821.11 - NCUS ProdSlices",
        "X-XSS-Protection": "0"
      },
      "ResponseBody": {
        "tenant_discovery_endpoint": "https://login.microsoftonline.com/common/.well-known/openid-configuration",
        "api-version": "1.1",
        "metadata": [
          {
            "preferred_network": "login.microsoftonline.com",
            "preferred_cache": "login.windows.net",
            "aliases": [
              "login.microsoftonline.com",
              "login.windows.net",
              "login.microsoft.com",
              "sts.windows.net"
            ]
          },
          {
            "preferred_network": "login.partner.microsoftonline.cn",
            "preferred_cache": "login.partner.microsoftonline.cn",
            "aliases": [
              "login.partner.microsoftonline.cn",
              "login.chinacloudapi.cn"
            ]
          },
          {
            "preferred_network": "login.microsoftonline.de",
            "preferred_cache": "login.microsoftonline.de",
            "aliases": [
              "login.microsoftonline.de"
            ]
          },
          {
            "preferred_network": "login.microsoftonline.us",
            "preferred_cache": "login.microsoftonline.us",
            "aliases": [
              "login.microsoftonline.us",
              "login.usgovcloudapi.net"
            ]
          },
          {
            "preferred_network": "login-us.microsoftonline.com",
            "preferred_cache": "login-us.microsoftonline.com",
            "aliases": [
              "login-us.microsoftonline.com"
            ]
          }
        ]
      }
    },
    {
      "RequestUri": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/token",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "client-request-id": "3396d946-3920-46dd-bc0f-9028793d3fc6",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/x-www-form-urlencoded",
        "Cookie": "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBAAAAAIiNNoOAAAALTeglgMAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd",
        "User-Agent": "azsdk-python-identity/1.11.0b2 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-client-cpu": "x64",
        "x-client-current-telemetry": "4|730,0|",
        "x-client-last-telemetry": "4|0|||",
        "x-client-os": "win32",
        "x-client-sku": "MSAL.Python",
        "x-client-ver": "1.18.0",
        "x-ms-lib-capability": "retry-after, h429"
      },
      "RequestBody": "client_id=6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c\u0026grant_type=client_credentials\u0026client_info=1\u0026client_secret=T~W8Q~GzhJ6x._7UHB-8KwvUNlfoT.2AFqvz6bnK\u0026claims=%7B%22access_token%22%3A\u002B%7B%22xms_cc%22%3A\u002B%7B%22values%22%3A\u002B%5B%22CP1%22%5D%7D%7D%7D\u0026scope=https%3A%2F%2Fmanagement.azure.com%2F.default",
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-store, no-cache",
        "client-request-id": "3396d946-3920-46dd-bc0f-9028793d3fc6",
        "Content-Length": "111",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:16 GMT",
        "Expires": "-1",
        "P3P": "CP=\u0022DSP CUR OTPi IND OTRi ONL FIN\u0022",
        "Pragma": "no-cache",
        "Set-Cookie": [
          "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBQAAAAIiNNoOAAAALTeglgMAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; expires=Sat, 09-Jul-2022 17:20:16 GMT; path=/; secure; HttpOnly; SameSite=None",
          "x-ms-gateway-slice=estsfd; path=/; secure; samesite=none; httponly",
          "stsservicecookie=estsfd; path=/; secure; samesite=none; httponly"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-clitelem": "1,0,0,,",
        "x-ms-ests-server": "2.1.12851.7 - WUS2 ProdSlices",
        "X-XSS-Protection": "0"
      },
      "ResponseBody": {
        "token_type": "Bearer",
        "expires_in": 86399,
        "ext_expires_in": 86399,
        "refresh_in": 43199,
        "access_token": "Sanitized"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute?api-version=2022-01-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:17 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "71cc76d9-43fa-4839-a20c-ba7a7b43dc70",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172017Z:71cc76d9-43fa-4839-a20c-ba7a7b43dc70",
        "x-request-time": "0.064"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
        "name": "testCompute",
        "type": "Microsoft.MachineLearningServices/workspaces/computes",
        "location": "westus2",
        "tags": {},
        "properties": {
          "createdOn": "2022-06-03T21:05:02.0959939\u002B00:00",
          "modifiedOn": "2022-06-03T21:05:05.6385806\u002B00:00",
          "disableLocalAuth": false,
          "description": null,
          "resourceId": null,
          "computeType": "AmlCompute",
          "computeLocation": "westus2",
          "provisioningState": "Succeeded",
          "provisioningErrors": null,
          "isAttachedCompute": false,
          "properties": {
            "vmSize": "STANDARD_DS3_V2",
            "vmPriority": "Dedicated",
            "scaleSettings": {
              "maxNodeCount": 4,
              "minNodeCount": 0,
              "nodeIdleTimeBeforeScaleDown": "PT2M"
            },
            "subnet": null,
            "currentNodeCount": 4,
            "targetNodeCount": 4,
            "nodeStateCounts": {
              "preparingNodeCount": 0,
              "runningNodeCount": 2,
              "idleNodeCount": 2,
              "unusableNodeCount": 0,
              "leavingNodeCount": 0,
              "preemptedNodeCount": 0
            },
            "allocationState": "Steady",
            "allocationStateTransitionTime": "2022-06-09T17:18:36.609\u002B00:00",
            "errors": null,
            "remoteLoginPortPublicAccess": "Enabled",
            "osType": "Linux",
            "virtualMachineImage": null,
            "isolatedNetwork": false,
            "propertyBag": {}
          }
        }
      }
    },
    {
      "RequestUri": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/token",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "client-request-id": "7607550b-437d-4eeb-84ab-28c5ff93cea1",
        "Connection": "keep-alive",
        "Content-Length": "287",
        "Content-Type": "application/x-www-form-urlencoded",
        "Cookie": "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBQAAAAIiNNoOAAAALTeglgMAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd",
        "User-Agent": "azsdk-python-identity/1.11.0b2 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-client-cpu": "x64",
        "x-client-current-telemetry": "4|730,0|",
        "x-client-last-telemetry": "4|0|||",
        "x-client-os": "win32",
        "x-client-sku": "MSAL.Python",
        "x-client-ver": "1.18.0",
        "x-ms-lib-capability": "retry-after, h429"
      },
      "RequestBody": "client_id=6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c\u0026grant_type=client_credentials\u0026client_info=1\u0026client_secret=T~W8Q~GzhJ6x._7UHB-8KwvUNlfoT.2AFqvz6bnK\u0026claims=%7B%22access_token%22%3A\u002B%7B%22xms_cc%22%3A\u002B%7B%22values%22%3A\u002B%5B%22CP1%22%5D%7D%7D%7D\u0026scope=https%3A%2F%2Fml.azure.com%2F%2F.default",
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-store, no-cache",
        "client-request-id": "7607550b-437d-4eeb-84ab-28c5ff93cea1",
        "Content-Length": "111",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:17 GMT",
        "Expires": "-1",
        "P3P": "CP=\u0022DSP CUR OTPi IND OTRi ONL FIN\u0022",
        "Pragma": "no-cache",
        "Set-Cookie": [
          "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBQAAAAIiNNoOAAAALTeglgQAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; expires=Sat, 09-Jul-2022 17:20:17 GMT; path=/; secure; HttpOnly; SameSite=None",
          "x-ms-gateway-slice=estsfd; path=/; secure; samesite=none; httponly",
          "stsservicecookie=estsfd; path=/; secure; samesite=none; httponly"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-clitelem": "1,0,0,,",
        "x-ms-ests-server": "2.1.12851.7 - NCUS ProdSlices",
        "X-XSS-Protection": "0"
      },
      "ResponseBody": {
        "token_type": "Bearer",
        "expires_in": 86399,
        "ext_expires_in": 86399,
        "refresh_in": 43199,
        "access_token": "Sanitized"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "1602",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-azureml-token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJodHRwczovL21sLmF6dXJlLmNvbS8iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNjU0Nzk0OTE3LCJuYmYiOjE2NTQ3OTQ5MTcsImV4cCI6MTY1NDg4MTYxNywiYWlvIjoiRTJaZ1lNaGxMdlo5TXJPWUkyYjJyZSsveERQZUFBQT0iLCJhcHBpZCI6IjZmNWQ3OTIzLTViZTgtNGU3Mi1iZjFiLWQ3ZDkyYWI3ZjAwYyIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0Ny8iLCJvaWQiOiI4NjRmODBhZS00NTNmLTQ3YTktODNlYy1kZmQ4ZGM1ODhlMDMiLCJyaCI6IjAuQVJvQXY0ajVjdkdHcjBHUnF5MTgwQkhiUjE5dnBoamYyeGRNbmRjV05IRXFuTDRhQUFBLiIsInN1YiI6Ijg2NGY4MGFlLTQ1M2YtNDdhOS04M2VjLWRmZDhkYzU4OGUwMyIsInRpZCI6IjcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0NyIsInV0aSI6ImhoS1pjY1l2RVVtWVdndGI4U1JTQUEiLCJ2ZXIiOiIxLjAifQ.lRVtgmZqyOwSfIy5STAGcy1HBPWS33gMC4GqcKh5Rxixz3VQbSRZY0xN8torYgxvf_YuhBcJjqPB-Ix8tFEuE9ZlddpWyHM8EwbQkhZlLAMjuIV-aK5Q3lJ33Q5Cv7HfvYFvEY1toR5888NTE-JF3Rz6del2iO-FFtF0QTsAHtJBPCAO2xZ2RRw4D_3IjNQyFq_7SB_XDlmdBtyPzUgribvWhwBZnL0gJxJtZZfD2ZAXVRBGoaSZyzk1vDdpiShOcbxrdQ8t0R-vfH9bi13SQj7MjpxqyX58cAhCwxeEHJvMfaN7ma7BP-epFEAoAifBd1vWgPV_81L6ASMHqWXJWw"
      },
      "RequestBody": {
        "properties": {
          "properties": {
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True"
          },
          "tags": {},
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "displayName": "test_570691911342",
          "experimentName": "azure-ai-ml",
          "isArchived": false,
          "jobType": "Sweep",
          "inputs": {},
          "limits": {
            "jobLimitsType": "Sweep",
            "timeout": "PT50M",
            "maxConcurrentTrials": 10,
            "maxTotalTrials": 4
          },
          "objective": {
            "goal": "maximize",
            "primaryMetric": "accuracy"
          },
          "outputs": {
            "output1": {
              "mode": "ReadWriteMount",
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "jobOutputType": "UriFolder"
            }
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random"
          },
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "trial": {
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {}
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "9812",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:20 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "dda5e1fc-0c36-44a2-b9a9-fd5d05e55785",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172020Z:dda5e1fc-0c36-44a2-b9a9-fd5d05e55785",
        "x-request-time": "1.371"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/token",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "client-request-id": "9a298b33-5ca0-47ea-a660-53fedbb720b8",
        "Connection": "keep-alive",
        "Content-Length": "295",
        "Content-Type": "application/x-www-form-urlencoded",
        "Cookie": "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBQAAAAIiNNoOAAAALTeglgQAAAAJIjTaDgAAALOiI9sEAAAACyI02g4AAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd",
        "User-Agent": "azsdk-python-identity/1.11.0b2 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-client-cpu": "x64",
        "x-client-current-telemetry": "4|730,0|",
        "x-client-last-telemetry": "4|1|||",
        "x-client-os": "win32",
        "x-client-sku": "MSAL.Python",
        "x-client-ver": "1.18.0",
        "x-ms-lib-capability": "retry-after, h429"
      },
      "RequestBody": "client_id=6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c\u0026grant_type=client_credentials\u0026client_info=1\u0026client_secret=T~W8Q~GzhJ6x._7UHB-8KwvUNlfoT.2AFqvz6bnK\u0026claims=%7B%22access_token%22%3A\u002B%7B%22xms_cc%22%3A\u002B%7B%22values%22%3A\u002B%5B%22CP1%22%5D%7D%7D%7D\u0026scope=https%3A%2F%2Fmanagement.azure.com%2F%2F.default",
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-store, no-cache",
        "client-request-id": "9a298b33-5ca0-47ea-a660-53fedbb720b8",
        "Content-Length": "111",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:20 GMT",
        "Expires": "-1",
        "P3P": "CP=\u0022DSP CUR OTPi IND OTRi ONL FIN\u0022",
        "Pragma": "no-cache",
        "Set-Cookie": [
          "fpc=Ag5o5s7mVExFrT5ocVdRcTlNXR-uBQAAAAIiNNoOAAAALTeglgQAAAAJIjTaDgAAALOiI9sFAAAACyI02g4AAAA; expires=Sat, 09-Jul-2022 17:20:21 GMT; path=/; secure; HttpOnly; SameSite=None",
          "x-ms-gateway-slice=estsfd; path=/; secure; samesite=none; httponly",
          "stsservicecookie=estsfd; path=/; secure; samesite=none; httponly"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-clitelem": "1,0,0,,",
        "x-ms-ests-server": "2.1.12851.7 - WUS2 ProdSlices",
        "X-XSS-Protection": "0"
      },
      "ResponseBody": {
        "token_type": "Bearer",
        "expires_in": 86399,
        "ext_expires_in": 86399,
        "refresh_in": 43199,
        "access_token": "Sanitized"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:22 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "44db45dc-b7dd-4d23-acc4-f85dc3e5e5f4",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172023Z:44db45dc-b7dd-4d23-acc4-f85dc3e5e5f4",
        "x-request-time": "0.041"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:25 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "5e720729-03c0-4cb0-8a0f-9b9cdebbd37e",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172025Z:5e720729-03c0-4cb0-8a0f-9b9cdebbd37e",
        "x-request-time": "0.051"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:27 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "cf916e3b-0f2c-408e-9aee-754366f07e4a",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172027Z:cf916e3b-0f2c-408e-9aee-754366f07e4a",
        "x-request-time": "0.044"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:29 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0d56a10e-81a2-437d-8829-c929571353cd",
        "x-ms-ratelimit-remaining-subscription-reads": "11995",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172030Z:0d56a10e-81a2-437d-8829-c929571353cd",
        "x-request-time": "0.044"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:31 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "a5c8e40a-d90a-46fc-afa3-3fbc8acb0343",
        "x-ms-ratelimit-remaining-subscription-reads": "11994",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172032Z:a5c8e40a-d90a-46fc-afa3-3fbc8acb0343",
        "x-request-time": "0.037"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:33 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b5c540d9-5bc5-455d-9382-1525fbeaef62",
        "x-ms-ratelimit-remaining-subscription-reads": "11993",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172034Z:b5c540d9-5bc5-455d-9382-1525fbeaef62",
        "x-request-time": "0.033"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6912a6b3-e9a4-44ce-88cc-f6f36407f48b",
        "x-ms-ratelimit-remaining-subscription-reads": "11992",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172036Z:6912a6b3-e9a4-44ce-88cc-f6f36407f48b",
        "x-request-time": "0.053"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:38 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b0ff14c8-51b2-46b8-b26b-6a676102424e",
        "x-ms-ratelimit-remaining-subscription-reads": "11991",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172039Z:b0ff14c8-51b2-46b8-b26b-6a676102424e",
        "x-request-time": "0.079"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:40 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "31199715-5818-404d-b95e-c3171db55421",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172041Z:31199715-5818-404d-b95e-c3171db55421",
        "x-request-time": "0.040"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:42 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f5da0a82-b107-400e-945d-a8fde122a1e8",
        "x-ms-ratelimit-remaining-subscription-reads": "11989",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172043Z:f5da0a82-b107-400e-945d-a8fde122a1e8",
        "x-request-time": "0.040"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:45 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "77c4fca3-3c7f-4273-ae0c-628e77041281",
        "x-ms-ratelimit-remaining-subscription-reads": "11988",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172045Z:77c4fca3-3c7f-4273-ae0c-628e77041281",
        "x-request-time": "0.043"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:47 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "7ddd0439-2679-4563-ba55-bd19a386d6db",
        "x-ms-ratelimit-remaining-subscription-reads": "11987",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172048Z:7ddd0439-2679-4563-ba55-bd19a386d6db",
        "x-request-time": "0.044"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:49 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "59f85c56-0824-4eea-932a-fad349353b9e",
        "x-ms-ratelimit-remaining-subscription-reads": "11986",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172050Z:59f85c56-0824-4eea-932a-fad349353b9e",
        "x-request-time": "0.063"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:52 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "cc97b741-bc69-42ac-805c-f65f1f9950f6",
        "x-ms-ratelimit-remaining-subscription-reads": "11985",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172053Z:cc97b741-bc69-42ac-805c-f65f1f9950f6",
        "x-request-time": "0.040"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:20:56 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "cd8fe057-1899-48f9-8fc7-32bcfd8cb33f",
        "x-ms-ratelimit-remaining-subscription-reads": "11984",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172056Z:cd8fe057-1899-48f9-8fc7-32bcfd8cb33f",
        "x-request-time": "0.037"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "9ab954c7-1094-4643-bbb7-68f3f479c1f5",
        "x-ms-ratelimit-remaining-subscription-reads": "11983",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172100Z:9ab954c7-1094-4643-bbb7-68f3f479c1f5",
        "x-request-time": "0.032"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:04 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "2dc9ec6b-824c-464f-8c11-8e4dfa1d97e3",
        "x-ms-ratelimit-remaining-subscription-reads": "11982",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172104Z:2dc9ec6b-824c-464f-8c11-8e4dfa1d97e3",
        "x-request-time": "0.038"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:09 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "cd7479bd-c72f-4c98-8dd3-bdd6ae2cd90e",
        "x-ms-ratelimit-remaining-subscription-reads": "11981",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172109Z:cd7479bd-c72f-4c98-8dd3-bdd6ae2cd90e",
        "x-request-time": "0.050"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:15 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f3a4faae-1846-4fe2-aca1-c73dc6f3efe7",
        "x-ms-ratelimit-remaining-subscription-reads": "11980",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172115Z:f3a4faae-1846-4fe2-aca1-c73dc6f3efe7",
        "x-request-time": "0.054"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "false",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "7a89001d-4a3b-4d43-98f2-c1691f118675",
        "x-ms-ratelimit-remaining-subscription-reads": "11979",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172124Z:7a89001d-4a3b-4d43-98f2-c1691f118675",
        "x-request-time": "0.051"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:35 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "48cf0717-f833-4cb5-8b34-4ef751190ff5",
        "x-ms-ratelimit-remaining-subscription-reads": "11978",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172135Z:48cf0717-f833-4cb5-8b34-4ef751190ff5",
        "x-request-time": "0.043"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:21:52 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "1f259769-d5cc-45f3-82ef-580143d937dd",
        "x-ms-ratelimit-remaining-subscription-reads": "11977",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172153Z:1f259769-d5cc-45f3-82ef-580143d937dd",
        "x-request-time": "0.038"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:22:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6cb085b5-40ef-4121-bbef-d68feddb7cda",
        "x-ms-ratelimit-remaining-subscription-reads": "11976",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172223Z:6cb085b5-40ef-4121-bbef-d68feddb7cda",
        "x-request-time": "0.037"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022OutputLocation\u0022: {\u0022Dataset\u0022: null, \u0022DataPath\u0022: null, \u0022Uri\u0022: {\u0022Path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022IsFile\u0022: false}, \u0022Type\u0022: \u0022UriFolder\u0022}, \u0022Mechanism\u0022: \u0022Mount\u0022, \u0022AdditionalOptions\u0022: null, \u0022EnvironmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}",
            "_aml_system_final_best_metric_update_retry_count": "1"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size"
          },
          "displayName": "test_570691911342",
          "status": "Running",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:23:12 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d56a1d8b-0f90-4873-856e-1e880e28fa4b",
        "x-ms-ratelimit-remaining-subscription-reads": "11975",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172313Z:d56a1d8b-0f90-4873-856e-1e880e28fa4b",
        "x-request-time": "0.056"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022outputLocation\u0022: {\u0022dataset\u0022: null, \u0022dataPath\u0022: null, \u0022uri\u0022: {\u0022path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022isFile\u0022: false}, \u0022type\u0022: \u0022UriFolder\u0022}, \u0022mechanism\u0022: \u0022Mount\u0022, \u0022additionalOptions\u0022: null, \u0022environmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}",
            "_aml_system_final_best_metric_update_retry_count": "1"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size",
            "score": "0.8579593284648124",
            "best_child_run_id": "test_570691911342_2",
            "best_metric_status": "Succeeded",
            "best_data_container_id": "dcid.test_570691911342_2"
          },
          "displayName": "test_570691911342",
          "status": "Completed",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342_2",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:12 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "728fff27-1e22-49d3-99a4-10adad4de7c9",
        "x-ms-ratelimit-remaining-subscription-reads": "11974",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172412Z:728fff27-1e22-49d3-99a4-10adad4de7c9",
        "x-request-time": "0.049"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022outputLocation\u0022: {\u0022dataset\u0022: null, \u0022dataPath\u0022: null, \u0022uri\u0022: {\u0022path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022isFile\u0022: false}, \u0022type\u0022: \u0022UriFolder\u0022}, \u0022mechanism\u0022: \u0022Mount\u0022, \u0022additionalOptions\u0022: null, \u0022environmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}",
            "_aml_system_final_best_metric_update_retry_count": "1"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size",
            "score": "0.8579593284648124",
            "best_child_run_id": "test_570691911342_2",
            "best_metric_status": "Succeeded",
            "best_data_container_id": "dcid.test_570691911342_2"
          },
          "displayName": "test_570691911342",
          "status": "Completed",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342_2",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342_2?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:12 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c21dd0b9-253f-484a-8836-4e80e11360cd",
        "x-ms-ratelimit-remaining-subscription-reads": "11973",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172413Z:c21dd0b9-253f-484a-8836-4e80e11360cd",
        "x-request-time": "0.056"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342_2",
        "name": "test_570691911342_2",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_hyperparameters": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "hyperparameters": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_ComputeTargetStatus": "{\u0022AllocationState\u0022:\u0022steady\u0022,\u0022PreparingNodeCount\u0022:0,\u0022RunningNodeCount\u0022:0,\u0022CurrentNodeCount\u0022:4}"
          },
          "properties": {
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "_azureml.ComputeTargetType": "amlctrain",
            "ProcessInfoFile": "azureml-logs/process_info.json",
            "ProcessStatusFile": "azureml-logs/process_status.json"
          },
          "displayName": "test_570691911342_2",
          "status": "Completed",
          "experimentName": "azure-ai-ml",
          "services": {
            "Tracking": {
              "jobServiceType": "Tracking",
              "port": null,
              "endpoint": "azureml://westus2.api.azureml.ms/mlflow/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli?",
              "status": null,
              "errorMessage": null,
              "properties": null
            },
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342_2?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Command",
          "resources": {
            "instanceCount": 1,
            "instanceType": null,
            "properties": null
          },
          "codeId": null,
          "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
          "environmentId": "azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
          "inputs": {
            "search_space.conv_size": {
              "description": null,
              "jobInputType": "Literal",
              "value": "7"
            },
            "inputs.conv_size": {
              "description": null,
              "jobInputType": "Literal",
              "value": "7"
            },
            "search_space.dropout_rate": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.3128719203828023"
            },
            "inputs.dropout_rate": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.3128719203828023"
            },
            "search_space.lr": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.08823242281671856"
            },
            "inputs.lr": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.08823242281671856"
            }
          },
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342_2",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          },
          "distribution": null,
          "limits": {
            "timeout": null,
            "jobLimitsType": "Command"
          },
          "environmentVariables": {
            "AZUREML_SWEEP_conv_size": "7",
            "AZUREML_SWEEP_dropout_rate": "0.3128719203828023",
            "AZUREML_SWEEP_lr": "0.08823242281671856"
          },
          "parameters": {}
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:22.5579657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli?api-version=2022-01-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:13 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "01934577-34ab-4193-b886-6697a76443ec",
        "x-ms-ratelimit-remaining-subscription-reads": "11972",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172413Z:01934577-34ab-4193-b886-6697a76443ec",
        "x-request-time": "0.022"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli",
        "name": "sdk_vnext_cli",
        "type": "Microsoft.MachineLearningServices/workspaces",
        "location": "westus2",
        "tags": {},
        "etag": null,
        "properties": {
          "friendlyName": "sdk_vnext_cli",
          "description": "",
          "storageAccount": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/sacfxu3euzmal3o",
          "keyVault": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Keyvault/vaults/kvtest5e2dbhruyffiq",
          "applicationInsights": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.insights/components/aicfxu3euzmal3o",
          "hbiWorkspace": false,
          "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
          "imageBuildCompute": null,
          "provisioningState": "Succeeded",
          "containerRegistry": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.ContainerRegistry/registries/crcfxu3euzmal3o",
          "acrSkuTier": "Basic",
          "notebookInfo": {
            "resourceId": "c0b71b528e9c4a429ed24de6bb749e85",
            "fqdn": "ml-sdkvnextcli-westus2-60073e53-722a-4f65-9800-09c562dd3717.westus2.notebooks.azure.net",
            "isPrivateLinkEnabled": false,
            "notebookPreparationError": null
          },
          "storageHnsEnabled": false,
          "workspaceId": "60073e53-722a-4f65-9800-09c562dd3717",
          "linkedModelInventoryArmId": null,
          "privateLinkCount": 0,
          "publicNetworkAccess": "Enabled",
          "discoveryUrl": "https://westus2.api.azureml.ms/discovery",
          "mlFlowTrackingUri": "azureml://westus2.api.azureml.ms/mlflow/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli",
          "sdkTelemetryAppInsightsKey": "73498d6d-b9a0-4d3b-9a6c-84285b86bea8",
          "sasGetterUri": ""
        },
        "identity": {
          "type": "SystemAssigned",
          "principalId": "381b607c-7a46-41a7-8cef-a65113e0923f",
          "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
        },
        "sku": {
          "name": "Basic",
          "tier": "Basic"
        },
        "systemData": {
          "createdAt": "2022-06-03T21:04:40.5842096Z",
          "createdBy": "neduvvur@microsoft.com",
          "createdByType": "User",
          "lastModifiedAt": "2022-06-03T21:04:40.5842096Z",
          "lastModifiedBy": "neduvvur@microsoft.com",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://westus2.api.azureml.ms/history/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/rundata",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "120",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": {
        "runId": "test_570691911342_2",
        "selectRunMetadata": true,
        "selectRunDefinition": true,
        "selectJobSpecification": true
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:14 GMT",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=15724800; includeSubDomains; preload",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-response-type": "standard",
        "x-request-time": "0.059"
      },
      "ResponseBody": {
        "runMetadata": {
          "runNumber": 1654795222,
          "rootRunId": "test_570691911342",
          "createdUtc": "2022-06-09T17:20:22.5579657\u002B00:00",
          "createdBy": {
            "userObjectId": "864f80ae-453f-47a9-83ec-dfd8dc588e03",
            "userPuId": null,
            "userIdp": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userAltSecId": null,
            "userIss": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "userName": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
            "upn": null
          },
          "userId": "864f80ae-453f-47a9-83ec-dfd8dc588e03",
          "token": null,
          "tokenExpiryTimeUtc": null,
          "error": null,
          "warnings": null,
          "revision": 11,
          "statusRevision": 1,
          "runUuid": "552ac9ab-40cd-4246-8923-3dbcfd87b22a",
          "parentRunUuid": "c0b9047c-df97-44f6-ae86-747edcf8527c",
          "rootRunUuid": "c0b9047c-df97-44f6-ae86-747edcf8527c",
          "lastStartTimeUtc": null,
          "currentComputeTime": null,
          "computeDuration": "00:00:32.2945396",
          "effectiveStartTimeUtc": null,
          "lastModifiedBy": {
            "userObjectId": "864f80ae-453f-47a9-83ec-dfd8dc588e03",
            "userPuId": null,
            "userIdp": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userAltSecId": null,
            "userIss": "azureml",
            "userTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "userName": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
            "upn": null
          },
          "lastModifiedUtc": "2022-06-09T17:20:31.8064561\u002B00:00",
          "duration": "00:00:32.2945396",
          "cancelationReason": null,
          "currentAttemptId": null,
          "runId": "test_570691911342_2",
          "parentRunId": "test_570691911342",
          "experimentId": "a694819f-b8b2-468d-92cb-cf433a712c1d",
          "status": "Completed",
          "startTimeUtc": "2022-06-09T17:20:32.1481654\u002B00:00",
          "endTimeUtc": "2022-06-09T17:21:04.442705\u002B00:00",
          "scheduleId": null,
          "displayName": "test_570691911342_2",
          "name": null,
          "dataContainerId": "dcid.test_570691911342_2",
          "description": null,
          "hidden": false,
          "runType": "azureml.scriptrun",
          "runTypeV2": {
            "orchestrator": "Execution",
            "traits": [
              "scriptRun",
              "remote",
              "Singularity",
              "AlmostCommonRuntime",
              "OsType:Linux",
              "CommonRuntime"
            ],
            "attribution": "HyperDrive",
            "computeType": "AmlcTrain"
          },
          "properties": {
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "_azureml.ComputeTargetType": "amlctrain",
            "ProcessInfoFile": "azureml-logs/process_info.json",
            "ProcessStatusFile": "azureml-logs/process_status.json"
          },
          "parameters": {},
          "actionUris": {
            "Cancel": "https://westus2.api.azureml.ms/execution/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/experiments/azure-ai-ml/runId/test_570691911342_2/cancel",
            "Diagnose": ""
          },
          "scriptName": null,
          "target": "testCompute",
          "uniqueChildRunComputeTargets": [],
          "tags": {
            "_aml_system_hyperparameters": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "hyperparameters": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_ComputeTargetStatus": "{\u0022AllocationState\u0022:\u0022steady\u0022,\u0022PreparingNodeCount\u0022:0,\u0022RunningNodeCount\u0022:0,\u0022CurrentNodeCount\u0022:4}"
          },
          "settings": {},
          "services": {},
          "inputDatasets": [],
          "outputDatasets": [],
          "runDefinition": null,
          "jobSpecification": null,
          "primaryMetricName": "accuracy",
          "createdFrom": null,
          "cancelUri": "https://westus2.api.azureml.ms/execution/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/experiments/azure-ai-ml/runId/test_570691911342_2/cancel",
          "completeUri": null,
          "diagnosticsUri": "",
          "computeRequest": {
            "nodeCount": 1,
            "gpuCount": 0
          },
          "compute": {
            "target": "testCompute",
            "targetType": "amlcompute",
            "vmSize": null,
            "instanceType": null,
            "instanceCount": 1,
            "gpuCount": 0,
            "priority": null,
            "region": null
          },
          "retainForLifetimeOfWorkspace": null,
          "queueingInfo": null,
          "inputs": null,
          "outputs": {
            "output1": {
              "assetId": "azureml://locations/westus2/workspaces/60073e53-722a-4f65-9800-09c562dd3717/data/azureml_test_570691911342_2_output_data_output1/versions/1",
              "type": "UriFolder"
            }
          }
        },
        "runDefinition": {
          "script": null,
          "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
          "useAbsolutePath": true,
          "arguments": [],
          "sourceDirectoryDataStore": null,
          "framework": "Python",
          "communicator": "None",
          "target": "testCompute",
          "dataReferences": {},
          "data": {},
          "outputData": {
            "output1": {
              "outputLocation": {
                "dataset": null,
                "dataPath": null,
                "uri": {
                  "path": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
                  "isFile": false
                },
                "type": "UriFolder"
              },
              "mechanism": "Mount",
              "additionalOptions": null,
              "environmentVariableName": null
            }
          },
          "datacaches": [],
          "jobName": null,
          "maxRunDurationSeconds": null,
          "nodeCount": 1,
          "instanceTypes": [],
          "priority": null,
          "credentialPassthrough": false,
          "identity": null,
          "environment": {
            "name": "AzureML-sklearn-0.24-ubuntu18.04-py37-cpu",
            "version": "1",
            "assetId": "azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "python": {
              "interpreterPath": "python",
              "userManagedDependencies": true,
              "condaDependencies": {
                "name": "project_environment",
                "dependencies": [
                  "python=3.6.2",
                  {
                    "pip": [
                      "azureml-defaults"
                    ]
                  }
                ],
                "channels": [
                  "anaconda",
                  "conda-forge"
                ]
              },
              "baseCondaEnvironment": null
            },
            "environmentVariables": {
              "EXAMPLE_ENV_VAR": "EXAMPLE_VALUE"
            },
            "docker": {
              "baseImage": null,
              "platform": {
                "os": "Linux",
                "architecture": "amd64"
              },
              "baseDockerfile": "FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\n\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\n\n# Create conda environment\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\n    python=3.7 pip=20.2.4\n\n# Prepend path to AzureML conda environment\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\n\n# Install pip dependencies\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\n                \u0027azureml-core==1.32.0\u0027 \\\n                \u0027azureml-defaults==1.32.0\u0027 \\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\n                \u0027scikit-learn==0.24.1\u0027\n\n# This is needed for mpi to locate libpython\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\n",
              "baseImageRegistry": {
                "address": null,
                "username": null,
                "password": null
              },
              "enabled": false,
              "arguments": []
            },
            "spark": {
              "repositories": [],
              "packages": [],
              "precachePackages": true
            },
            "inferencingStackVersion": null
          },
          "history": {
            "outputCollection": true,
            "directoriesToWatch": [
              "logs"
            ],
            "enableMLflowTracking": true
          },
          "spark": {
            "configuration": {}
          },
          "parallelTask": {
            "maxRetriesPerWorker": 0,
            "workerCountPerNode": 1,
            "terminalExitCodes": null,
            "configuration": {}
          },
          "amlCompute": {
            "name": null,
            "vmSize": null,
            "retainCluster": false,
            "clusterMaxNodeCount": null
          },
          "aiSuperComputer": {
            "instanceType": "D2",
            "imageVersion": "pytorch-1.7.0",
            "location": null,
            "aiSuperComputerStorageData": null,
            "interactive": false,
            "scalePolicy": null,
            "virtualClusterArmId": null,
            "tensorboardLogDirectory": null,
            "sshPublicKey": null,
            "sshPublicKeys": null,
            "enableAzmlInt": true,
            "priority": "Medium",
            "slaTier": "Standard",
            "userAlias": null
          },
          "kubernetesCompute": {
            "instanceType": null
          },
          "tensorflow": {
            "workerCount": 0,
            "parameterServerCount": 0
          },
          "mpi": {
            "processCountPerNode": 0
          },
          "pyTorch": {
            "communicationBackend": null,
            "processCount": null
          },
          "hdi": {
            "yarnDeployMode": "None"
          },
          "containerInstance": {
            "region": null,
            "cpuCores": 2.0,
            "memoryGb": 3.5
          },
          "exposedPorts": null,
          "docker": {
            "useDocker": true,
            "sharedVolumes": true,
            "shmSize": "2g",
            "arguments": []
          },
          "cmk8sCompute": {
            "configuration": {}
          },
          "commandReturnCodeConfig": {
            "returnCode": "Zero",
            "successfulReturnCodes": []
          },
          "environmentVariables": {
            "AZUREML_SWEEP_conv_size": "7",
            "AZUREML_SWEEP_dropout_rate": "0.3128719203828023",
            "AZUREML_SWEEP_lr": "0.08823242281671856"
          },
          "applicationEndpoints": {},
          "parameters": [
            {
              "name": "search_space.conv_size",
              "type": null,
              "value": "7",
              "isOptional": false
            },
            {
              "name": "inputs.conv_size",
              "type": null,
              "value": "7",
              "isOptional": false
            },
            {
              "name": "search_space.dropout_rate",
              "type": null,
              "value": "0.3128719203828023",
              "isOptional": false
            },
            {
              "name": "inputs.dropout_rate",
              "type": null,
              "value": "0.3128719203828023",
              "isOptional": false
            },
            {
              "name": "search_space.lr",
              "type": null,
              "value": "0.08823242281671856",
              "isOptional": false
            },
            {
              "name": "inputs.lr",
              "type": null,
              "value": "0.08823242281671856",
              "isOptional": false
            }
          ]
        },
        "jobSpecification": null,
        "systemSettings": null
      }
    },
    {
      "RequestUri": "https://westus2.api.azureml.ms/data/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/dataversion/batchGetResolvedUris",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "155",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": {
        "values": [
          "azureml://locations/westus2/workspaces/60073e53-722a-4f65-9800-09c562dd3717/data/azureml_test_570691911342_2_output_data_output1/versions/1"
        ]
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:14 GMT",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=15724800; includeSubDomains; preload",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-response-type": "standard",
        "x-request-time": "0.113"
      },
      "ResponseBody": {
        "values": {
          "azureml://locations/westus2/workspaces/60073e53-722a-4f65-9800-09c562dd3717/data/azureml_test_570691911342_2_output_data_output1/versions/1": {
            "uri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli/datastores/workspaceblobstore/paths/data_folder/test_570691911342_2/cleaned_data/",
            "type": "UriFolder"
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342_2?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:14 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c027a89f-b45d-46ea-955e-fd5343f83ec1",
        "x-ms-ratelimit-remaining-subscription-reads": "11971",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172415Z:c027a89f-b45d-46ea-955e-fd5343f83ec1",
        "x-request-time": "0.075"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342_2",
        "name": "test_570691911342_2",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_hyperparameters": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "hyperparameters": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_ComputeTargetStatus": "{\u0022AllocationState\u0022:\u0022steady\u0022,\u0022PreparingNodeCount\u0022:0,\u0022RunningNodeCount\u0022:0,\u0022CurrentNodeCount\u0022:4}"
          },
          "properties": {
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "_azureml.ComputeTargetType": "amlctrain",
            "ProcessInfoFile": "azureml-logs/process_info.json",
            "ProcessStatusFile": "azureml-logs/process_status.json"
          },
          "displayName": "test_570691911342_2",
          "status": "Completed",
          "experimentName": "azure-ai-ml",
          "services": {
            "Tracking": {
              "jobServiceType": "Tracking",
              "port": null,
              "endpoint": "azureml://westus2.api.azureml.ms/mlflow/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli?",
              "status": null,
              "errorMessage": null,
              "properties": null
            },
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342_2?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Command",
          "resources": {
            "instanceCount": 1,
            "instanceType": null,
            "properties": null
          },
          "codeId": null,
          "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
          "environmentId": "azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
          "inputs": {
            "search_space.conv_size": {
              "description": null,
              "jobInputType": "Literal",
              "value": "7"
            },
            "inputs.conv_size": {
              "description": null,
              "jobInputType": "Literal",
              "value": "7"
            },
            "search_space.dropout_rate": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.3128719203828023"
            },
            "inputs.dropout_rate": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.3128719203828023"
            },
            "search_space.lr": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.08823242281671856"
            },
            "inputs.lr": {
              "description": null,
              "jobInputType": "Literal",
              "value": "0.08823242281671856"
            }
          },
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342_2",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          },
          "distribution": null,
          "limits": {
            "timeout": null,
            "jobLimitsType": "Command"
          },
          "environmentVariables": {
            "AZUREML_SWEEP_conv_size": "7",
            "AZUREML_SWEEP_dropout_rate": "0.3128719203828023",
            "AZUREML_SWEEP_lr": "0.08823242281671856"
          },
          "parameters": {}
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:22.5579657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores?api-version=2022-05-01\u0026count=30\u0026isDefault=true\u0026orderByAsc=false",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:14 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "116772f8-1270-49a4-9047-5d0c2d9eb19d",
        "x-ms-ratelimit-remaining-subscription-reads": "11970",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172415Z:116772f8-1270-49a4-9047-5d0c2d9eb19d",
        "x-request-time": "0.112"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceblobstore",
            "name": "workspaceblobstore",
            "type": "Microsoft.MachineLearningServices/workspaces/datastores",
            "properties": {
              "description": null,
              "tags": null,
              "properties": null,
              "isDefault": true,
              "credentials": {
                "credentialsType": "AccountKey"
              },
              "datastoreType": "AzureBlob",
              "accountName": "sacfxu3euzmal3o",
              "containerName": "azureml-blobstore-60073e53-722a-4f65-9800-09c562dd3717",
              "endpoint": "core.windows.net",
              "protocol": "https",
              "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
            },
            "systemData": {
              "createdAt": "2022-06-03T21:04:54.4490272Z",
              "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
              "createdByType": "Application",
              "lastModifiedAt": "2022-06-03T21:04:55.1259563Z",
              "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
              "lastModifiedByType": "Application"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceblobstore?api-version=2022-05-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:15 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "85fb8580-ebb3-4a0c-80a3-5b032ac12a38",
        "x-ms-ratelimit-remaining-subscription-reads": "11969",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172415Z:85fb8580-ebb3-4a0c-80a3-5b032ac12a38",
        "x-request-time": "0.180"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "sacfxu3euzmal3o",
          "containerName": "azureml-blobstore-60073e53-722a-4f65-9800-09c562dd3717",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2022-06-03T21:04:54.4490272Z",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2022-06-03T21:04:55.1259563Z",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceblobstore/listSecrets?api-version=2022-05-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:15 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "75635d3e-d0ea-4a5c-8bee-fdcc63bffd5e",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172416Z:75635d3e-d0ea-4a5c-8bee-fdcc63bffd5e",
        "x-request-time": "0.298"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "Xrs2emqAqMS/ppRCp/cE6YBt3vaOinxbFAtp\u002B1uNtXZx6rdyZP4JyiFXgLOhv\u002Bm1wd0DKh\u002BFdB9f\u002BASt9EEucw=="
      }
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml-blobstore-60073e53-722a-4f65-9800-09c562dd3717?restype=container\u0026comp=list\u0026prefix=data_folder%2Ftest_570691911342_2%2Fcleaned_data%2F",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:18 GMT",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/xml",
        "Date": "Thu, 09 Jun 2022 17:24:16 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\uFEFF\u003C?xml version=\u00221.0\u0022 encoding=\u0022utf-8\u0022?\u003E\u003CEnumerationResults ServiceEndpoint=\u0022https://sacfxu3euzmal3o.blob.core.windows.net/\u0022 ContainerName=\u0022azureml-blobstore-60073e53-722a-4f65-9800-09c562dd3717\u0022\u003E\u003CPrefix\u003Edata_folder/test_570691911342_2/cleaned_data/\u003C/Prefix\u003E\u003CBlobs\u003E\u003CBlob\u003E\u003CName\u003Edata_folder/test_570691911342_2/cleaned_data/output.txt\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:20:58 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:20:58 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6B0298D7\u003C/Etag\u003E\u003CContent-Length\u003E12\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5\u003E5Z/5eUEET4XfUpfhwwLSYA==\u003C/Content-MD5\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003C/Blobs\u003E\u003CNextMarker /\u003E\u003C/EnumerationResults\u003E"
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml-blobstore-60073e53-722a-4f65-9800-09c562dd3717/data_folder/test_570691911342_2/cleaned_data/output.txt",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:18 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "12",
        "Content-Range": "bytes 0-11/12",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:16 GMT",
        "ETag": "\u00220x8DA4A3C6B0298D7\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:20:58 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-content-md5": "5Z/5eUEET4XfUpfhwwLSYA==",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:20:58 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "SGVsbG8gV29ybGQK"
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceartifactstore?api-version=2022-05-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:16 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "3c258eab-153c-4969-a21f-53a751121730",
        "x-ms-ratelimit-remaining-subscription-reads": "11968",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172417Z:3c258eab-153c-4969-a21f-53a751121730",
        "x-request-time": "0.121"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceartifactstore",
        "name": "workspaceartifactstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": false,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "sacfxu3euzmal3o",
          "containerName": "azureml",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "None"
        },
        "systemData": {
          "createdAt": "2022-06-03T21:04:54.4684059Z",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2022-06-03T21:04:55.2442941Z",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceartifactstore/listSecrets?api-version=2022-05-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "54fc5f8f-4916-4f85-a2c1-f8e7c5f6a1d0",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172417Z:54fc5f8f-4916-4f85-a2c1-f8e7c5f6a1d0",
        "x-request-time": "0.383"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "Xrs2emqAqMS/ppRCp/cE6YBt3vaOinxbFAtp\u002B1uNtXZx6rdyZP4JyiFXgLOhv\u002Bm1wd0DKh\u002BFdB9f\u002BASt9EEucw=="
      }
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml?restype=container\u0026comp=list\u0026prefix=ExperimentRun%2Fdcid.test_570691911342_2",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/xml",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\uFEFF\u003C?xml version=\u00221.0\u0022 encoding=\u0022utf-8\u0022?\u003E\u003CEnumerationResults ServiceEndpoint=\u0022https://sacfxu3euzmal3o.blob.core.windows.net/\u0022 ContainerName=\u0022azureml\u0022\u003E\u003CPrefix\u003EExperimentRun/dcid.test_570691911342_2\u003C/Prefix\u003E\u003CBlobs\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/outputs/output.txt\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CB9A5DD\u003C/Etag\u003E\u003CContent-Length\u003E20\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5\u003EEEekR5zxUH72RAWSif994w==\u003C/Content-MD5\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/cs_capability/cs-capability.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CCE8A57\u003C/Etag\u003E\u003CContent-Length\u003E22628\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/data-capability.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CDC9210\u003C/Etag\u003E\u003CContent-Length\u003E32855\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/rslex.log.2022-06-09-17\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CD9372D\u003C/Etag\u003E\u003CContent-Length\u003E3989\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/hosttools_capability/hosttools-capability.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:20:32 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6C9C5E1F\u003C/Etag\u003E\u003CContent-Length\u003E55792\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/execution-wrapper.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CD31D90\u003C/Etag\u003E\u003CContent-Length\u003E14036\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/lifecycler.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:20:32 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6C997856\u003C/Etag\u003E\u003CContent-Length\u003E28057\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/user_logs/std_log.txt\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CB11B9E\u003C/Etag\u003E\u003CContent-Length\u003E125\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003C/Blobs\u003E\u003CNextMarker /\u003E\u003C/EnumerationResults\u003E"
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/outputs/output.txt",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "20",
        "Content-Range": "bytes 0-19/20",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6CB9A5DD\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-content-md5": "EEekR5zxUH72RAWSif994w==",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "SGVsbG8gRGVmYXVsdCBXb3JsZAo="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/cs_capability/cs-capability.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "22628",
        "Content-Range": "bytes 0-22627/22628",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6CCE8A57\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": ""
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/data-capability.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "32855",
        "Content-Range": "bytes 0-32854/32855",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6CDC9210\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\"
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/rslex.log.2022-06-09-17",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "3989",
        "Content-Range": "bytes 0-3988/3989",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6CD9372D\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "MjAyMi0wNi0wOVQxNzoyMDo1Ni43NTM3OTRaICBJTkZPIHJzbGV4X2Z1c2U6OmRpcmVjdF92b2x1bWVfbW91bnQ6Om9wdGlvbnM6IFtyc2xleC1mdXNlOjpEaXJlY3RWb2x1bWVPcHRpb25zXSBFbnZpcm9ubWVudCB2YXJpYWJsZSAiREFUQVNFVF9NT1VOVF9CTE9DS19CQVNFRF9DQUNIRV9FTkFCTEVEIiBoYXMgYmVlbiBzZXQgdG8gdHJ1ZSBlbnZfdmFyaWFibGVfbmFtZT0iREFUQVNFVF9NT1VOVF9CTE9DS19CQVNFRF9DQUNIRV9FTkFCTEVEIiBlbnZfdmFyaWFibGVfdmFsdWU9dHJ1ZSBkZXNjcmlwdG9yPSJyc2xleC1mdXNlOjpEaXJlY3RWb2x1bWVPcHRpb25zOjpjb25maWdfZW52X3NldCIKMjAyMi0wNi0wOVQxNzoyMDo1Ni44NjM2OTdaICBJTkZPIHJzbGV4X2F6dXJlbWw6OmRhdGFfc3RvcmU6OnJlc29sdmVyOiBbQ2FjaGVkUmVzb2x2ZXI6OnJlc29sdmUoKV0gZGF0YXN0b3JlIHJlc29sdmVkIGRhdGFzdG9yZV9uYW1lPVNvbWUoIndvcmtzcGFjZWJsb2JzdG9yZSIpIGRhdGFzdG9yZV90eXBlPVNvbWUoQXp1cmVCbG9iKQoyMDIyLTA2LTA5VDE3OjIwOjU2Ljg5ODk3MVogIFdBUk4gcnVzdGxzOjpjaGVjazogUmVjZWl2ZWQgYSBTZXJ2ZXJIZWxsb0RvbmUgaGFuZHNoYWtlIG1lc3NhZ2Ugd2hpbGUgZXhwZWN0aW5nIFtDZXJ0aWZpY2F0ZVJlcXVlc3RdICAgIAoyMDIyLTA2LTA5VDE3OjIwOjU2LjkxNjQyNlogIFdBUk4gcnNsZXhfZnVzZTo6ZGlyZWN0X3ZvbHVtZV9tb3VudDo6ZGlyZWN0X3ZvbHVtZV9tb3VudDogW3JzbGV4LWZ1c2U6OmRpcmVjdC12b2x1bWUtbW91bnQ6Om5ldygpXSByZWFkIHdyaXRlIHBhdGggbm90IGZvdW5kLCB0cnkgdG8gY3JlYXRlLgoyMDIyLTA2LTA5VDE3OjIwOjU2Ljk1MzU3OFogIFdBUk4gcnVzdGxzOjpjaGVjazogUmVjZWl2ZWQgYSBTZXJ2ZXJIZWxsb0RvbmUgaGFuZHNoYWtlIG1lc3NhZ2Ugd2hpbGUgZXhwZWN0aW5nIFtDZXJ0aWZpY2F0ZVJlcXVlc3RdICAgIAoyMDIyLTA2LTA5VDE3OjIwOjU2Ljk3MzA0N1ogIElORk8gcnNsZXhfZnVzZTo6ZGlyZWN0X3ZvbHVtZV9tb3VudDo6ZGlyZWN0X3ZvbHVtZV9tb3VudDogW3JzbGV4LWZ1c2U6OkRpcmVjdFZvbHVtZU1vdW50OjpuZXcoKV0gRGlyZWN0IHZvbHVtZSBtb3VudCBjcmVhdGVkLiBoYW5kbGVyPUFtbERhdGFzdG9yZSBvcHRpb25zPURpcmVjdFZvbHVtZU9wdGlvbnMgeyBpc19zaW5nbGVfZmlsZTogU29tZShmYWxzZSksIGRlZmF1bHRfcGVybWlzc2lvbjogU29tZSg1MTEpLCBhdHRyaWJ1dGVfY2FjaGVfZW50cnlfdHRsOiAxODQ0Njc0NDA3MzcwOTU1MTYxNS45OTk5OTk5OTlzLCBkaXNrX2NhY2hlX29wdGlvbnM6IERpc2tDYWNoZU9wdGlvbnMgeyBjYWNoZV9kaXJfcGF0aDogTm9uZSwgcmVzZXJ2ZWRfZnJlZV9kaXNrX3NwYWNlOiAxNTcyODY0MDAsIGNhY2hlX2xpbWl0OiBVbmxpbWl0ZWQsIHBydW5lX3RocmVzaG9sZDogMS4wLCBwcnVuZV90YXJnZXQ6IDAuNywgX2NhY2hlX3Jlc291cmNlc19waGFudG9tOiBQaGFudG9tRGF0YSB9LCBzdHJlYW1pbmdfcmVhZF9vcHRpb25zOiBTdHJlYW1pbmdSZWFkT3B0aW9ucyB7IGJsb2NrX3NpemU6IDIwOTcxNTIsIGJ1ZmZlcmVkX2Jsb2Nrc19jb3VudDogMzIsIHJlYWRpbmdfdGhyZWFkczogMzIgfSwgYmxvY2tfYmFzZWRfcmVhZGluZ19vcHRpb25zOiBTb21lKEJsb2NrQmFzZWRSZWFkaW5nT3B0aW9ucyB7IG1lbW9yeV9jYWNoZV9vcHRpb25zOiBTb21lKE1lbW9yeUNhY2hlT3B0aW9ucyB7IGNhY2hlX3NpemU6IDEzNDIxNzcyOCB9KSwgZmlsZV9jYWNoZV9vcHRpb25zOiBTb21lKEJsb2NrQmFzZWRGaWxlQ2FjaGVXcml0ZU9wdGlvbnMgeyBwZW5kaW5nX3dyaXRlc19xdWV1ZV9zaXplOiA1MzY4NzA5MTIsIHdyaXRlcl90aHJlYWRzOiAxNiB9KSB9KSwgbW91bnRfbW9kZTogQ3JlYXRlQW5kV3JpdGUgfQoyMDIyLTA2LTA5VDE3OjIwOjU2Ljk3MzE4NVogIElORk8gbmV3e29wdGlvbnM9TW91bnRPcHRpb25zIHsgYWxsb3dfb3RoZXI6IHRydWUsIGZ1c2VfY2FjaGVfdGltZW91dDogNjAwcywgdW5tb3VudF90aW1lb3V0OiAzMHMgfX06IHJzbGV4X2Z1c2U6OmZ1c2VfZnM6OmZ1c2VfbW91bnQ6IGNsb3NlIHRpbWUuYnVzeT0yMC40wrVzIHRpbWUuaWRsZT0xOC42wrVzCjIwMjItMDYtMDlUMTc6MjA6NTYuOTczNjUxWiAgSU5GTyByc2xleF9mdXNlOjpmdXNlX2ZzOjpmdXNlX21vdW50OiBbcnNsZXgtZnVzZTo6RnVzZU1vdW50Ojptb3VudF0gbW91bnRpbmcgZmlsZXN5c3RlbSB3aXRoIG1vdW50IGFyZ3VtZW50cyBbImRhdGFzZXRfdm9sdW1lX21vdW50IiwgIi1vIiwgImFsbG93X290aGVyIiwgIi1vIiwgImF0dHJfdGltZW91dD0wIiwgIi1vIiwgImVudHJ5X3RpbWVvdXQ9NjAwIiwgIi1vIiwgImJpZ193cml0ZXMiLCAiLW8iLCAiZnNuYW1lPXJzbGV4X3ZvbHVtZV9tb3VudFtBbWxEYXRhc3RvcmVdIl0uIExpYmZ1c2UgdmVyc2lvbiAyOCBmdXNlX2FyZ3VtZW50cz1bImRhdGFzZXRfdm9sdW1lX21vdW50IiwgIi1vIiwgImFsbG93X290aGVyIiwgIi1vIiwgImF0dHJfdGltZW91dD0wIiwgIi1vIiwgImVudHJ5X3RpbWVvdXQ9NjAwIiwgIi1vIiwgImJpZ193cml0ZXMiLCAiLW8iLCAiZnNuYW1lPXJzbGV4X3ZvbHVtZV9tb3VudFtBbWxEYXRhc3RvcmVdIl0gZnVzZV92ZXJzaW9uPTI4IHBpZD0xOSBtb3VudF9wb2ludD0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkL291dHB1dDEKMjAyMi0wNi0wOVQxNzoyMDo1Ny45NzQ1MjdaICBJTkZPIHJzbGV4X2Z1c2U6OmZ1c2VfZnM6OmZ1c2VfbW91bnQ6IFtyc2xleC1mdXNlOjpGdXNlTW91bnQ6Om1vdW50XSBmaWxlc3lzdGVtIG1vdW50ZWQgcGlkPTE5IG1vdW50X3BvaW50PS9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9kYXRhLWNhcGFiaWxpdHkvd2Qvb3V0cHV0MQoyMDIyLTA2LTA5VDE3OjIwOjU4LjAxNjg4NFogIElORk8gY29weTpkb19zZXF1ZW50aWFsX2NvcHl7ZmlsZV9zaXplPTEyfTogcnNsZXhfY29yZTo6ZmlsZV9pbzo6c3RyZWFtX2NvcGllcjogY2xvc2UgdGltZS5idXN5PTguNzJtcyB0aW1lLmlkbGU9NC41MMK1cwoyMDIyLTA2LTA5VDE3OjIwOjU4LjAxNjkzMVogIElORk8gY29weTogcnNsZXhfY29yZTo6ZmlsZV9pbzo6c3RyZWFtX2NvcGllcjogW1N0cmVhbUNvcGllcjo6Y29weSgpXSBjb3BpZWQgZmlsZSBzaXplPTEyIGhhbmRsZXI9IkxvY2FsIiBkZXN0aW5hdGlvbj1vdXRwdXQudHh0IGR1cmF0aW9uPTAuMDA4NzkwNDQ5IHNlcXVlbnRpYWw9dHJ1ZQoyMDIyLTA2LTA5VDE3OjIwOjU4LjAxNjk4OFogIElORk8gY29weTogcnNsZXhfY29yZTo6ZmlsZV9pbzo6c3RyZWFtX2NvcGllcjogY2xvc2UgdGltZS5idXN5PTguODdtcyB0aW1lLmlkbGU9Ny41MMK1cwoyMDIyLTA2LTA5VDE3OjIxOjAxLjAzOTQxNVogIElORk8gcnNsZXhfZnVzZTo6ZnVzZV9mczo6ZnVzZV9tb3VudDogW3JzbGV4LWZ1c2U6OkZ1c2VNb3VudDo6dW5tb3VudF0gc3RhcnRpbmcgZmlsZXN5c3RlbSB1bm1vdW50IHBpZD0xOSBtb3VudF9wb2ludD0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkL291dHB1dDEKMjAyMi0wNi0wOVQxNzoyMTowMS4wNDAxNjFaICBJTkZPIHJzbGV4X2Z1c2U6OmZ1c2VfZnM6OmZ1c2VfbW91bnQ6OmZzX29wZXJhdGlvbnM6IFtyc2xleC1mdXNlOjpGdXNlTW91bnQ6OmRlc3Ryb3ldIGRlc3Ryb3lpbmcgZmlsZSBzeXN0ZW0KMjAyMi0wNi0wOVQxNzoyMTowMS4wNDAyMDZaICBJTkZPIHJzbGV4X2Z1c2U6OmRpcmVjdF92b2x1bWVfbW91bnQ6OmRpcmVjdF92b2x1bWVfbW91bnQ6IFtyc2xleC1mdXNlOjpEaXJlY3RWb2x1bWVPcHRpb25zOjpkZXN0cm95KCldIGRlc3Ryb3lpbmcgZmlsZXN5c3RlbSBoYW5kbGVyPUFtbERhdGFzdG9yZSBwaWQ9MTkgb3BlbmVkX2ZpbGVfaGFuZGxlcz0tMQo="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/hosttools_capability/hosttools-capability.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "55792",
        "Content-Range": "bytes 0-55791/55792",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6C9C5E1F\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:20:32 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": ""
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/execution-wrapper.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "14036",
        "Content-Range": "bytes 0-14035/14036",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6CD31D90\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "MjAyMi0wNi0wOVQxNzoyMDozMi45MTg0ODhaICBJTkZPIHRlbGVtZXRyeTogam9iX3RlbGVtZXRyeV9pbml0IGFydGlmYWN0X3R5cGU9aW5zdGFsbGVkIGJyYW5jaD1vcmlnaW4vZTYzYmIxNmE5NjEwZWJlZWU2OGRmYzVkZmJlMzYzYTMxYjkzZGQwNyBjaV9udW1iZXI9MjAyMjA1MzEuMiBjaV9uYW1lPUNvbW1vblJ1bnRpbWUtcHJvZC1idWlsZCBidWlsZF90aW1lPTIwMjItMDYtMDEgMDM6NTc6NTYuNTQ1NzQ5CjIwMjItMDYtMDlUMTc6MjA6MzIuOTMwOTQwWiAgSU5GTyBydW5fZXhlY3V0aW9uX3dyYXBwZXI6IGV4ZWN1dGlvbl93cmFwcGVyOiBTdWNjZXNzZnVsbHkgZHVtcGVkIGJvb3RzdHJhcHBpbmcgZW52aXJvbm1lbnQgdG8gZmlsZQoyMDIyLTA2LTA5VDE3OjIwOjMyLjkzMDk4NlogIElORk8gcnVuX2V4ZWN1dGlvbl93cmFwcGVyOiBleGVjdXRpb25fd3JhcHBlcjogRW5hYmxlIHN0ZCBsb2cgc3RyZWFtaW5nIGlzIG5vdCBzcGVjaWZpZWQgaW4gZXhlY3V0b3IgY29uZmlndXJhdGlvbiwgZGVmYXVsdCB0byBub3Qgc3RyZWFtIGxvZ3MgdG8gc3Rkb3V0IGFuZCBzdGRlcnIKMjAyMi0wNi0wOVQxNzoyMDozMi45MzA5OTlaICBJTkZPIHJ1bl9leGVjdXRpb25fd3JhcHBlcjogZXhlY3V0aW9uX3dyYXBwZXI6IEVuYWJsZSBzdGQgbG9nIHN0cmVhbWluZyBpcyBub3Qgc3BlY2lmaWVkIGluIGV4ZWN1dG9yIGNvbmZpZ3VyYXRpb24sIGRlZmF1bHQgdG8gaWdub3JlIHRlcm1pbmF0aW9uIHNpZ25hbHMKMjAyMi0wNi0wOVQxNzoyMDozMi45MzEwNTdaICBJTkZPIHJ1bl9leGVjdXRpb25fd3JhcHBlcjpleGVjdXRpb24td3JhcHBlcjo6cnVuX3NlcnZpY2V7ZXhlY3V0b3JfY29uZmlnPUV4ZWN1dG9yQ29uZmlnIHsgZXhlY3V0aW9uX3dvcmtpbmdfZGlyOiAiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkIiwgZXhlY3V0b3JfYWRkcmVzczogIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2V4ZWN1dG9yOjAiLCBsaWZlY3ljbGVyX2FkZHJlc3M6ICIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAiLCBkaXN0cmlidXRlZF9jb25maWc6IE5vbmUsIHVzZV9tcGlfcnNoX2FnZW50OiBTb21lKHRydWUpLCBkZWJ1Z19tb2RlOiBTb21lKGZhbHNlKSwgZXhlY3V0b3JfY29uZmlnOiBOb25lIH0gcGF0aF9tYXBwaW5nX2tpbmQ9Tm9uZSBlbmFibGVfc3RkX2xvZ19zdHJlYW1pbmc9ZmFsc2UgZW5hYmxlX3Rlcm1pbmF0aW9uX3NpZ25hbF9oYW5kbGluZz1mYWxzZSBkZWJ1Z19tb2RlPWZhbHNlIGVudl9kdW1wX3Jlc3VsdD1PaygoKSl9OiBleGVjdXRpb25fd3JhcHBlcjo6c2VydmljZTogc2VydmluZyBleGVjdXRpb24gc2VydmljZSBhdCBleGVjdXRvcl9hZGRyZXNzPS9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2V4ZWN1dG9yOjAKMjAyMi0wNi0wOVQxNzoyMDozMi45MzEyOTZaICBJTkZPIHJ1bl9leGVjdXRpb25fd3JhcHBlcjpleGVjdXRpb24td3JhcHBlcjo6cnVuX3NlcnZpY2V7ZXhlY3V0b3JfY29uZmlnPUV4ZWN1dG9yQ29uZmlnIHsgZXhlY3V0aW9uX3dvcmtpbmdfZGlyOiAiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkIiwgZXhlY3V0b3JfYWRkcmVzczogIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2V4ZWN1dG9yOjAiLCBsaWZlY3ljbGVyX2FkZHJlc3M6ICIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAiLCBkaXN0cmlidXRlZF9jb25maWc6IE5vbmUsIHVzZV9tcGlfcnNoX2FnZW50OiBTb21lKHRydWUpLCBkZWJ1Z19tb2RlOiBTb21lKGZhbHNlKSwgZXhlY3V0b3JfY29uZmlnOiBOb25lIH0gcGF0aF9tYXBwaW5nX2tpbmQ9Tm9uZSBlbmFibGVfc3RkX2xvZ19zdHJlYW1pbmc9ZmFsc2UgZW5hYmxlX3Rlcm1pbmF0aW9uX3NpZ25hbF9oYW5kbGluZz1mYWxzZSBkZWJ1Z19tb2RlPWZhbHNlIGVudl9kdW1wX3Jlc3VsdD1PaygoKSl9OiBjcl9jb3JlOiBTdWNjZXNzZnVsbHkgY29uZmlndXJlZCBjdXJyZW50IHByb2Nlc3MgdG8gaWdub3JlIHRlcm1pbmF0aW9uIHNpZ25hbHMKMjAyMi0wNi0wOVQxNzoyMDozMi45MzEzMjZaICBJTkZPIHJ1bl9leGVjdXRpb25fd3JhcHBlcjpleGVjdXRpb24td3JhcHBlcjo6cnVuX3NlcnZpY2V7ZXhlY3V0b3JfY29uZmlnPUV4ZWN1dG9yQ29uZmlnIHsgZXhlY3V0aW9uX3dvcmtpbmdfZGlyOiAiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkIiwgZXhlY3V0b3JfYWRkcmVzczogIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2V4ZWN1dG9yOjAiLCBsaWZlY3ljbGVyX2FkZHJlc3M6ICIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAiLCBkaXN0cmlidXRlZF9jb25maWc6IE5vbmUsIHVzZV9tcGlfcnNoX2FnZW50OiBTb21lKHRydWUpLCBkZWJ1Z19tb2RlOiBTb21lKGZhbHNlKSwgZXhlY3V0b3JfY29uZmlnOiBOb25lIH0gcGF0aF9tYXBwaW5nX2tpbmQ9Tm9uZSBlbmFibGVfc3RkX2xvZ19zdHJlYW1pbmc9ZmFsc2UgZW5hYmxlX3Rlcm1pbmF0aW9uX3NpZ25hbF9oYW5kbGluZz1mYWxzZSBkZWJ1Z19tb2RlPWZhbHNlIGVudl9kdW1wX3Jlc3VsdD1PaygoKSl9OnNlcnZlOiBncnBjX3V0aWxzOjplbmRwb2ludDo6c2VydmU6IHNlcnZpbmcgZ1JQQyBzZXJ2aWNlIGVuZHBvaW50PVVkcygiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvZXhlY3V0b3I6MCIpIHJldHJ5PUV4cG9uZW50aWFsQmFja29mZlJldHJ5IHsgcmV0cnlfZGVsYXlfc2VjczogMiwgZGVsYXlfZmFjdG9yOiAxMDAwLCBudW1fcmV0cmllczogMyB9CjIwMjItMDYtMDlUMTc6MjA6NTcuOTc5OTQ3WiAgSU5GTyBFeGVjdXRpb25TZXJ2aWNlcjo6cnVuOiBncnBjX3V0aWxzOjpzZXJ2ZXI6IEdvdCBncnBjIHJlcXVlc3QgbmFtZT0icnVuIiByZW1vdGVfYWRkcj1Ob25lCjIwMjItMDYtMDlUMTc6MjA6NTcuOTgwMDI1WiAgSU5GTyBFeGVjdXRpb25TZXJ2aWNlcjo6cnVuOkV4ZWN1dGlvblNlcnZpY2VyOjpzcGF3bl9leGVjdXRpb257ZmluYWxpemF0aW9uPU5vbmV9OiBleGVjdXRpb25fd3JhcHBlcjo6c2VydmljZTogc3Bhd25fZXhlY3V0aW9uIHJlcXVlc3QgaWQ9IjlmOTFhMzAxLTYxMzQtNDMyYi1hZGZhLTJkYTU4OTNkMGE4NyIgY2xpZW50X2FkZHJlc3M9U29tZSgiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIikKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODAxMDBaICBXQVJOIEV4ZWN1dGlvblNlcnZpY2VyOjpydW46RXhlY3V0aW9uU2VydmljZXI6OnNwYXduX2V4ZWN1dGlvbntmaW5hbGl6YXRpb249Tm9uZX06aW5qZWN0X2xlZ2FjeV9lbnZfdmFyc3tkaXN0cmlidXRlZF9jb25maWc9Tm9uZX06IGV4ZWN1dGlvbl93cmFwcGVyOjpsZWdhY3lfZW52X3ZhcnM6IFNraXAgaW5qZWN0aW5nIGxlZ2FjeSBlbnYgdmFycywgZGlzdHJpYnV0ZWQgY29uZmlnIGlzIE5vbmUKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODAxMjNaICBJTkZPIEV4ZWN1dGlvblNlcnZpY2VyOjpydW46RXhlY3V0aW9uU2VydmljZXI6OnNwYXduX2V4ZWN1dGlvbntmaW5hbGl6YXRpb249Tm9uZX06aW5qZWN0X2xlZ2FjeV9lbnZfdmFyc3tkaXN0cmlidXRlZF9jb25maWc9Tm9uZX06IGV4ZWN1dGlvbl93cmFwcGVyOjpsZWdhY3lfZW52X3ZhcnM6IGNsb3NlIHRpbWUuYnVzeT0yMi42wrVzIHRpbWUuaWRsZT0zLjQwwrVzCjIwMjItMDYtMDlUMTc6MjA6NTcuOTgwMjIxWiAgSU5GTyBFeGVjdXRpb25TZXJ2aWNlcjo6cnVuOkV4ZWN1dGlvblNlcnZpY2VyOjpzcGF3bl9leGVjdXRpb257ZmluYWxpemF0aW9uPU5vbmV9OiBleGVjdXRpb25fd3JhcHBlcjo6aW5maW5pYmFuZF91dGlsczogSXMgSW5maW5pQmFuZCBkZXZpY2UgcHJlc2VudDogZmFsc2UgaW5maW5pYmFuZF9kZXZpY2VfcGF0aD0iL2Rldi9pbmZpbmliYW5kL3V2ZXJiczAiCjIwMjItMDYtMDlUMTc6MjA6NTcuOTgwMjY0WiAgSU5GTyBFeGVjdXRpb25TZXJ2aWNlcjo6cnVuOkV4ZWN1dGlvblNlcnZpY2VyOjpzcGF3bl9leGVjdXRpb257ZmluYWxpemF0aW9uPU5vbmV9OiBleGVjdXRpb25fd3JhcHBlcjo6c2VydmljZTogU3Bhd25pbmcgZXhlY3V0aW9uCjIwMjItMDYtMDlUMTc6MjA6NTcuOTgzNjU2WiAgSU5GTyBFeGVjdXRpb25TZXJ2aWNlcjo6cnVuOkV4ZWN1dGlvblNlcnZpY2VyOjpzcGF3bl9leGVjdXRpb257ZmluYWxpemF0aW9uPU5vbmV9OkV4ZWN1dGlvbjo6cGFyc2VfY29tbWFuZHM6IGV4ZWN1dGlvbl93cmFwcGVyOjpjb21tYW5kX3Jlc29sdmVyczo6c2hlbGw6IFVzaW5nIGRldGVjdGVkIHVzZXIgc2hlbGw6ICIvYmluL2Jhc2giIHNoZWxsPSIvYmluL2Jhc2giCjIwMjItMDYtMDlUMTc6MjA6NTcuOTgzNzMyWiAgSU5GTyBFeGVjdXRpb25TZXJ2aWNlcjo6cnVuOkV4ZWN1dGlvblNlcnZpY2VyOjpzcGF3bl9leGVjdXRpb257ZmluYWxpemF0aW9uPU5vbmV9OkV4ZWN1dGlvbjo6cGFyc2VfY29tbWFuZHM6IGV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb246IGNsb3NlIHRpbWUuYnVzeT0zLjI1bXMgdGltZS5pZGxlPTMuNDDCtXMKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODQwNDZaICBJTkZPIEV4ZWN1dGlvblNlcnZpY2VyOjpydW46RXhlY3V0aW9uU2VydmljZXI6OnNwYXduX2V4ZWN1dGlvbntmaW5hbGl6YXRpb249Tm9uZX06RXhlY3V0aW9uOjpzcGF3bjogZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbjogU3Bhd25pbmcgdGFyZ2V0IHByb2Nlc3MKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODU0OTdaICBJTkZPIEV4ZWN1dGlvblNlcnZpY2VyOjpydW46RXhlY3V0aW9uU2VydmljZXI6OnNwYXduX2V4ZWN1dGlvbntmaW5hbGl6YXRpb249Tm9uZX06RXhlY3V0aW9uOjpzcGF3bjogZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbjogZXhlY3V0aW9uIHByb2Nlc3Mgc3Bhd25lZCBwaWQ9MjQKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODYyNTRaICBJTkZPIGV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb246IHN0YXJ0IHdhaXRpbmcgZm9yIHByb2Nlc3NlcyBleGVjdXRpb24gdG8gY29tcGxldGUgbnVtX3Byb2Nlc3Nlcz0xCjIwMjItMDYtMDlUMTc6MjA6NTcuOTg2MzM0WiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTogZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbjo6cHJvY2Vzc19tYW5hZ2VyOiBQcm9jZXNzTWFuYWdlckV4ZWN1dGlvbiBzdGF0ZSBjaGFuZ2luZyBmcm9tIFBlbmRpbmdFeGVjdXRpb24gdG8gUGVuZGluZ0V4ZWN1dGlvbgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1NjYxNFogIElORk8gRXhlY3V0aW9uOjp3YWl0X2Zvcl9jb21wbGV0aW9ue3BhcmVudF9zcGFuPVNwYW4geyBuYW1lOiAiRXhlY3V0aW9uOjpzcGF3biIsIGxldmVsOiBMZXZlbChJbmZvKSwgdGFyZ2V0OiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGlkOiBJZCg2NzU1Njc0MzE4OTYyNjkxKSwgbW9kdWxlX3BhdGg6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgbGluZTogMTAyLCBmaWxlOiAiZXhlY3V0b3IvZXhlY3V0aW9uLXdyYXBwZXIvc3JjL2V4ZWN1dGlvbi9tb2QucnMiIH0gcHJvY2Vzc19tYW5hZ2VyPU11dGV4IHsgZGF0YTogUHJvY2Vzc01hbmFnZXIgeyBkYW5nbGluZ19wcm9jZXNzZXM6IFtdLCB1c2VyX3Byb2Nlc3NfZ3JvdXBzOiBbMjRdIH0gfX06IGV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb246OnByb2Nlc3NfbWFuYWdlcjogUHJvY2Vzc01hbmFnZXJFeGVjdXRpb24gc3RhdGUgY2hhbmdpbmcgZnJvbSBQZW5kaW5nRXhlY3V0aW9uIHRvIEV4ZWN1dGlvbkNvbXBsZXRlZAoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1NjY5OVogIElORk8gRXhlY3V0aW9uOjp3YWl0X2Zvcl9jb21wbGV0aW9ue3BhcmVudF9zcGFuPVNwYW4geyBuYW1lOiAiRXhlY3V0aW9uOjpzcGF3biIsIGxldmVsOiBMZXZlbChJbmZvKSwgdGFyZ2V0OiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGlkOiBJZCg2NzU1Njc0MzE4OTYyNjkxKSwgbW9kdWxlX3BhdGg6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgbGluZTogMTAyLCBmaWxlOiAiZXhlY3V0b3IvZXhlY3V0aW9uLXdyYXBwZXIvc3JjL2V4ZWN1dGlvbi9tb2QucnMiIH0gcHJvY2Vzc19tYW5hZ2VyPU11dGV4IHsgZGF0YTogUHJvY2Vzc01hbmFnZXIgeyBkYW5nbGluZ19wcm9jZXNzZXM6IFtdLCB1c2VyX3Byb2Nlc3NfZ3JvdXBzOiBbMjRdIH0gfX06IGV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb246IEdhdGhlcmVkIGV4ZWN1dGlvbiByZXN1bHQgZm9yIHJhbmsgMCBwcm9jZXNzX3Jhbms9MCBleGl0X2NvZGU9MCBzdGRlcnJfcGF0aD1Tb21lKCJ1c2VyX2xvZ3Mvc3RkX2xvZy50eHQiKQoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1Njc0NlogIElORk8gRXhlY3V0aW9uOjp3YWl0X2Zvcl9jb21wbGV0aW9ue3BhcmVudF9zcGFuPVNwYW4geyBuYW1lOiAiRXhlY3V0aW9uOjpzcGF3biIsIGxldmVsOiBMZXZlbChJbmZvKSwgdGFyZ2V0OiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGlkOiBJZCg2NzU1Njc0MzE4OTYyNjkxKSwgbW9kdWxlX3BhdGg6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgbGluZTogMTAyLCBmaWxlOiAiZXhlY3V0b3IvZXhlY3V0aW9uLXdyYXBwZXIvc3JjL2V4ZWN1dGlvbi9tb2QucnMiIH0gcHJvY2Vzc19tYW5hZ2VyPU11dGV4IHsgZGF0YTogUHJvY2Vzc01hbmFnZXIgeyBkYW5nbGluZ19wcm9jZXNzZXM6IFtdLCB1c2VyX3Byb2Nlc3NfZ3JvdXBzOiBbMjRdIH0gfX06IGV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb246IGV4ZWN1dGlvbiBwcm9jZXNzIGNvbXBsZXRlZC4KMjAyMi0wNi0wOVQxNzoyMTowMC42NTY3OTdaICBXQVJOIEV4ZWN1dGlvbjo6d2FpdF9mb3JfY29tcGxldGlvbntwYXJlbnRfc3Bhbj1TcGFuIHsgbmFtZTogIkV4ZWN1dGlvbjo6c3Bhd24iLCBsZXZlbDogTGV2ZWwoSW5mbyksIHRhcmdldDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBpZDogSWQoNjc1NTY3NDMxODk2MjY5MSksIG1vZHVsZV9wYXRoOiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGxpbmU6IDEwMiwgZmlsZTogImV4ZWN1dG9yL2V4ZWN1dGlvbi13cmFwcGVyL3NyYy9leGVjdXRpb24vbW9kLnJzIiB9IHByb2Nlc3NfbWFuYWdlcj1NdXRleCB7IGRhdGE6IFByb2Nlc3NNYW5hZ2VyIHsgZGFuZ2xpbmdfcHJvY2Vzc2VzOiBbXSwgdXNlcl9wcm9jZXNzX2dyb3VwczogWzI0XSB9IH19OkV4ZWN1dGlvbkZpbmFsaXplcjo6b25fZXhpdDpFeGVjdXRpb25GaW5hbGl6ZXI6OmNvbXBsZXRlX2V4ZWN1dGlvbjogZ3JwY191dGlsczo6c3BhbjogZmFpbGVkIHRvIGluamVjdCBzcGFuIGNvbnRleHQgdG8gZ3JwYyByZXF1ZXN0CjIwMjItMDYtMDlUMTc6MjE6MDAuNjU2ODQ0WiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTpFeGVjdXRpb25GaW5hbGl6ZXI6Om9uX2V4aXQ6RXhlY3V0aW9uRmluYWxpemVyOjpjb21wbGV0ZV9leGVjdXRpb246ZXhlY3V0aW9uLXdyYXBwZXI6OmNvbm5lY3RfdG9fY2FsbGJhY2tfc2VydmljZTogZXhlY3V0aW9uX3dyYXBwZXI6OnNlcnZpY2U6IGNvbm5lY3RpbmcgdG8gY2FsbGJhY2sgZW5kcG9pbnQgY2xpZW50X2FkZHJlc3M9L21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU3MDA3WiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTpFeGVjdXRpb25GaW5hbGl6ZXI6Om9uX2V4aXQ6RXhlY3V0aW9uRmluYWxpemVyOjpjb21wbGV0ZV9leGVjdXRpb246ZXhlY3V0aW9uLXdyYXBwZXI6OmNvbm5lY3RfdG9fY2FsbGJhY2tfc2VydmljZTpjb25uZWN0OiBncnBjX3V0aWxzOjplbmRwb2ludDo6Y29ubmVjdDogQ29ubmVjdGluZyB0byBnUlBDIHNlcnZpY2UgZW5kcG9pbnQ9VWRzKCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAiKSByZXRyeT1GaXhlZEludGVydmFsUmV0cnkgeyBhdHRlbXB0X3RpbWVvdXRfbWlsbGlzOiA1MCwgcmV0cnlfZGVsYXlfbWlsbGlzOiAxMCwgbWF4X2R1cmF0aW9uOiA2MDBzIH0KMjAyMi0wNi0wOVQxNzoyMTowMC42NTczODlaICBJTkZPIEV4ZWN1dGlvbjo6d2FpdF9mb3JfY29tcGxldGlvbntwYXJlbnRfc3Bhbj1TcGFuIHsgbmFtZTogIkV4ZWN1dGlvbjo6c3Bhd24iLCBsZXZlbDogTGV2ZWwoSW5mbyksIHRhcmdldDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBpZDogSWQoNjc1NTY3NDMxODk2MjY5MSksIG1vZHVsZV9wYXRoOiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGxpbmU6IDEwMiwgZmlsZTogImV4ZWN1dG9yL2V4ZWN1dGlvbi13cmFwcGVyL3NyYy9leGVjdXRpb24vbW9kLnJzIiB9IHByb2Nlc3NfbWFuYWdlcj1NdXRleCB7IGRhdGE6IFByb2Nlc3NNYW5hZ2VyIHsgZGFuZ2xpbmdfcHJvY2Vzc2VzOiBbXSwgdXNlcl9wcm9jZXNzX2dyb3VwczogWzI0XSB9IH19OkV4ZWN1dGlvbkZpbmFsaXplcjo6b25fZXhpdDpFeGVjdXRpb25GaW5hbGl6ZXI6OmNvbXBsZXRlX2V4ZWN1dGlvbjpleGVjdXRpb24td3JhcHBlcjo6Y29ubmVjdF90b19jYWxsYmFja19zZXJ2aWNlOmNvbm5lY3Q6IGdycGNfdXRpbHM6OmVuZHBvaW50Ojpjb25uZWN0OiBTdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvIGdSUEMgc2VydmljZSBlbmRwb2ludD1VZHMoIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2xpZmVjeWNsZXI6MCIpCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU3NDM4WiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTpFeGVjdXRpb25GaW5hbGl6ZXI6Om9uX2V4aXQ6RXhlY3V0aW9uRmluYWxpemVyOjpjb21wbGV0ZV9leGVjdXRpb246ZXhlY3V0aW9uLXdyYXBwZXI6OmNvbm5lY3RfdG9fY2FsbGJhY2tfc2VydmljZTpjb25uZWN0OiBncnBjX3V0aWxzOjplbmRwb2ludDo6Y29ubmVjdDogY2xvc2UgdGltZS5idXN5PTM2OcK1cyB0aW1lLmlkbGU9NjYuNcK1cwoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1NzQ3NlogIElORk8gRXhlY3V0aW9uOjp3YWl0X2Zvcl9jb21wbGV0aW9ue3BhcmVudF9zcGFuPVNwYW4geyBuYW1lOiAiRXhlY3V0aW9uOjpzcGF3biIsIGxldmVsOiBMZXZlbChJbmZvKSwgdGFyZ2V0OiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGlkOiBJZCg2NzU1Njc0MzE4OTYyNjkxKSwgbW9kdWxlX3BhdGg6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgbGluZTogMTAyLCBmaWxlOiAiZXhlY3V0b3IvZXhlY3V0aW9uLXdyYXBwZXIvc3JjL2V4ZWN1dGlvbi9tb2QucnMiIH0gcHJvY2Vzc19tYW5hZ2VyPU11dGV4IHsgZGF0YTogUHJvY2Vzc01hbmFnZXIgeyBkYW5nbGluZ19wcm9jZXNzZXM6IFtdLCB1c2VyX3Byb2Nlc3NfZ3JvdXBzOiBbMjRdIH0gfX06RXhlY3V0aW9uRmluYWxpemVyOjpvbl9leGl0OkV4ZWN1dGlvbkZpbmFsaXplcjo6Y29tcGxldGVfZXhlY3V0aW9uOmV4ZWN1dGlvbi13cmFwcGVyOjpjb25uZWN0X3RvX2NhbGxiYWNrX3NlcnZpY2U6IGV4ZWN1dGlvbl93cmFwcGVyOjpzZXJ2aWNlOiBjbG9zZSB0aW1lLmJ1c3k9NTg2wrVzIHRpbWUuaWRsZT02My45wrVzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MjQxWiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTpFeGVjdXRpb25GaW5hbGl6ZXI6Om9uX2V4aXQ6RXhlY3V0aW9uRmluYWxpemVyOjpjb21wbGV0ZV9leGVjdXRpb246IGV4ZWN1dGlvbl93cmFwcGVyOjpzZXJ2aWNlOiBDb21wbGV0ZWQgZXhlY3V0aW9uIGlkPTlmOTFhMzAxLTYxMzQtNDMyYi1hZGZhLTJkYTU4OTNkMGE4NwoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODI5MlogIElORk8gRXhlY3V0aW9uOjp3YWl0X2Zvcl9jb21wbGV0aW9ue3BhcmVudF9zcGFuPVNwYW4geyBuYW1lOiAiRXhlY3V0aW9uOjpzcGF3biIsIGxldmVsOiBMZXZlbChJbmZvKSwgdGFyZ2V0OiAiZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbiIsIGlkOiBJZCg2NzU1Njc0MzE4OTYyNjkxKSwgbW9kdWxlX3BhdGg6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgbGluZTogMTAyLCBmaWxlOiAiZXhlY3V0b3IvZXhlY3V0aW9uLXdyYXBwZXIvc3JjL2V4ZWN1dGlvbi9tb2QucnMiIH0gcHJvY2Vzc19tYW5hZ2VyPU11dGV4IHsgZGF0YTogUHJvY2Vzc01hbmFnZXIgeyBkYW5nbGluZ19wcm9jZXNzZXM6IFtdLCB1c2VyX3Byb2Nlc3NfZ3JvdXBzOiBbMjRdIH0gfX06RXhlY3V0aW9uRmluYWxpemVyOjpvbl9leGl0OkV4ZWN1dGlvbkZpbmFsaXplcjo6Y29tcGxldGVfZXhlY3V0aW9uOiBleGVjdXRpb25fd3JhcHBlcjo6c2VydmljZTogY2xvc2UgdGltZS5idXN5PTc0NsK1cyB0aW1lLmlkbGU9NzYxwrVzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MzA4WiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTpFeGVjdXRpb25GaW5hbGl6ZXI6Om9uX2V4aXQ6IGV4ZWN1dGlvbl93cmFwcGVyOjpzZXJ2aWNlOiBjbG9zZSB0aW1lLmJ1c3k9NzYywrVzIHRpbWUuaWRsZT03NzHCtXMKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgzMTVaICBJTkZPIEV4ZWN1dGlvblNlcnZpY2VyOjpydW46RXhlY3V0aW9uU2VydmljZXI6OnNwYXduX2V4ZWN1dGlvbntmaW5hbGl6YXRpb249Tm9uZX06RXhlY3V0aW9uOjpzcGF3bjogZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbjogY2xvc2UgdGltZS5idXN5PTIuMjBtcyB0aW1lLmlkbGU9Mi42N3MKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgzMjVaICBJTkZPIEV4ZWN1dGlvblNlcnZpY2VyOjpydW46RXhlY3V0aW9uU2VydmljZXI6OnNwYXduX2V4ZWN1dGlvbntmaW5hbGl6YXRpb249Tm9uZX06IGV4ZWN1dGlvbl93cmFwcGVyOjpzZXJ2aWNlOiBjbG9zZSB0aW1lLmJ1c3k9Ni4wMW1zIHRpbWUuaWRsZT0yLjY3cwoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODMzNVogIElORk8gRXhlY3V0aW9uU2VydmljZXI6OnJ1bjogZXhlY3V0aW9uX3dyYXBwZXI6OnNlcnZpY2U6IGNsb3NlIHRpbWUuYnVzeT02LjEwbXMgdGltZS5pZGxlPTIuNjdzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MzQ1WiAgSU5GTyBFeGVjdXRpb246OndhaXRfZm9yX2NvbXBsZXRpb257cGFyZW50X3NwYW49U3BhbiB7IG5hbWU6ICJFeGVjdXRpb246OnNwYXduIiwgbGV2ZWw6IExldmVsKEluZm8pLCB0YXJnZXQ6ICJleGVjdXRpb25fd3JhcHBlcjo6ZXhlY3V0aW9uIiwgaWQ6IElkKDY3NTU2NzQzMTg5NjI2OTEpLCBtb2R1bGVfcGF0aDogImV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb24iLCBsaW5lOiAxMDIsIGZpbGU6ICJleGVjdXRvci9leGVjdXRpb24td3JhcHBlci9zcmMvZXhlY3V0aW9uL21vZC5ycyIgfSBwcm9jZXNzX21hbmFnZXI9TXV0ZXggeyBkYXRhOiBQcm9jZXNzTWFuYWdlciB7IGRhbmdsaW5nX3Byb2Nlc3NlczogW10sIHVzZXJfcHJvY2Vzc19ncm91cHM6IFsyNF0gfSB9fTogZXhlY3V0aW9uX3dyYXBwZXI6OmV4ZWN1dGlvbjogY2xvc2UgdGltZS5idXN5PTEuMDJtcyB0aW1lLmlkbGU9Mi42N3MKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgzNTVaICBJTkZPIGV4ZWN1dGlvbl93cmFwcGVyOjpleGVjdXRpb246IHByb2Nlc3MgZXhlY3V0aW9uIGNvbXBsZXRlZAo="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/lifecycler.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "28057",
        "Content-Range": "bytes 0-28056/28057",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:17 GMT",
        "ETag": "\u00220x8DA4A3C6C997856\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:20:32 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\u002BICRvdXRwdXQxL291dHB1dC50eHQ7XG5weXRob24gLWMgJ2ltcG9ydCByYW5kb207IGltcG9ydCBtbGZsb3c7IG1sZmxvdy5sb2dfbWV0cmljKFwiYWNjdXJhY3lcIiwgcmFuZG9tLnJhbmRvbSgpKSdcbiIgfSwgc3RkZXJyOiBOb25lLCBzdGRvdXQ6IFNvbWUoInVzZXJfbG9ncy9zdGRfbG9nLnR4dCIpIH0pIHBhdGhfbWFwcGluZ3NfZj17fX06IGdycGNfdXRpbHM6OnNwYW46IGZhaWxlZCB0byBpbmplY3Qgc3BhbiBjb250ZXh0IHRvIGdycGMgcmVxdWVzdAoyMDIyLTA2LTA5VDE3OjIwOjU3Ljk3OTU5MlogIElORk8gcnVuX2xpZmVjeWNsZXI6cnVuX3NlcnZpY2VfYW5kX3N0ZXBfdGhyb3VnaF9saWZlY3ljbGU6c3RlcF90aHJvdWdoX2xpZmVjeWNsZTpleGVjdXRlOmV4ZWN1dG9yX2NsaWVudDo6ZXhlY3V0ZV9jb21tYW5kc3tsaWZlY3ljbGVfYWRkcmVzcz0iL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIn06ZXhlY3V0b3JfY2xpZW50OjpzdGFydF9leGVjdXRpb257bGlmZWN5Y2xlcl9hZGRyZXNzPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAiIGNvbW1hbmRzX2Y9Q29tbWFuZChDb21tYW5kIHsgZXhlY3V0YWJsZTogU2hlbGwgeyBwYXRoOiBOb25lLCBjb21tYW5kOiAiZWNobyBcIkhlbGxvIERlZmF1bHQgV29ybGRcIiA\u002BIC4vb3V0cHV0cy9vdXRwdXQudHh0O1xuZWNobyBcIkhlbGxvIFdvcmxkXCIgPiAkb3V0cHV0MS9vdXRwdXQudHh0O1xucHl0aG9uIC1jICdpbXBvcnQgcmFuZG9tOyBpbXBvcnQgbWxmbG93OyBtbGZsb3cubG9nX21ldHJpYyhcImFjY3VyYWN5XCIsIHJhbmRvbS5yYW5kb20oKSknXG4iIH0sIHN0ZGVycjogTm9uZSwgc3Rkb3V0OiBTb21lKCJ1c2VyX2xvZ3Mvc3RkX2xvZy50eHQiKSB9KSBwYXRoX21hcHBpbmdzX2Y9e319OiBsaWZlY3ljbGVyOjpleGVjdXRvcl9jbGllbnQ6IFN0YXJ0aW5nIGV4ZWN1dGlvbiBleGVjdXRpb25faWQ9OWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3IGxpZmVjeWNsZXJfYWRkcmVzcz0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODY4OTJaICBJTkZPIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZXhlY3V0ZTpleGVjdXRvcl9jbGllbnQ6OmV4ZWN1dGVfY29tbWFuZHN7bGlmZWN5Y2xlX2FkZHJlc3M9Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2xpZmVjeWNsZXI6MCJ9OmV4ZWN1dG9yX2NsaWVudDo6c3RhcnRfZXhlY3V0aW9ue2xpZmVjeWNsZXJfYWRkcmVzcz0iL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIiBjb21tYW5kc19mPUNvbW1hbmQoQ29tbWFuZCB7IGV4ZWN1dGFibGU6IFNoZWxsIHsgcGF0aDogTm9uZSwgY29tbWFuZDogImVjaG8gXCJIZWxsbyBEZWZhdWx0IFdvcmxkXCIgPiAuL291dHB1dHMvb3V0cHV0LnR4dDtcbmVjaG8gXCJIZWxsbyBXb3JsZFwiID4gJG91dHB1dDEvb3V0cHV0LnR4dDtcbnB5dGhvbiAtYyAnaW1wb3J0IHJhbmRvbTsgaW1wb3J0IG1sZmxvdzsgbWxmbG93LmxvZ19tZXRyaWMoXCJhY2N1cmFjeVwiLCByYW5kb20ucmFuZG9tKCkpJ1xuIiB9LCBzdGRlcnI6IE5vbmUsIHN0ZG91dDogU29tZSgidXNlcl9sb2dzL3N0ZF9sb2cudHh0IikgfSkgcGF0aF9tYXBwaW5nc19mPXt9fTogbGlmZWN5Y2xlcjo6ZXhlY3V0b3JfY2xpZW50OiBjbG9zZSB0aW1lLmJ1c3k9MTU4wrVzIHRpbWUuaWRsZT03LjE5bXMKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODcyMjNaICBJTkZPIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZXhlY3V0ZTpleGVjdXRvcl9jbGllbnQ6OmV4ZWN1dGVfY29tbWFuZHN7bGlmZWN5Y2xlX2FkZHJlc3M9Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2xpZmVjeWNsZXI6MCJ9OiBsaWZlY3ljbGVyOjpleGVjdXRvcl9jbGllbnQ6IFdhaXRpbmcgZm9yIGV4ZWN1dGlvbiBjb21wbGV0aW9uIGV4ZWN1dGlvbl9pZD0iOWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1Nzg5MFogIElORk8gRXhlY3V0aW9uQ2FsbGJhY2tTZXJ2aWNlcjo6Y29tcGxldGVfZXhlY3V0aW9uOiBncnBjX3V0aWxzOjpzZXJ2ZXI6IEdvdCBncnBjIHJlcXVlc3QgbmFtZT0iY29tcGxldGVfZXhlY3V0aW9uIiByZW1vdGVfYWRkcj1Ob25lCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU3OTY1WiAgSU5GTyBFeGVjdXRpb25DYWxsYmFja1NlcnZpY2VyOjpjb21wbGV0ZV9leGVjdXRpb246IGxpZmVjeWNsZXI6OnNlcnZpY2U6IGNsb3NlIHRpbWUuYnVzeT04MC45wrVzIHRpbWUuaWRsZT0xMy42wrVzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU3OTkxWiAgSU5GTyBydW5fbGlmZWN5Y2xlcjpydW5fc2VydmljZV9hbmRfc3RlcF90aHJvdWdoX2xpZmVjeWNsZTpzdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOmV4ZWN1dGU6ZXhlY3V0b3JfY2xpZW50OjpleGVjdXRlX2NvbW1hbmRze2xpZmVjeWNsZV9hZGRyZXNzPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAifTpleGVjdXRvcl9jbGllbnQ6OndhaXRfZm9yX2V4ZWN1dGlvbl9jb21wbGV0aW9ue2V4ZWN1dGlvbl9pZD0iOWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3In06IGxpZmVjeWNsZXI6OmV4ZWN1dG9yX2NsaWVudDogY2xvc2UgdGltZS5idXN5PTUuMTDCtXMgdGltZS5pZGxlPTIuNjdzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MDI1WiAgSU5GTyBydW5fbGlmZWN5Y2xlcjpydW5fc2VydmljZV9hbmRfc3RlcF90aHJvdWdoX2xpZmVjeWNsZTpzdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOmV4ZWN1dGU6ZXhlY3V0b3JfY2xpZW50OjpleGVjdXRlX2NvbW1hbmRze2xpZmVjeWNsZV9hZGRyZXNzPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAifTogbGlmZWN5Y2xlcjo6ZXhlY3V0b3JfY2xpZW50OiBFeGVjdXRpb24gY29tcGxldGVkIGV4ZWN1dGlvbl9pZD0iOWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODA1N1ogIElORk8gcnVuX2xpZmVjeWNsZXI6cnVuX3NlcnZpY2VfYW5kX3N0ZXBfdGhyb3VnaF9saWZlY3ljbGU6c3RlcF90aHJvdWdoX2xpZmVjeWNsZTpleGVjdXRlOmV4ZWN1dG9yX2NsaWVudDo6ZXhlY3V0ZV9jb21tYW5kc3tsaWZlY3ljbGVfYWRkcmVzcz0iL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIn06IGxpZmVjeWNsZXI6OmV4ZWN1dG9yX2NsaWVudDogY2xvc2UgdGltZS5idXN5PTY1M8K1cyB0aW1lLmlkbGU9Mi42OHMKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgxNDhaICBJTkZPIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZXhlY3V0ZTogbGlmZWN5Y2xlcjo6bGlmZWN5Y2xlOiBwaGFzZSBleGVjdXRpb24gY29tcGxldGVkLiByYW5rPU5vbmUgcGhhc2U9MAoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODE5MlogIElORk8gcnVuX2xpZmVjeWNsZXI6cnVuX3NlcnZpY2VfYW5kX3N0ZXBfdGhyb3VnaF9saWZlY3ljbGU6c3RlcF90aHJvdWdoX2xpZmVjeWNsZTpleGVjdXRlOiBsaWZlY3ljbGVyOjpsaWZlY3ljbGU6IGNsb3NlIHRpbWUuYnVzeT05MjjCtXMgdGltZS5pZGxlPTIuNjhzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MjI5WiAgV0FSTiBydW5fbGlmZWN5Y2xlcjpydW5fc2VydmljZV9hbmRfc3RlcF90aHJvdWdoX2xpZmVjeWNsZTpzdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOmVuZF9jYXBhYmlsaXRpZXM6ZW5ke25hbWU9IkRBVEFfQ0FQQUJJTElUWSJ9OiBncnBjX3V0aWxzOjpzcGFuOiBmYWlsZWQgdG8gaW5qZWN0IHNwYW4gY29udGV4dCB0byBncnBjIHJlcXVlc3QKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgyNjVaICBXQVJOIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZW5kX2NhcGFiaWxpdGllczplbmR7bmFtZT0iQ1NfQ0FQQUJJTElUWSJ9OiBncnBjX3V0aWxzOjpzcGFuOiBmYWlsZWQgdG8gaW5qZWN0IHNwYW4gY29udGV4dCB0byBncnBjIHJlcXVlc3QKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgzMDBaICBXQVJOIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZW5kX2NhcGFiaWxpdGllczplbmR7bmFtZT0iSE9TVFRPT0xTX0NBUEFCSUxJVFkifTogZ3JwY191dGlsczo6c3BhbjogZmFpbGVkIHRvIGluamVjdCBzcGFuIGNvbnRleHQgdG8gZ3JwYyByZXF1ZXN0Cg=="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/user_logs/std_log.txt",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "125",
        "Content-Range": "bytes 0-124/125",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:18 GMT",
        "ETag": "\u00220x8DA4A3C6CB11B9E\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "VGhlIEF6dXJlTUxUb2tlbkF1dGhlbnRpY2F0aW9uIGNyZWF0ZWQgd2lsbCBub3QgYmUgdXBkYXRlZCBkdWUgdG8gbWlzc2luZyBwYXJhbXMuIFRoZSB0b2tlbiBleHBpcmVzIG9uIDIwMjItMDYtMzAgMTc6MjA6MjIuCgo="
    },
    {
      "RequestUri": "https://westus2.api.azureml.ms/history/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/rundata",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "118",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": {
        "runId": "test_570691911342",
        "selectRunMetadata": true,
        "selectRunDefinition": true,
        "selectJobSpecification": true
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:18 GMT",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=15724800; includeSubDomains; preload",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-response-type": "standard",
        "x-request-time": "0.050"
      },
      "ResponseBody": {
        "runMetadata": {
          "runNumber": 1654795220,
          "rootRunId": "test_570691911342",
          "createdUtc": "2022-06-09T17:20:20.2005657\u002B00:00",
          "createdBy": {
            "userObjectId": "864f80ae-453f-47a9-83ec-dfd8dc588e03",
            "userPuId": null,
            "userIdp": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userAltSecId": null,
            "userIss": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "userName": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
            "upn": null
          },
          "userId": "864f80ae-453f-47a9-83ec-dfd8dc588e03",
          "token": null,
          "tokenExpiryTimeUtc": null,
          "error": null,
          "warnings": null,
          "revision": 11,
          "statusRevision": 0,
          "runUuid": "c0b9047c-df97-44f6-ae86-747edcf8527c",
          "parentRunUuid": null,
          "rootRunUuid": "c0b9047c-df97-44f6-ae86-747edcf8527c",
          "lastStartTimeUtc": null,
          "currentComputeTime": null,
          "computeDuration": "00:02:35.2144300",
          "effectiveStartTimeUtc": null,
          "lastModifiedBy": {
            "userObjectId": "864f80ae-453f-47a9-83ec-dfd8dc588e03",
            "userPuId": null,
            "userIdp": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userAltSecId": null,
            "userIss": "https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/",
            "userTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "userName": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
            "upn": null
          },
          "lastModifiedUtc": "2022-06-09T17:22:55.5035837\u002B00:00",
          "duration": "00:02:35.2144300",
          "cancelationReason": null,
          "currentAttemptId": null,
          "runId": "test_570691911342",
          "parentRunId": null,
          "experimentId": "a694819f-b8b2-468d-92cb-cf433a712c1d",
          "status": "Completed",
          "startTimeUtc": "2022-06-09T17:20:20.327536\u002B00:00",
          "endTimeUtc": "2022-06-09T17:22:55.541966\u002B00:00",
          "scheduleId": null,
          "displayName": "test_570691911342",
          "name": "test_570691911342",
          "dataContainerId": "dcid.test_570691911342",
          "description": null,
          "hidden": false,
          "runType": "hyperdrive",
          "runTypeV2": {
            "orchestrator": "HyperDrive",
            "traits": [
              "hyperdrive",
              "testCompute"
            ],
            "attribution": null,
            "computeType": null
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size",
            "score": "0.8579593284648124",
            "best_child_run_id": "test_570691911342_2",
            "best_metric_status": "Succeeded",
            "best_data_container_id": "dcid.test_570691911342_2"
          },
          "parameters": {},
          "actionUris": {
            "Cancel": "https://westus2.api.azureml.ms/hyperdrive/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/experiments/azure-ai-ml/runs/test_570691911342/cancel"
          },
          "scriptName": null,
          "target": "testCompute",
          "uniqueChildRunComputeTargets": [],
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022outputLocation\u0022: {\u0022dataset\u0022: null, \u0022dataPath\u0022: null, \u0022uri\u0022: {\u0022path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022isFile\u0022: false}, \u0022type\u0022: \u0022UriFolder\u0022}, \u0022mechanism\u0022: \u0022Mount\u0022, \u0022additionalOptions\u0022: null, \u0022environmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}",
            "_aml_system_final_best_metric_update_retry_count": "1"
          },
          "settings": {},
          "services": {},
          "inputDatasets": [],
          "outputDatasets": [],
          "runDefinition": null,
          "jobSpecification": null,
          "primaryMetricName": "accuracy",
          "createdFrom": null,
          "cancelUri": "https://westus2.api.azureml.ms/hyperdrive/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/experiments/azure-ai-ml/runs/test_570691911342/cancel",
          "completeUri": null,
          "diagnosticsUri": null,
          "computeRequest": null,
          "compute": null,
          "retainForLifetimeOfWorkspace": false,
          "queueingInfo": null,
          "inputs": null,
          "outputs": null
        },
        "runDefinition": null,
        "jobSpecification": null,
        "systemSettings": null
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342?api-version=2022-02-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "85eaf98e-c113-4579-b1dd-6692f6b395a7",
        "x-ms-ratelimit-remaining-subscription-reads": "11967",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172419Z:85eaf98e-c113-4579-b1dd-6692f6b395a7",
        "x-request-time": "0.046"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/jobs/test_570691911342",
        "name": "test_570691911342",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {
            "_aml_system_max_concurrent_jobs": "10",
            "_aml_system_max_total_jobs": "4",
            "_aml_system_max_duration_minutes": "50",
            "_aml_system_policy_config": "{\u0022name\u0022: \u0022DEFAULT\u0022, \u0022properties\u0022: {}}",
            "_aml_system_generator_config": "{\u0022name\u0022: \u0022RANDOM\u0022, \u0022properties\u0022: {\u0022rule\u0022: \u0022Random\u0022, \u0022seed\u0022: null}, \u0022parameter_space\u0022: {\u0022lr\u0022: [\u0022uniform\u0022, [0.001, 0.1]], \u0022conv_size\u0022: [\u0022choice\u0022, [[2, 5, 7]]], \u0022dropout_rate\u0022: [\u0022uniform\u0022, [0.1, 0.5]]}}",
            "_aml_system_primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "_aml_system_platform_config": "{\u0022ServiceAddress\u0022: \u0022https://westus2.api.azureml.ms\u0022, \u0022SubscriptionId\u0022: \u002200000000-0000-0000-0000-000000000\u0022, \u0022ResourceGroupName\u0022: \u002200000\u0022, \u0022WorkspaceName\u0022: \u0022sdk_vnext_cli\u0022, \u0022ExperimentName\u0022: \u0022azure-ai-ml\u0022, \u0022Definition\u0022: {\u0022Configuration\u0022: null, \u0022Attribution\u0022: null, \u0022TelemetryValues\u0022: null, \u0022Overrides\u0022: {\u0022Script\u0022: null, \u0022Command\u0022: \u0022echo \\\u0022Hello Default World\\\u0022 \u003E ./outputs/output.txt;\\necho \\\u0022Hello World\\\u0022 \u003E ${{outputs.output1}}/output.txt;\\npython -c \u0027import random; import mlflow; mlflow.log_metric(\\\u0022accuracy\\\u0022, random.random())\u0027\\n\u0022, \u0022UseAbsolutePath\u0022: true, \u0022Arguments\u0022: [], \u0022SourceDirectoryDataStore\u0022: null, \u0022Framework\u0022: 0, \u0022Target\u0022: \u0022testCompute\u0022, \u0022DataReferences\u0022: {}, \u0022Data\u0022: {}, \u0022OutputData\u0022: {\u0022output1\u0022: {\u0022outputLocation\u0022: {\u0022dataset\u0022: null, \u0022dataPath\u0022: null, \u0022uri\u0022: {\u0022path\u0022: \u0022azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/\u0022, \u0022isFile\u0022: false}, \u0022type\u0022: \u0022UriFolder\u0022}, \u0022mechanism\u0022: \u0022Mount\u0022, \u0022additionalOptions\u0022: null, \u0022environmentVariableName\u0022: null}}, \u0022Datacaches\u0022: [], \u0022JobName\u0022: null, \u0022MaxRunDurationSeconds\u0022: null, \u0022NodeCount\u0022: 1, \u0022InstanceTypes\u0022: [], \u0022Priority\u0022: null, \u0022CredentialPassthrough\u0022: false, \u0022Identity\u0022: null, \u0022Environment\u0022: {\u0022Name\u0022: \u0022AzureML-sklearn-0.24-ubuntu18.04-py37-cpu\u0022, \u0022Version\u0022: \u00221\u0022, \u0022AssetId\u0022: \u0022azureml://registries/CuratedRegistry/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1\u0022, \u0022Python\u0022: {\u0022InterpreterPath\u0022: \u0022python\u0022, \u0022UserManagedDependencies\u0022: true, \u0022CondaDependencies\u0022: {\u0022name\u0022: \u0022project_environment\u0022, \u0022dependencies\u0022: [\u0022python=3.6.2\u0022, {\u0022pip\u0022: [\u0022azureml-defaults\u0022]}], \u0022channels\u0022: [\u0022anaconda\u0022, \u0022conda-forge\u0022]}, \u0022BaseCondaEnvironment\u0022: null}, \u0022EnvironmentVariables\u0022: {\u0022EXAMPLE_ENV_VAR\u0022: \u0022EXAMPLE_VALUE\u0022}, \u0022Docker\u0022: {\u0022BaseImage\u0022: null, \u0022Platform\u0022: {\u0022Os\u0022: \u0022Linux\u0022, \u0022Architecture\u0022: \u0022amd64\u0022}, \u0022BaseDockerfile\u0022: \u0022FROM mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210701.v1\\n\\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/sklearn-0.24.1\\n\\n# Create conda environment\\nRUN conda create -p $AZUREML_CONDA_ENVIRONMENT_PATH \\\\\\n    python=3.7 pip=20.2.4\\n\\n# Prepend path to AzureML conda environment\\nENV PATH $AZUREML_CONDA_ENVIRONMENT_PATH/bin:$PATH\\n\\n# Install pip dependencies\\nRUN pip install \u0027matplotlib\u003E=3.3,\u003C3.4\u0027 \\\\\\n                \u0027psutil\u003E=5.8,\u003C5.9\u0027 \\\\\\n                \u0027tqdm\u003E=4.59,\u003C4.60\u0027 \\\\\\n                \u0027pandas\u003E=1.1,\u003C1.2\u0027 \\\\\\n                \u0027scipy\u003E=1.5,\u003C1.6\u0027 \\\\\\n                \u0027numpy\u003E=1.10,\u003C1.20\u0027 \\\\\\n                \u0027azureml-core==1.32.0\u0027 \\\\\\n                \u0027azureml-defaults==1.32.0\u0027 \\\\\\n                \u0027azureml-mlflow==1.32.0\u0027 \\\\\\n                \u0027azureml-telemetry==1.32.0\u0027 \\\\\\n                \u0027scikit-learn==0.24.1\u0027\\n\\n# This is needed for mpi to locate libpython\\nENV LD_LIBRARY_PATH $AZUREML_CONDA_ENVIRONMENT_PATH/lib:$LD_LIBRARY_PATH\\n\u0022, \u0022BaseImageRegistry\u0022: {\u0022Address\u0022: null, \u0022Username\u0022: null, \u0022Password\u0022: null}, \u0022Enabled\u0022: false, \u0022Arguments\u0022: []}, \u0022Spark\u0022: {\u0022Repositories\u0022: [], \u0022Packages\u0022: [], \u0022PrecachePackages\u0022: true}, \u0022InferencingStackVersion\u0022: null}, \u0022History\u0022: {\u0022OutputCollection\u0022: true, \u0022DirectoriesToWatch\u0022: [\u0022logs\u0022], \u0022EnableMLflowTracking\u0022: true}, \u0022Spark\u0022: {\u0022Configuration\u0022: {}}, \u0022ParallelTask\u0022: {\u0022MaxRetriesPerWorker\u0022: 0, \u0022WorkerCountPerNode\u0022: 1, \u0022TerminalExitCodes\u0022: null, \u0022Configuration\u0022: {}}, \u0022BatchAi\u0022: {\u0022NodeCount\u0022: 0}, \u0022AmlCompute\u0022: {\u0022Name\u0022: null, \u0022VmSize\u0022: null, \u0022RetainCluster\u0022: false, \u0022ClusterMaxNodeCount\u0022: null}, \u0022AISuperComputer\u0022: {\u0022InstanceType\u0022: \u0022D2\u0022, \u0022FrameworkImage\u0022: null, \u0022ImageVersion\u0022: \u0022pytorch-1.7.0\u0022, \u0022Location\u0022: null, \u0022AISuperComputerStorageData\u0022: null, \u0022Interactive\u0022: false, \u0022ScalePolicy\u0022: null, \u0022VirtualClusterArmId\u0022: null, \u0022TensorboardLogDirectory\u0022: null, \u0022SSHPublicKey\u0022: null, \u0022SSHPublicKeys\u0022: null, \u0022EnableAzmlInt\u0022: true, \u0022Priority\u0022: \u0022Medium\u0022, \u0022SLATier\u0022: \u0022Standard\u0022, \u0022UserAlias\u0022: null}, \u0022KubernetesCompute\u0022: {\u0022InstanceType\u0022: null}, \u0022Tensorflow\u0022: {\u0022WorkerCount\u0022: 0, \u0022ParameterServerCount\u0022: 0}, \u0022Mpi\u0022: {\u0022ProcessCountPerNode\u0022: 0}, \u0022PyTorch\u0022: {\u0022CommunicationBackend\u0022: null, \u0022ProcessCount\u0022: null}, \u0022Hdi\u0022: {\u0022YarnDeployMode\u0022: 0}, \u0022ContainerInstance\u0022: {\u0022Region\u0022: null, \u0022CpuCores\u0022: 2.0, \u0022MemoryGb\u0022: 3.5}, \u0022ExposedPorts\u0022: null, \u0022Docker\u0022: {\u0022UseDocker\u0022: true, \u0022SharedVolumes\u0022: null, \u0022ShmSize\u0022: null, \u0022Arguments\u0022: null}, \u0022Cmk8sCompute\u0022: {\u0022Configuration\u0022: {}}, \u0022CommandReturnCodeConfig\u0022: {\u0022ReturnCode\u0022: 0, \u0022SuccessfulReturnCodes\u0022: []}, \u0022EnvironmentVariables\u0022: {}, \u0022ApplicationEndpoints\u0022: {}, \u0022Parameters\u0022: []}, \u0022SnapshotId\u0022: null, \u0022Snapshots\u0022: [], \u0022SourceCodeDataReference\u0022: null, \u0022ParentRunId\u0022: null, \u0022DataContainerId\u0022: null, \u0022RunType\u0022: null, \u0022DisplayName\u0022: \u0022test_570691911342\u0022, \u0022EnvironmentAssetId\u0022: null, \u0022Properties\u0022: {\u0022mlflow.source.git.repoURL\u0022: \u0022https://github.com/needuv/azure-sdk-for-python.git\u0022, \u0022mlflow.source.git.branch\u0022: \u0022needuv/add-test-resources\u0022, \u0022mlflow.source.git.commit\u0022: \u0022e7874b051466ce94c7da47564ec6baddce09eeb9\u0022, \u0022azureml.git.dirty\u0022: \u0022True\u0022}, \u0022Tags\u0022: {}, \u0022AggregatedArtifactPath\u0022: null}}",
            "_aml_system_resume_child_runs": "null",
            "_aml_system_all_jobs_generated": "true",
            "_aml_system_cancellation_requested": "false",
            "_aml_system_progress_metadata_evaluation_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_progress_metadata_digest": "\u00228368a97b651058ed7e8cd3fef18f07440520f12beb31a34488106b596467fffc\u0022",
            "_aml_system_progress_metadata_active_timestamp": "\u00222022-06-09T17:20:21.172071\u0022",
            "_aml_system_optimizer_state_artifact": "null",
            "_aml_system_outdated_optimizer_state_artifacts": "\u0022[]\u0022",
            "_aml_system_test_570691911342_0": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.4073455615534304, \u0022lr\u0022: 0.04203400447664008}",
            "_aml_system_test_570691911342_1": "{\u0022conv_size\u0022: 2, \u0022dropout_rate\u0022: 0.29880731078641265, \u0022lr\u0022: 0.04012571159773933}",
            "_aml_system_test_570691911342_2": "{\u0022conv_size\u0022: 7, \u0022dropout_rate\u0022: 0.3128719203828023, \u0022lr\u0022: 0.08823242281671856}",
            "_aml_system_test_570691911342_3": "{\u0022conv_size\u0022: 5, \u0022dropout_rate\u0022: 0.3491612157535638, \u0022lr\u0022: 0.08937948809156163}",
            "_aml_system_final_best_metric_update_retry_count": "1"
          },
          "properties": {
            "primary_metric_config": "{\u0022name\u0022: \u0022accuracy\u0022, \u0022goal\u0022: \u0022maximize\u0022}",
            "resume_from": "null",
            "runTemplate": "HyperDrive",
            "azureml.runsource": "hyperdrive",
            "platform": "AML",
            "mlflow.source.git.repoURL": "https://github.com/needuv/azure-sdk-for-python.git",
            "mlflow.source.git.branch": "needuv/add-test-resources",
            "mlflow.source.git.commit": "e7874b051466ce94c7da47564ec6baddce09eeb9",
            "azureml.git.dirty": "True",
            "user_agent": "managementfrontend/72ea92f7a1317aed7a379cb4bac22ba1db9add76",
            "space_size": "infinite_space_size",
            "score": "0.8579593284648124",
            "best_child_run_id": "test_570691911342_2",
            "best_metric_status": "Succeeded",
            "best_data_container_id": "dcid.test_570691911342_2"
          },
          "displayName": "test_570691911342",
          "status": "Completed",
          "experimentName": "azure-ai-ml",
          "services": {
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/test_570691911342?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/sdk_vnext_cli",
              "status": null,
              "errorMessage": null,
              "properties": null
            }
          },
          "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/computes/testCompute",
          "isArchived": false,
          "schedule": null,
          "identity": null,
          "jobType": "Sweep",
          "searchSpace": {
            "lr": [
              "uniform",
              [
                0.001,
                0.1
              ]
            ],
            "conv_size": [
              "choice",
              [
                [
                  2,
                  5,
                  7
                ]
              ]
            ],
            "dropout_rate": [
              "uniform",
              [
                0.1,
                0.5
              ]
            ]
          },
          "samplingAlgorithm": {
            "samplingAlgorithmType": "Random",
            "seed": null,
            "rule": "Random"
          },
          "limits": {
            "timeout": "PT50M",
            "jobLimitsType": "Sweep",
            "maxTotalTrials": 4,
            "maxConcurrentTrials": 10,
            "trialTimeout": null
          },
          "earlyTermination": null,
          "objective": {
            "primaryMetric": "accuracy",
            "goal": "Maximize"
          },
          "trial": {
            "codeId": null,
            "command": "echo \u0022Hello Default World\u0022 \u003E ./outputs/output.txt;\necho \u0022Hello World\u0022 \u003E ${{outputs.output1}}/output.txt;\npython -c \u0027import random; import mlflow; mlflow.log_metric(\u0022accuracy\u0022, random.random())\u0027\n",
            "environmentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/environments/AzureML-sklearn-0.24-ubuntu18.04-py37-cpu/versions/1",
            "environmentVariables": {},
            "distribution": null,
            "resources": {
              "instanceCount": 1,
              "instanceType": null,
              "properties": null
            }
          },
          "inputs": {},
          "outputs": {
            "output1": {
              "description": null,
              "uri": "azureml://datastores/${{default_datastore}}/paths/data_folder/${{name}}/cleaned_data/",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            },
            "default": {
              "description": null,
              "uri": "azureml://datastores/workspaceartifactstore/ExperimentRun/dcid.test_570691911342_2",
              "mode": "ReadWriteMount",
              "jobOutputType": "UriFolder"
            }
          }
        },
        "systemData": {
          "createdAt": "2022-06-09T17:20:20.2005657Z",
          "createdBy": "6f5d7923-5be8-4e72-bf1b-d7d92ab7f00c",
          "createdByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores?api-version=2022-05-01\u0026count=30\u0026isDefault=true\u0026orderByAsc=false",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "aecd8e0e-2ceb-4564-b474-d10b6b94bdf5",
        "x-ms-ratelimit-remaining-subscription-reads": "11966",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172419Z:aecd8e0e-2ceb-4564-b474-d10b6b94bdf5",
        "x-request-time": "0.100"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceblobstore",
            "name": "workspaceblobstore",
            "type": "Microsoft.MachineLearningServices/workspaces/datastores",
            "properties": {
              "description": null,
              "tags": null,
              "properties": null,
              "isDefault": true,
              "credentials": {
                "credentialsType": "AccountKey"
              },
              "datastoreType": "AzureBlob",
              "accountName": "sacfxu3euzmal3o",
              "containerName": "azureml-blobstore-60073e53-722a-4f65-9800-09c562dd3717",
              "endpoint": "core.windows.net",
              "protocol": "https",
              "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
            },
            "systemData": {
              "createdAt": "2022-06-03T21:04:54.4490272Z",
              "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
              "createdByType": "Application",
              "lastModifiedAt": "2022-06-03T21:04:55.1259563Z",
              "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
              "lastModifiedByType": "Application"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceartifactstore?api-version=2022-05-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "275546eb-de21-466a-9a55-8ce322d8b1ac",
        "x-ms-ratelimit-remaining-subscription-reads": "11965",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172419Z:275546eb-de21-466a-9a55-8ce322d8b1ac",
        "x-request-time": "0.104"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceartifactstore",
        "name": "workspaceartifactstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": false,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "sacfxu3euzmal3o",
          "containerName": "azureml",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "None"
        },
        "systemData": {
          "createdAt": "2022-06-03T21:04:54.4684059Z",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2022-06-03T21:04:55.2442941Z",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/sdk_vnext_cli/datastores/workspaceartifactstore/listSecrets?api-version=2022-05-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/0.1.0b4 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0a0ece3c-5180-48ff-a2e8-bd4320b4208d",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "CANADACENTRAL:20220609T172420Z:0a0ece3c-5180-48ff-a2e8-bd4320b4208d",
        "x-request-time": "0.109"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "Xrs2emqAqMS/ppRCp/cE6YBt3vaOinxbFAtp\u002B1uNtXZx6rdyZP4JyiFXgLOhv\u002Bm1wd0DKh\u002BFdB9f\u002BASt9EEucw=="
      }
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml?restype=container\u0026comp=list\u0026prefix=ExperimentRun%2Fdcid.test_570691911342_2",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:21 GMT",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/xml",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\uFEFF\u003C?xml version=\u00221.0\u0022 encoding=\u0022utf-8\u0022?\u003E\u003CEnumerationResults ServiceEndpoint=\u0022https://sacfxu3euzmal3o.blob.core.windows.net/\u0022 ContainerName=\u0022azureml\u0022\u003E\u003CPrefix\u003EExperimentRun/dcid.test_570691911342_2\u003C/Prefix\u003E\u003CBlobs\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/outputs/output.txt\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CB9A5DD\u003C/Etag\u003E\u003CContent-Length\u003E20\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5\u003EEEekR5zxUH72RAWSif994w==\u003C/Content-MD5\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/cs_capability/cs-capability.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CCE8A57\u003C/Etag\u003E\u003CContent-Length\u003E22628\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/data-capability.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CDC9210\u003C/Etag\u003E\u003CContent-Length\u003E32855\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/rslex.log.2022-06-09-17\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CD9372D\u003C/Etag\u003E\u003CContent-Length\u003E3989\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/hosttools_capability/hosttools-capability.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:20:32 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6C9C5E1F\u003C/Etag\u003E\u003CContent-Length\u003E55792\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/execution-wrapper.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:01 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CD31D90\u003C/Etag\u003E\u003CContent-Length\u003E14036\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/lifecycler.log\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:20:32 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6C997856\u003C/Etag\u003E\u003CContent-Length\u003E28057\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003CBlob\u003E\u003CName\u003EExperimentRun/dcid.test_570691911342_2/user_logs/std_log.txt\u003C/Name\u003E\u003CProperties\u003E\u003CCreation-Time\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Creation-Time\u003E\u003CLast-Modified\u003EThu, 09 Jun 2022 17:21:00 GMT\u003C/Last-Modified\u003E\u003CEtag\u003E0x8DA4A3C6CB11B9E\u003C/Etag\u003E\u003CContent-Length\u003E125\u003C/Content-Length\u003E\u003CContent-Type\u003Eapplication/octet-stream\u003C/Content-Type\u003E\u003CContent-Encoding /\u003E\u003CContent-Language /\u003E\u003CContent-CRC64 /\u003E\u003CContent-MD5 /\u003E\u003CCache-Control /\u003E\u003CContent-Disposition /\u003E\u003CBlobType\u003EBlockBlob\u003C/BlobType\u003E\u003CAccessTier\u003EHot\u003C/AccessTier\u003E\u003CAccessTierInferred\u003Etrue\u003C/AccessTierInferred\u003E\u003CLeaseStatus\u003Eunlocked\u003C/LeaseStatus\u003E\u003CLeaseState\u003Eavailable\u003C/LeaseState\u003E\u003CServerEncrypted\u003Etrue\u003C/ServerEncrypted\u003E\u003C/Properties\u003E\u003COrMetadata /\u003E\u003C/Blob\u003E\u003C/Blobs\u003E\u003CNextMarker /\u003E\u003C/EnumerationResults\u003E"
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/outputs/output.txt",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "20",
        "Content-Range": "bytes 0-19/20",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "ETag": "\u00220x8DA4A3C6CB9A5DD\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-content-md5": "EEekR5zxUH72RAWSif994w==",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "SGVsbG8gRGVmYXVsdCBXb3JsZAo="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/cs_capability/cs-capability.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "22628",
        "Content-Range": "bytes 0-22627/22628",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "ETag": "\u00220x8DA4A3C6CCE8A57\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": ""
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/data-capability.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "32855",
        "Content-Range": "bytes 0-32854/32855",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "ETag": "\u00220x8DA4A3C6CDC9210\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\"
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/data_capability/rslex.log.2022-06-09-17",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "3989",
        "Content-Range": "bytes 0-3988/3989",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:19 GMT",
        "ETag": "\u00220x8DA4A3C6CD9372D\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "MjAyMi0wNi0wOVQxNzoyMDo1Ni43NTM3OTRaICBJTkZPIHJzbGV4X2Z1c2U6OmRpcmVjdF92b2x1bWVfbW91bnQ6Om9wdGlvbnM6IFtyc2xleC1mdXNlOjpEaXJlY3RWb2x1bWVPcHRpb25zXSBFbnZpcm9ubWVudCB2YXJpYWJsZSAiREFUQVNFVF9NT1VOVF9CTE9DS19CQVNFRF9DQUNIRV9FTkFCTEVEIiBoYXMgYmVlbiBzZXQgdG8gdHJ1ZSBlbnZfdmFyaWFibGVfbmFtZT0iREFUQVNFVF9NT1VOVF9CTE9DS19CQVNFRF9DQUNIRV9FTkFCTEVEIiBlbnZfdmFyaWFibGVfdmFsdWU9dHJ1ZSBkZXNjcmlwdG9yPSJyc2xleC1mdXNlOjpEaXJlY3RWb2x1bWVPcHRpb25zOjpjb25maWdfZW52X3NldCIKMjAyMi0wNi0wOVQxNzoyMDo1Ni44NjM2OTdaICBJTkZPIHJzbGV4X2F6dXJlbWw6OmRhdGFfc3RvcmU6OnJlc29sdmVyOiBbQ2FjaGVkUmVzb2x2ZXI6OnJlc29sdmUoKV0gZGF0YXN0b3JlIHJlc29sdmVkIGRhdGFzdG9yZV9uYW1lPVNvbWUoIndvcmtzcGFjZWJsb2JzdG9yZSIpIGRhdGFzdG9yZV90eXBlPVNvbWUoQXp1cmVCbG9iKQoyMDIyLTA2LTA5VDE3OjIwOjU2Ljg5ODk3MVogIFdBUk4gcnVzdGxzOjpjaGVjazogUmVjZWl2ZWQgYSBTZXJ2ZXJIZWxsb0RvbmUgaGFuZHNoYWtlIG1lc3NhZ2Ugd2hpbGUgZXhwZWN0aW5nIFtDZXJ0aWZpY2F0ZVJlcXVlc3RdICAgIAoyMDIyLTA2LTA5VDE3OjIwOjU2LjkxNjQyNlogIFdBUk4gcnNsZXhfZnVzZTo6ZGlyZWN0X3ZvbHVtZV9tb3VudDo6ZGlyZWN0X3ZvbHVtZV9tb3VudDogW3JzbGV4LWZ1c2U6OmRpcmVjdC12b2x1bWUtbW91bnQ6Om5ldygpXSByZWFkIHdyaXRlIHBhdGggbm90IGZvdW5kLCB0cnkgdG8gY3JlYXRlLgoyMDIyLTA2LTA5VDE3OjIwOjU2Ljk1MzU3OFogIFdBUk4gcnVzdGxzOjpjaGVjazogUmVjZWl2ZWQgYSBTZXJ2ZXJIZWxsb0RvbmUgaGFuZHNoYWtlIG1lc3NhZ2Ugd2hpbGUgZXhwZWN0aW5nIFtDZXJ0aWZpY2F0ZVJlcXVlc3RdICAgIAoyMDIyLTA2LTA5VDE3OjIwOjU2Ljk3MzA0N1ogIElORk8gcnNsZXhfZnVzZTo6ZGlyZWN0X3ZvbHVtZV9tb3VudDo6ZGlyZWN0X3ZvbHVtZV9tb3VudDogW3JzbGV4LWZ1c2U6OkRpcmVjdFZvbHVtZU1vdW50OjpuZXcoKV0gRGlyZWN0IHZvbHVtZSBtb3VudCBjcmVhdGVkLiBoYW5kbGVyPUFtbERhdGFzdG9yZSBvcHRpb25zPURpcmVjdFZvbHVtZU9wdGlvbnMgeyBpc19zaW5nbGVfZmlsZTogU29tZShmYWxzZSksIGRlZmF1bHRfcGVybWlzc2lvbjogU29tZSg1MTEpLCBhdHRyaWJ1dGVfY2FjaGVfZW50cnlfdHRsOiAxODQ0Njc0NDA3MzcwOTU1MTYxNS45OTk5OTk5OTlzLCBkaXNrX2NhY2hlX29wdGlvbnM6IERpc2tDYWNoZU9wdGlvbnMgeyBjYWNoZV9kaXJfcGF0aDogTm9uZSwgcmVzZXJ2ZWRfZnJlZV9kaXNrX3NwYWNlOiAxNTcyODY0MDAsIGNhY2hlX2xpbWl0OiBVbmxpbWl0ZWQsIHBydW5lX3RocmVzaG9sZDogMS4wLCBwcnVuZV90YXJnZXQ6IDAuNywgX2NhY2hlX3Jlc291cmNlc19waGFudG9tOiBQaGFudG9tRGF0YSB9LCBzdHJlYW1pbmdfcmVhZF9vcHRpb25zOiBTdHJlYW1pbmdSZWFkT3B0aW9ucyB7IGJsb2NrX3NpemU6IDIwOTcxNTIsIGJ1ZmZlcmVkX2Jsb2Nrc19jb3VudDogMzIsIHJlYWRpbmdfdGhyZWFkczogMzIgfSwgYmxvY2tfYmFzZWRfcmVhZGluZ19vcHRpb25zOiBTb21lKEJsb2NrQmFzZWRSZWFkaW5nT3B0aW9ucyB7IG1lbW9yeV9jYWNoZV9vcHRpb25zOiBTb21lKE1lbW9yeUNhY2hlT3B0aW9ucyB7IGNhY2hlX3NpemU6IDEzNDIxNzcyOCB9KSwgZmlsZV9jYWNoZV9vcHRpb25zOiBTb21lKEJsb2NrQmFzZWRGaWxlQ2FjaGVXcml0ZU9wdGlvbnMgeyBwZW5kaW5nX3dyaXRlc19xdWV1ZV9zaXplOiA1MzY4NzA5MTIsIHdyaXRlcl90aHJlYWRzOiAxNiB9KSB9KSwgbW91bnRfbW9kZTogQ3JlYXRlQW5kV3JpdGUgfQoyMDIyLTA2LTA5VDE3OjIwOjU2Ljk3MzE4NVogIElORk8gbmV3e29wdGlvbnM9TW91bnRPcHRpb25zIHsgYWxsb3dfb3RoZXI6IHRydWUsIGZ1c2VfY2FjaGVfdGltZW91dDogNjAwcywgdW5tb3VudF90aW1lb3V0OiAzMHMgfX06IHJzbGV4X2Z1c2U6OmZ1c2VfZnM6OmZ1c2VfbW91bnQ6IGNsb3NlIHRpbWUuYnVzeT0yMC40wrVzIHRpbWUuaWRsZT0xOC42wrVzCjIwMjItMDYtMDlUMTc6MjA6NTYuOTczNjUxWiAgSU5GTyByc2xleF9mdXNlOjpmdXNlX2ZzOjpmdXNlX21vdW50OiBbcnNsZXgtZnVzZTo6RnVzZU1vdW50Ojptb3VudF0gbW91bnRpbmcgZmlsZXN5c3RlbSB3aXRoIG1vdW50IGFyZ3VtZW50cyBbImRhdGFzZXRfdm9sdW1lX21vdW50IiwgIi1vIiwgImFsbG93X290aGVyIiwgIi1vIiwgImF0dHJfdGltZW91dD0wIiwgIi1vIiwgImVudHJ5X3RpbWVvdXQ9NjAwIiwgIi1vIiwgImJpZ193cml0ZXMiLCAiLW8iLCAiZnNuYW1lPXJzbGV4X3ZvbHVtZV9tb3VudFtBbWxEYXRhc3RvcmVdIl0uIExpYmZ1c2UgdmVyc2lvbiAyOCBmdXNlX2FyZ3VtZW50cz1bImRhdGFzZXRfdm9sdW1lX21vdW50IiwgIi1vIiwgImFsbG93X290aGVyIiwgIi1vIiwgImF0dHJfdGltZW91dD0wIiwgIi1vIiwgImVudHJ5X3RpbWVvdXQ9NjAwIiwgIi1vIiwgImJpZ193cml0ZXMiLCAiLW8iLCAiZnNuYW1lPXJzbGV4X3ZvbHVtZV9tb3VudFtBbWxEYXRhc3RvcmVdIl0gZnVzZV92ZXJzaW9uPTI4IHBpZD0xOSBtb3VudF9wb2ludD0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkL291dHB1dDEKMjAyMi0wNi0wOVQxNzoyMDo1Ny45NzQ1MjdaICBJTkZPIHJzbGV4X2Z1c2U6OmZ1c2VfZnM6OmZ1c2VfbW91bnQ6IFtyc2xleC1mdXNlOjpGdXNlTW91bnQ6Om1vdW50XSBmaWxlc3lzdGVtIG1vdW50ZWQgcGlkPTE5IG1vdW50X3BvaW50PS9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9kYXRhLWNhcGFiaWxpdHkvd2Qvb3V0cHV0MQoyMDIyLTA2LTA5VDE3OjIwOjU4LjAxNjg4NFogIElORk8gY29weTpkb19zZXF1ZW50aWFsX2NvcHl7ZmlsZV9zaXplPTEyfTogcnNsZXhfY29yZTo6ZmlsZV9pbzo6c3RyZWFtX2NvcGllcjogY2xvc2UgdGltZS5idXN5PTguNzJtcyB0aW1lLmlkbGU9NC41MMK1cwoyMDIyLTA2LTA5VDE3OjIwOjU4LjAxNjkzMVogIElORk8gY29weTogcnNsZXhfY29yZTo6ZmlsZV9pbzo6c3RyZWFtX2NvcGllcjogW1N0cmVhbUNvcGllcjo6Y29weSgpXSBjb3BpZWQgZmlsZSBzaXplPTEyIGhhbmRsZXI9IkxvY2FsIiBkZXN0aW5hdGlvbj1vdXRwdXQudHh0IGR1cmF0aW9uPTAuMDA4NzkwNDQ5IHNlcXVlbnRpYWw9dHJ1ZQoyMDIyLTA2LTA5VDE3OjIwOjU4LjAxNjk4OFogIElORk8gY29weTogcnNsZXhfY29yZTo6ZmlsZV9pbzo6c3RyZWFtX2NvcGllcjogY2xvc2UgdGltZS5idXN5PTguODdtcyB0aW1lLmlkbGU9Ny41MMK1cwoyMDIyLTA2LTA5VDE3OjIxOjAxLjAzOTQxNVogIElORk8gcnNsZXhfZnVzZTo6ZnVzZV9mczo6ZnVzZV9tb3VudDogW3JzbGV4LWZ1c2U6OkZ1c2VNb3VudDo6dW5tb3VudF0gc3RhcnRpbmcgZmlsZXN5c3RlbSB1bm1vdW50IHBpZD0xOSBtb3VudF9wb2ludD0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkL291dHB1dDEKMjAyMi0wNi0wOVQxNzoyMTowMS4wNDAxNjFaICBJTkZPIHJzbGV4X2Z1c2U6OmZ1c2VfZnM6OmZ1c2VfbW91bnQ6OmZzX29wZXJhdGlvbnM6IFtyc2xleC1mdXNlOjpGdXNlTW91bnQ6OmRlc3Ryb3ldIGRlc3Ryb3lpbmcgZmlsZSBzeXN0ZW0KMjAyMi0wNi0wOVQxNzoyMTowMS4wNDAyMDZaICBJTkZPIHJzbGV4X2Z1c2U6OmRpcmVjdF92b2x1bWVfbW91bnQ6OmRpcmVjdF92b2x1bWVfbW91bnQ6IFtyc2xleC1mdXNlOjpEaXJlY3RWb2x1bWVPcHRpb25zOjpkZXN0cm95KCldIGRlc3Ryb3lpbmcgZmlsZXN5c3RlbSBoYW5kbGVyPUFtbERhdGFzdG9yZSBwaWQ9MTkgb3BlbmVkX2ZpbGVfaGFuZGxlcz0tMQo="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/hosttools_capability/hosttools-capability.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "55792",
        "Content-Range": "bytes 0-55791/55792",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "ETag": "\u00220x8DA4A3C6C9C5E1F\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:20:32 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "MjAyMi0wNi0wOVQxNzoyMDozMi4yODQ3MTJaICBJTkZPIHRlbGVtZXRyeTogam9iX3RlbGVtZXRyeV9pbml0IGFydGlmYWN0X3R5cGU9aW5zdGFsbGVkIGJyYW5jaD1vcmlnaW4vZTYzYmIxNmE5NjEwZWJlZWU2OGRmYzVkZmJlMzYzYTMxYjkzZGQwNyBjaV9udW1iZXI9MjAyMjA1MzEuMiBjaV9uYW1lPUNvbW1vblJ1bnRpbWUtcHJvZC1idWlsZCBidWlsZF90aW1lPTIwMjItMDYtMDEgMDQ6MDY6NTUuNTI4ODczCjIwMjItMDYtMDlUMTc6MjA6MzIuMjg0ODM0WiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjogY3JfY29yZTogU3VjY2Vzc2Z1bGx5IGNvbmZpZ3VyZWQgY3VycmVudCBwcm9jZXNzIHRvIGlnbm9yZSB0ZXJtaW5hdGlvbiBzaWduYWxzCjIwMjItMDYtMDlUMTc6MjA6MzIuMjg0ODU2WiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjogaG9zdHRvb2xzX2NhcGFiaWxpdHk6IEhvc3R0b29scyBjYXAgY29uZmlnIGh0X2NhcF9jb25maWc9eyJkaXJzIjpbeyJyZWxhdGl2ZV9wYXRoIjoidXNlcl9sb2dzIiwiZW52aXJvbm1lbnRfbmFtZSI6IkFaVVJFTUxfQ1JfSFRfQ0FQX3VzZXJfbG9nc19QQVRIIiwic3RyZWFtYWJsZSI6dHJ1ZX0seyJyZWxhdGl2ZV9wYXRoIjoiYXp1cmVtbC1sb2dzIiwiZW52aXJvbm1lbnRfbmFtZSI6IkFaVVJFTUxfQ1JfSFRfQ0FQX2F6dXJlbWxfbG9nc19QQVRIIiwic3RyZWFtYWJsZSI6dHJ1ZX0seyJyZWxhdGl2ZV9wYXRoIjoib3V0cHV0cyIsImVudmlyb25tZW50X25hbWUiOiJBWlVSRU1MX0NSX0hUX0NBUF9vdXRwdXRzX1BBVEgiLCJzdHJlYW1hYmxlIjpmYWxzZX0seyJyZWxhdGl2ZV9wYXRoIjoibG9ncyIsImVudmlyb25tZW50X25hbWUiOiJBWlVSRU1MX0NSX0hUX0NBUF9sb2dzX1BBVEgiLCJzdHJlYW1hYmxlIjp0cnVlfV0sIm1ldHJpY3MiOnsiZW5hYmxlZCI6dHJ1ZSwicG9sbGluZ19pbnRlcnZhbF9zZWMiOjMwLCJzZW5kX3RvX2hpc3RvcnlfaW50ZXJ2YWxfc2VjIjo2MH0sInVzZV9ibG9ja19ibG9iX2luX2Jsb2Jfc3RyZWFtZXIiOnRydWUsImxvZ19maWx0ZXJpbmdfcG9saWN5IjpudWxsfQoyMDIyLTA2LTA5VDE3OjIwOjMyLjI4NTEwNlogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHk6OmRvX21haW46aG9zdHRvb2xzLWNhcGFiaWxpdHkucGFyc2VfY29uZmlnOiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6Y29uZmlnX3BhcnNlcjogYXBwaW5zaWdodHMgaW5zdHJ1bWVudGF0aW9uIGtleSBpcyBzZXQgaW4gdGVsZW1ldHJ5IGNvbmZpZwoyMDIyLTA2LTA5VDE3OjIwOjMyLjI4NTE5NlogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHk6OmRvX21haW46aG9zdHRvb2xzLWNhcGFiaWxpdHkucGFyc2VfY29uZmlnOmhvc3R0b29scy1jYXBhYmlsaXR5LmFkZF9jZXJ0X2Vudl92YXJzX2Zyb21fZmlsZXtwYXRoPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvY2VydF9pbmZvLnR4dCJ9OiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6Y29uZmlnX3BhcnNlcjogQ2VydCBlbnZzIGZyb20gY2VydF9maWxlIHdhcyBzdWNjZXNzZnVsCjIwMjItMDYtMDlUMTc6MjA6MzIuMjg1MjE3WiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjpob3N0dG9vbHMtY2FwYWJpbGl0eS5wYXJzZV9jb25maWc6aG9zdHRvb2xzLWNhcGFiaWxpdHkuYWRkX2NlcnRfZW52X3ZhcnNfZnJvbV9maWxle3BhdGg9Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9ob3N0dG9vbHMtY2FwYWJpbGl0eS93ZC9jZXJ0X2luZm8udHh0In06IGhvc3R0b29sc19jYXBhYmlsaXR5Ojpjb25maWdfcGFyc2VyOiBjbG9zZSB0aW1lLmJ1c3k9NzIuOcK1cyB0aW1lLmlkbGU9Ny42MMK1cwoyMDIyLTA2LTA5VDE3OjIwOjMyLjI4NTI1MFogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHk6OmRvX21haW46aG9zdHRvb2xzLWNhcGFiaWxpdHkucGFyc2VfY29uZmlnOiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6Y29uZmlnX3BhcnNlcjogY2xvc2UgdGltZS5idXN5PTM2M8K1cyB0aW1lLmlkbGU9Ny4zMMK1cwoyMDIyLTA2LTA5VDE3OjIwOjMyLjMwNjE1N1ogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHk6OmRvX21haW46aG9zdHRvb2xzLWNhcGFiaWxpdHkuc3RhcnRfbm9kZXN0YXRzYWdlbnQ6IGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IGNoaWxkIHNwYXduZWQgY2hpbGQ9Q2hpbGQgeyBjaGlsZDogQ2hpbGQoQ2hpbGREcm9wR3VhcmQgeyBpbm5lcjogQ2hpbGQgeyBwaWQ6IDE3IH0sIGtpbGxfb25fZHJvcDogZmFsc2UgfSksIHN0ZGluOiBOb25lLCBzdGRvdXQ6IFNvbWUoQ2hpbGRTdGRvdXQgeyBpbm5lcjogUG9sbEV2ZW50ZWQgeyBpbzogU29tZShQaXBlIHsgZmQ6IEZpbGUgeyBmZDogMTYsIHBhdGg6ICJwaXBlOls3NDY5NF0iLCByZWFkOiB0cnVlLCB3cml0ZTogZmFsc2UgfSB9KSB9IH0pLCBzdGRlcnI6IFNvbWUoQ2hpbGRTdGRlcnIgeyBpbm5lcjogUG9sbEV2ZW50ZWQgeyBpbzogU29tZShQaXBlIHsgZmQ6IEZpbGUgeyBmZDogMTgsIHBhdGg6ICJwaXBlOls3NDY5NV0iLCByZWFkOiB0cnVlLCB3cml0ZTogZmFsc2UgfSB9KSB9IH0pIH0KMjAyMi0wNi0wOVQxNzoyMDozMi4zMDYzMDZaICBJTkZPIGhvc3R0b29scy1jYXBhYmlsaXR5Ojpkb19tYWluOmhvc3R0b29scy1jYXBhYmlsaXR5LnN0YXJ0X25vZGVzdGF0c2FnZW50OiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBjbG9zZSB0aW1lLmJ1c3k9MjAuMm1zIHRpbWUuaWRsZT00LjcwwrVzCjIwMjItMDYtMDlUMTc6MjA6MzIuMzA5NDM4WiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjpob3N0dG9vbHMtY2FwYWJpbGl0eS5zdGFydF9ob3N0dG9vbHN7dGFzaz0ib3V0cHV0TWFuYWdlciJ9OiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBjaGlsZCBzcGF3bmVkIGNoaWxkPUNoaWxkIHsgY2hpbGQ6IENoaWxkKENoaWxkRHJvcEd1YXJkIHsgaW5uZXI6IENoaWxkIHsgcGlkOiAxOCB9LCBraWxsX29uX2Ryb3A6IGZhbHNlIH0pLCBzdGRpbjogTm9uZSwgc3Rkb3V0OiBTb21lKENoaWxkU3Rkb3V0IHsgaW5uZXI6IFBvbGxFdmVudGVkIHsgaW86IFNvbWUoUGlwZSB7IGZkOiBGaWxlIHsgZmQ6IDE3LCBwYXRoOiAicGlwZTpbNzQ3MDNdIiwgcmVhZDogdHJ1ZSwgd3JpdGU6IGZhbHNlIH0gfSkgfSB9KSwgc3RkZXJyOiBTb21lKENoaWxkU3RkZXJyIHsgaW5uZXI6IFBvbGxFdmVudGVkIHsgaW86IFNvbWUoUGlwZSB7IGZkOiBGaWxlIHsgZmQ6IDIwLCBwYXRoOiAicGlwZTpbNzQ3MDRdIiwgcmVhZDogdHJ1ZSwgd3JpdGU6IGZhbHNlIH0gfSkgfSB9KSB9CjIwMjItMDYtMDlUMTc6MjA6MzIuMzA5NTYwWiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjpob3N0dG9vbHMtY2FwYWJpbGl0eS5zdGFydF9ob3N0dG9vbHN7dGFzaz0ib3V0cHV0TWFuYWdlciJ9OiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBjbG9zZSB0aW1lLmJ1c3k9My4yMW1zIHRpbWUuaWRsZT03LjIwwrVzCjIwMjItMDYtMDlUMTc6MjA6MzIuMzA5NTg5WiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjogaG9zdHRvb2xzX2NhcGFiaWxpdHk6IFN0YXJ0aW5nIGdSUEMgc2VydmVyIGF0IHNlcnZlcl9hZGRyPS9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2hvc3R0b29scy1jYXBhYmlsaXR5OjAKMjAyMi0wNi0wOVQxNzoyMDozMi4zMDk2MDZaICBJTkZPIGhvc3R0b29scy1jYXBhYmlsaXR5Ojpkb19tYWluOiBob3N0dG9vbHNfY2FwYWJpbGl0eTo6c2VydmljZTogc2VydmluZyBjYXBhYmlsaXR5IHNlcnZpY2UgYXQgYWRkcmVzcz0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9ob3N0dG9vbHMtY2FwYWJpbGl0eTowCjIwMjItMDYtMDlUMTc6MjA6MzIuMzA5NzEzWiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eTo6ZG9fbWFpbjpzZXJ2ZTogZ3JwY191dGlsczo6ZW5kcG9pbnQ6OnNlcnZlOiBzZXJ2aW5nIGdSUEMgc2VydmljZSBlbmRwb2ludD1VZHMoIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2hvc3R0b29scy1jYXBhYmlsaXR5OjAiKSByZXRyeT1FeHBvbmVudGlhbEJhY2tvZmZSZXRyeSB7IHJldHJ5X2RlbGF5X3NlY3M6IDIsIGRlbGF5X2ZhY3RvcjogMTAwMCwgbnVtX3JldHJpZXM6IDMgfQoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNTU2M1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIEVycm9yIG9wZW5pbmcgZW52IGZpbGU6ICBvcGVuIExTX3Jvb3Qvam9icy9jb25maWcvLmR5bmFtaWNfY29uZmlnOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBFcnJvciBvcGVuaW5nIGVudiBmaWxlOiAgb3BlbiBMU19yb290L2pvYnMvY29uZmlnLy5keW5hbWljX2NvbmZpZzogbm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zMjU4ODlaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBTY3J1YmJlciBpcyBub3QgaW5pdGlhbGl6ZSwgU3lzdGVtIExvZyB3aWxsIGJlIGRpc2FibGVkIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBTY3J1YmJlciBpcyBub3QgaW5pdGlhbGl6ZSwgU3lzdGVtIExvZyB3aWxsIGJlIGRpc2FibGVkIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNTkzMFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFN0YXJ0aW5nIEFwcCBJbnNpZ2h0IExvZ2dlciBmb3IgdGFzazogIG91dHB1dE1hbmFnZXIgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFN0YXJ0aW5nIEFwcCBJbnNpZ2h0IExvZ2dlciBmb3IgdGFzazogIG91dHB1dE1hbmFnZXIiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzI1OTUwWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgVmVyc2lvbjogIEJyYW5jaDogIENvbW1pdDogIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBWZXJzaW9uOiAgQnJhbmNoOiAgQ29tbWl0OiAiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzI1OTY5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgSXMgbGF1bmNoZWQgZnJvbSBjb21tb24gcnVudGltZT86IHRydWUgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIElzIGxhdW5jaGVkIGZyb20gY29tbW9uIHJ1bnRpbWU/OiB0cnVlIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNTk4NFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFNvZnQgcmxpbWl0IGlzIDI2MjE0NCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgU29mdCBybGltaXQgaXMgMjYyMTQ0IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjAwMVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFNldHRpbmcgc29mdCBybGltaXQgdG8gMTA0ODU3NiBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgU2V0dGluZyBzb2Z0IHJsaW1pdCB0byAxMDQ4NTc2IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjAxNFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIHJsaW1pdCBpcyBub3cgezI2MjE0NCAyNjIxNDR9IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBybGltaXQgaXMgbm93IHsyNjIxNDQgMjYyMTQ0fSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zMjYwMzBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBBWlVSRU1MX0NSX0hUX09VVFBVVF9ESVJFQ1RPUklFUzogW3siSWQiOiJ1c2VyX2xvZ3MiLCJQYXRoIjoiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL3VzZXJfbG9ncyIsIlN0cmVhbWFibGUiOnRydWV9LHsiSWQiOiJhenVyZW1sLWxvZ3MiLCJQYXRoIjoiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2F6dXJlbWwtbG9ncyIsIlN0cmVhbWFibGUiOnRydWV9LHsiSWQiOiJvdXRwdXRzIiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9vdXRwdXRzIiwiU3RyZWFtYWJsZSI6ZmFsc2V9LHsiSWQiOiJsb2dzIiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9sb2dzIiwiU3RyZWFtYWJsZSI6dHJ1ZX0seyJJZCI6ImxpZmVjeWNsZXIiLCJQYXRoIjoiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2xpZmVjeWNsZXIvd2QvLmF6dXJlbWxfY3JfbG9nIiwiU3RyZWFtYWJsZSI6dHJ1ZX0seyJJZCI6Imhvc3R0b29sc19jYXBhYmlsaXR5IiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9ob3N0dG9vbHMtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2ciLCJTdHJlYW1hYmxlIjp0cnVlfSx7IklkIjoiZGF0YV9jYXBhYmlsaXR5IiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9kYXRhLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIiwiU3RyZWFtYWJsZSI6dHJ1ZX0seyJJZCI6ImNzX2NhcGFiaWxpdHkiLCJQYXRoIjoiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2NzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIiwiU3RyZWFtYWJsZSI6dHJ1ZX1dIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBBWlVSRU1MX0NSX0hUX09VVFBVVF9ESVJFQ1RPUklFUzogW3tcIklkXCI6XCJ1c2VyX2xvZ3NcIixcIlBhdGhcIjpcIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC91c2VyX2xvZ3NcIixcIlN0cmVhbWFibGVcIjp0cnVlfSx7XCJJZFwiOlwiYXp1cmVtbC1sb2dzXCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvYXp1cmVtbC1sb2dzXCIsXCJTdHJlYW1hYmxlXCI6dHJ1ZX0se1wiSWRcIjpcIm91dHB1dHNcIixcIlBhdGhcIjpcIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9vdXRwdXRzXCIsXCJTdHJlYW1hYmxlXCI6ZmFsc2V9LHtcIklkXCI6XCJsb2dzXCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvbG9nc1wiLFwiU3RyZWFtYWJsZVwiOnRydWV9LHtcIklkXCI6XCJsaWZlY3ljbGVyXCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvbGlmZWN5Y2xlci93ZC8uYXp1cmVtbF9jcl9sb2dcIixcIlN0cmVhbWFibGVcIjp0cnVlfSx7XCJJZFwiOlwiaG9zdHRvb2xzX2NhcGFiaWxpdHlcIixcIlBhdGhcIjpcIi9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9ob3N0dG9vbHMtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2dcIixcIlN0cmVhbWFibGVcIjp0cnVlfSx7XCJJZFwiOlwiZGF0YV9jYXBhYmlsaXR5XCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZ1wiLFwiU3RyZWFtYWJsZVwiOnRydWV9LHtcIklkXCI6XCJjc19jYXBhYmlsaXR5XCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvY3MtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2dcIixcIlN0cmVhbWFibGVcIjp0cnVlfV0iCjIwMjItMDYtMDlUMTc6MjA6MzIuMzI2MDk4WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgQVpVUkVNTF9DUl9IVF9PVVRQVVRfRElSRUNUT1JJRVM6IFt7IklkIjoidXNlcl9sb2dzIiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC91c2VyX2xvZ3MiLCJTdHJlYW1hYmxlIjp0cnVlfSx7IklkIjoiYXp1cmVtbC1sb2dzIiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9henVyZW1sLWxvZ3MiLCJTdHJlYW1hYmxlIjp0cnVlfSx7IklkIjoib3V0cHV0cyIsIlBhdGgiOiIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2Qvb3V0cHV0cyIsIlN0cmVhbWFibGUiOmZhbHNlfSx7IklkIjoibG9ncyIsIlBhdGgiOiIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvbG9ncyIsIlN0cmVhbWFibGUiOnRydWV9LHsiSWQiOiJsaWZlY3ljbGVyIiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9saWZlY3ljbGVyL3dkLy5henVyZW1sX2NyX2xvZyIsIlN0cmVhbWFibGUiOnRydWV9LHsiSWQiOiJob3N0dG9vbHNfY2FwYWJpbGl0eSIsIlBhdGgiOiIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIiwiU3RyZWFtYWJsZSI6dHJ1ZX0seyJJZCI6ImRhdGFfY2FwYWJpbGl0eSIsIlBhdGgiOiIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyIsIlN0cmVhbWFibGUiOnRydWV9LHsiSWQiOiJjc19jYXBhYmlsaXR5IiwiUGF0aCI6Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9jcy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyIsIlN0cmVhbWFibGUiOnRydWV9XSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgQVpVUkVNTF9DUl9IVF9PVVRQVVRfRElSRUNUT1JJRVM6IFt7XCJJZFwiOlwidXNlcl9sb2dzXCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvdXNlcl9sb2dzXCIsXCJTdHJlYW1hYmxlXCI6dHJ1ZX0se1wiSWRcIjpcImF6dXJlbWwtbG9nc1wiLFwiUGF0aFwiOlwiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2F6dXJlbWwtbG9nc1wiLFwiU3RyZWFtYWJsZVwiOnRydWV9LHtcIklkXCI6XCJvdXRwdXRzXCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2Qvb3V0cHV0c1wiLFwiU3RyZWFtYWJsZVwiOmZhbHNlfSx7XCJJZFwiOlwibG9nc1wiLFwiUGF0aFwiOlwiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2xvZ3NcIixcIlN0cmVhbWFibGVcIjp0cnVlfSx7XCJJZFwiOlwibGlmZWN5Y2xlclwiLFwiUGF0aFwiOlwiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2xpZmVjeWNsZXIvd2QvLmF6dXJlbWxfY3JfbG9nXCIsXCJTdHJlYW1hYmxlXCI6dHJ1ZX0se1wiSWRcIjpcImhvc3R0b29sc19jYXBhYmlsaXR5XCIsXCJQYXRoXCI6XCIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nXCIsXCJTdHJlYW1hYmxlXCI6dHJ1ZX0se1wiSWRcIjpcImRhdGFfY2FwYWJpbGl0eVwiLFwiUGF0aFwiOlwiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2RhdGEtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2dcIixcIlN0cmVhbWFibGVcIjp0cnVlfSx7XCJJZFwiOlwiY3NfY2FwYWJpbGl0eVwiLFwiUGF0aFwiOlwiL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2NzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nXCIsXCJTdHJlYW1hYmxlXCI6dHJ1ZX1dIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjE2NlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIEFaVVJFTUxfQ1JfSFRfTE9HX0ZJTFRFUklOR19QT0xJQ1k6ICBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgQVpVUkVNTF9DUl9IVF9MT0dfRklMVEVSSU5HX1BPTElDWTogIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjE4MVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIEFaVVJFTUxfQ1JfSFRfTE9HX0ZJTFRFUklOR19QT0xJQ1k6ICBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgQVpVUkVNTF9DUl9IVF9MT0dfRklMVEVSSU5HX1BPTElDWTogIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjIwMFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFN0YXJ0aW5nIEpvYk1hc3RlclNlcnZlciBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgU3RhcnRpbmcgSm9iTWFzdGVyU2VydmVyIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjIxNFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFN0YXJ0aW5nIEpvYk1hc3RlclNlcnZlciBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgU3RhcnRpbmcgSm9iTWFzdGVyU2VydmVyIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjIyN1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIEZhaWxlZCB0byBQYXJzZSBCb29sIG9uIGNvbW1vbnMuSXNEZWRpY2F0ZWRDb21wdXRlIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBGYWlsZWQgdG8gUGFyc2UgQm9vbCBvbiBjb21tb25zLklzRGVkaWNhdGVkQ29tcHV0ZSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zMjYyNDJaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBTa2lwIHdhdGNoaW5nIGpvYiB0ZW1wIGZ1bGwgbG9nIGNhY2hlIGRpciBhcyBjdXJyZW50IG91dHB1dCBtYW5hZ2VyIGlzIGxhdW5jaGVkIGJ5IGNvbW1vbiBydW50aW1lIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBTa2lwIHdhdGNoaW5nIGpvYiB0ZW1wIGZ1bGwgbG9nIGNhY2hlIGRpciBhcyBjdXJyZW50IG91dHB1dCBtYW5hZ2VyIGlzIGxhdW5jaGVkIGJ5IGNvbW1vbiBydW50aW1lIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjMyNjk2NVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIHN0YXJ0IHdhdGNoaW5nIGRpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvdXNlcl9sb2dzLCBzdHJlYW1hYmxlOiB0cnVlIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBzdGFydCB3YXRjaGluZyBkaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL3VzZXJfbG9ncywgc3RyZWFtYWJsZTogdHJ1ZSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zMjc3NDRaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL3VzZXJfbG9ncyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgV2UgaGF2ZSB0byByZWZyZXNoIHRoZSBkaXIgb25lIG1vcmUgdGltZSBiZWZvcmUgd2Ugc3RvcCB0aGUgd2F0Y2ggRGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC91c2VyX2xvZ3MiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzQxNDM0WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgSW5pdGlhbCB0b2tlbiBleHBpcmVzIGF0ICAxOTcwLTAxLTAxIDAwOjAwOjAwICswMDAwIFVUQyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgSW5pdGlhbCB0b2tlbiBleHBpcmVzIGF0ICAxOTcwLTAxLTAxIDAwOjAwOjAwICswMDAwIFVUQyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNDE1NDBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBSZWZyZXNoaW5nIFRva2VuIGZyb20gaGlzdG9yeSBzZXJ2ZXIgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFJlZnJlc2hpbmcgVG9rZW4gZnJvbSBoaXN0b3J5IHNlcnZlciIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNDE2ODFaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBBdHRlbXB0IDEgb2YgaHR0cCBjYWxsIHRvIGh0dHBzOi8vd2VzdHVzMi5hcGkuYXp1cmVtbC5tcy9oaXN0b3J5L3YxLjAvc3Vic2NyaXB0aW9ucy9iMTcyNTNmYS1mMzI3LTQyZDYtOTY4Ni1mM2U1NTNlMjQ3NjMvcmVzb3VyY2VHcm91cHMvcmctdGVzdHJnL3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFjaGluZUxlYXJuaW5nU2VydmljZXMvd29ya3NwYWNlcy9zZGtfdm5leHRfY2xpL2V4cGVyaW1lbnRzL2F6dXJlLWFpLW1sL3J1bnMvdGVzdF81NzA2OTE5MTEzNDJfMi90b2tlbiBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwczovL3dlc3R1czIuYXBpLmF6dXJlbWwubXMvaGlzdG9yeS92MS4wL3N1YnNjcmlwdGlvbnMvYjE3MjUzZmEtZjMyNy00MmQ2LTk2ODYtZjNlNTUzZTI0NzYzL3Jlc291cmNlR3JvdXBzL3JnLXRlc3RyZy9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hY2hpbmVMZWFybmluZ1NlcnZpY2VzL3dvcmtzcGFjZXMvc2RrX3ZuZXh0X2NsaS9leHBlcmltZW50cy9henVyZS1haS1tbC9ydW5zL3Rlc3RfNTcwNjkxOTExMzQyXzIvdG9rZW4iCjIwMjItMDYtMDlUMTc6MjA6MzIuMzQ2MzAzWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9saWZlY3ljbGVyL3dkLy5henVyZW1sX2NyX2xvZywgc3RyZWFtYWJsZTogdHJ1ZSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9saWZlY3ljbGVyL3dkLy5henVyZW1sX2NyX2xvZywgc3RyZWFtYWJsZTogdHJ1ZSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNDY4OTlaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2xpZmVjeWNsZXIvd2QvLmF6dXJlbWxfY3JfbG9nIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2xpZmVjeWNsZXIvd2QvLmF6dXJlbWxfY3JfbG9nIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjM0NzI0NVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvbGlmZWN5Y2xlci93ZC8uYXp1cmVtbF9jcl9sb2cvbGlmZWN5Y2xlci5sb2cgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvbGlmZWN5Y2xlci93ZC8uYXp1cmVtbF9jcl9sb2cvbGlmZWN5Y2xlci5sb2ciCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyMDAxWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9ob3N0dG9vbHMtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2csIHN0cmVhbWFibGU6IHRydWUgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIHN0YXJ0IHdhdGNoaW5nIGRpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nLCBzdHJlYW1hYmxlOiB0cnVlIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjM1MjA5OFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFdlIGhhdmUgdG8gcmVmcmVzaCB0aGUgZGlyIG9uZSBtb3JlIHRpbWUgYmVmb3JlIHdlIHN0b3AgdGhlIHdhdGNoIERpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2hvc3R0b29scy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIxMzNaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2hvc3R0b29scy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZy9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2cgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nL2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIxNTVaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBSZXF1ZXN0aW5nIFBPU1Q6IFt7c3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nfV0gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFJlcXVlc3RpbmcgUE9TVDogW3tzeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2d9XSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIxNzVaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBBdHRlbXB0IDEgb2YgaHR0cCBjYWxsIHRvIGh0dHBzOi8vd2VzdHVzMi5hcGkuYXp1cmVtbC5tcy9hcnRpZmFjdC92Mi4wL3N1YnNjcmlwdGlvbnMvYjE3MjUzZmEtZjMyNy00MmQ2LTk2ODYtZjNlNTUzZTI0NzYzL3Jlc291cmNlR3JvdXBzL3JnLXRlc3RyZy9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hY2hpbmVMZWFybmluZ1NlcnZpY2VzL3dvcmtzcGFjZXMvc2RrX3ZuZXh0X2NsaS9hcnRpZmFjdHMvYmF0Y2gvbWV0YWRhdGEvRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIEF0dGVtcHQgMSBvZiBodHRwIGNhbGwgdG8gaHR0cHM6Ly93ZXN0dXMyLmFwaS5henVyZW1sLm1zL2FydGlmYWN0L3YyLjAvc3Vic2NyaXB0aW9ucy9iMTcyNTNmYS1mMzI3LTQyZDYtOTY4Ni1mM2U1NTNlMjQ3NjMvcmVzb3VyY2VHcm91cHMvcmctdGVzdHJnL3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFjaGluZUxlYXJuaW5nU2VydmljZXMvd29ya3NwYWNlcy9zZGtfdm5leHRfY2xpL2FydGlmYWN0cy9iYXRjaC9tZXRhZGF0YS9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMiIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIyMDdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBzdGFydCB3YXRjaGluZyBkaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2F6dXJlbWwtbG9ncywgc3RyZWFtYWJsZTogdHJ1ZSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9henVyZW1sLWxvZ3MsIHN0cmVhbWFibGU6IHRydWUiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyMjI5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwOi8vbG9jYWxob3N0Ojc2NTQvZGVidWcvdmFycyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwOi8vbG9jYWxob3N0Ojc2NTQvZGVidWcvdmFycyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIyNDdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2F6dXJlbWwtbG9ncyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgV2UgaGF2ZSB0byByZWZyZXNoIHRoZSBkaXIgb25lIG1vcmUgdGltZSBiZWZvcmUgd2Ugc3RvcCB0aGUgd2F0Y2ggRGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9henVyZW1sLWxvZ3MiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyMjY4WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9vdXRwdXRzLCBzdHJlYW1hYmxlOiBmYWxzZSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9vdXRwdXRzLCBzdHJlYW1hYmxlOiBmYWxzZSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIyOTFaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL291dHB1dHMgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFdlIGhhdmUgdG8gcmVmcmVzaCB0aGUgZGlyIG9uZSBtb3JlIHRpbWUgYmVmb3JlIHdlIHN0b3AgdGhlIHdhdGNoIERpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2Qvb3V0cHV0cyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIzMTNaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBzdGFydCB3YXRjaGluZyBkaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2xvZ3MsIHN0cmVhbWFibGU6IHRydWUgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIHN0YXJ0IHdhdGNoaW5nIGRpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvbG9ncywgc3RyZWFtYWJsZTogdHJ1ZSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIzMzJaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL2xvZ3MgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFdlIGhhdmUgdG8gcmVmcmVzaCB0aGUgZGlyIG9uZSBtb3JlIHRpbWUgYmVmb3JlIHdlIHN0b3AgdGhlIHdhdGNoIERpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvbG9ncyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIzNTdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBTa2lwcGluZyBkaXNrIGNoZWNrIGR1ZSB0byBlcnI6IEVwaGVtZXJhbCBEaXNrIHBhdGggbm90IHNldCBieSBCYXRjaC4gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFNraXBwaW5nIGRpc2sgY2hlY2sgZHVlIHRvIGVycjogRXBoZW1lcmFsIERpc2sgcGF0aCBub3Qgc2V0IGJ5IEJhdGNoLiIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIzNzVaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBzdGFydCB3YXRjaGluZyBkaXJlY3RvcnkgTFNfcm9vdC9qb2JzL3dkLy50bXAsIHN0cmVhbWFibGU6IHRydWUgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIHN0YXJ0IHdhdGNoaW5nIGRpcmVjdG9yeSBMU19yb290L2pvYnMvd2QvLnRtcCwgc3RyZWFtYWJsZTogdHJ1ZSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTIzOTNaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgTFNfcm9vdC9qb2JzL3dkLy50bXAgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFdlIGhhdmUgdG8gcmVmcmVzaCB0aGUgZGlyIG9uZSBtb3JlIHRpbWUgYmVmb3JlIHdlIHN0b3AgdGhlIHdhdGNoIERpcmVjdG9yeSBMU19yb290L2pvYnMvd2QvLnRtcCIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTI0MTJaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBmaWxlIExTX3Jvb3Qvam9icy93ZC8udG1wIGRvZXMgbm90IGV4aXN0IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBmaWxlIExTX3Jvb3Qvam9icy93ZC8udG1wIGRvZXMgbm90IGV4aXN0IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjM1MjQzM1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIHN0YXJ0IHdhdGNoaW5nIGRpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvY3MtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2csIHN0cmVhbWFibGU6IHRydWUgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIHN0YXJ0IHdhdGNoaW5nIGRpcmVjdG9yeSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvY3MtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2csIHN0cmVhbWFibGU6IHRydWUiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyNDU0WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgV2UgaGF2ZSB0byByZWZyZXNoIHRoZSBkaXIgb25lIG1vcmUgdGltZSBiZWZvcmUgd2Ugc3RvcCB0aGUgd2F0Y2ggRGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9jcy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgV2UgaGF2ZSB0byByZWZyZXNoIHRoZSBkaXIgb25lIG1vcmUgdGltZSBiZWZvcmUgd2Ugc3RvcCB0aGUgd2F0Y2ggRGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9jcy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTI0ODBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBmaWxlIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9jcy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyBkb2VzIG5vdCBleGlzdCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgZmlsZSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvY3MtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2cgZG9lcyBub3QgZXhpc3QiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyNDk5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgc3RhcnQgd2F0Y2hpbmcgZGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9kYXRhLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nLCBzdHJlYW1hYmxlOiB0cnVlIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBzdGFydCB3YXRjaGluZyBkaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2RhdGEtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2csIHN0cmVhbWFibGU6IHRydWUiCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyNTIwWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgV2UgaGF2ZSB0byByZWZyZXNoIHRoZSBkaXIgb25lIG1vcmUgdGltZSBiZWZvcmUgd2Ugc3RvcCB0aGUgd2F0Y2ggRGlyZWN0b3J5IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9kYXRhLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBXZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGRpciBvbmUgbW9yZSB0aW1lIGJlZm9yZSB3ZSBzdG9wIHRoZSB3YXRjaCBEaXJlY3RvcnkgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2RhdGEtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2ciCjIwMjItMDYtMDlUMTc6MjA6MzIuMzUyNTQ2WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgZmlsZSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyBkb2VzIG5vdCBleGlzdCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgZmlsZSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyBkb2VzIG5vdCBleGlzdCIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTc4NjdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBGYWlsZWQgdG8gcnVuIG52aWRpYS1zbWkgdG8gZ2V0IGdwdSBtZXRyaWNzIHdpdGggZXJyb3I6IGV4aXQgc3RhdHVzIDEyNywgc3RkZXJyOiB7WzQ3IDk4IDEwNSAxMTAgNDcgMTE1IDEwNCA1OCAzMiA0OSA1OCAzMiAxMTAgMTE4IDEwNSAxMDAgMTA1IDk3IDQ1IDExNSAxMDkgMTA1IDU4IDMyIDExMCAxMTEgMTE2IDMyIDEwMiAxMTEgMTE3IDExMCAxMDAgMTBdIDAgMH0gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIEZhaWxlZCB0byBydW4gbnZpZGlhLXNtaSB0byBnZXQgZ3B1IG1ldHJpY3Mgd2l0aCBlcnJvcjogZXhpdCBzdGF0dXMgMTI3LCBzdGRlcnI6IHtbNDcgOTggMTA1IDExMCA0NyAxMTUgMTA0IDU4IDMyIDQ5IDU4IDMyIDExMCAxMTggMTA1IDEwMCAxMDUgOTcgNDUgMTE1IDEwOSAxMDUgNTggMzIgMTEwIDExMSAxMTYgMzIgMTAyIDExMSAxMTcgMTEwIDEwMCAxMF0gMCAwfSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTc5MjRaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBHZXQgR3B1IG1lbW9yeSB1dGlsaXphdGlvbjogbWFwW10gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIEdldCBHcHUgbWVtb3J5IHV0aWxpemF0aW9uOiBtYXBbXSIKMjAyMi0wNi0wOVQxNzoyMDozMi4zNTg0MDZaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBSZXF1ZXN0aW5nIFBPU1Q6IFt7c3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZ31dIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBSZXF1ZXN0aW5nIFBPU1Q6IFt7c3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZ31dIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjM1ODU2N1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIEF0dGVtcHQgMSBvZiBodHRwIGNhbGwgdG8gaHR0cHM6Ly93ZXN0dXMyLmFwaS5henVyZW1sLm1zL2FydGlmYWN0L3YyLjAvc3Vic2NyaXB0aW9ucy9iMTcyNTNmYS1mMzI3LTQyZDYtOTY4Ni1mM2U1NTNlMjQ3NjMvcmVzb3VyY2VHcm91cHMvcmctdGVzdHJnL3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFjaGluZUxlYXJuaW5nU2VydmljZXMvd29ya3NwYWNlcy9zZGtfdm5leHRfY2xpL2FydGlmYWN0cy9iYXRjaC9tZXRhZGF0YS9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMiBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwczovL3dlc3R1czIuYXBpLmF6dXJlbWwubXMvYXJ0aWZhY3QvdjIuMC9zdWJzY3JpcHRpb25zL2IxNzI1M2ZhLWYzMjctNDJkNi05Njg2LWYzZTU1M2UyNDc2My9yZXNvdXJjZUdyb3Vwcy9yZy10ZXN0cmcvcHJvdmlkZXJzL01pY3Jvc29mdC5NYWNoaW5lTGVhcm5pbmdTZXJ2aWNlcy93b3Jrc3BhY2VzL3Nka192bmV4dF9jbGkvYXJ0aWZhY3RzL2JhdGNoL21ldGFkYXRhL0V4cGVyaW1lbnRSdW4vZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjU0NDc5NlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIE5ldyB0b2tlbiBleHBpcmVzIGF0ICAyMDIyLTA2LTEwIDE3OjIwOjMyLjU0MjY5OTUgKzAwMDAgVVRDIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBOZXcgdG9rZW4gZXhwaXJlcyBhdCAgMjAyMi0wNi0xMCAxNzoyMDozMi41NDI2OTk1ICswMDAwIFVUQyIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzAzMTlaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBTdWNjZXNmdWxseSBQT1NUIGFydGlmYWN0czogW3tzeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2d9XSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgU3VjY2VzZnVsbHkgUE9TVCBhcnRpZmFjdHM6IFt7c3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nfV0iCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM1NzA2WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjA6MzIgUmVjZWl2ZWQgZnJvbSBhcnRpZmFjdCBzdmM6IHsgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFJlY2VpdmVkIGZyb20gYXJ0aWZhY3Qgc3ZjOiB7IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTc1MVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICJhcnRpZmFjdHMiOiB7IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICBcImFydGlmYWN0c1wiOiB7IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTc2OVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgInN5c3RlbV9sb2dzL2hvc3R0b29sc19jYXBhYmlsaXR5L2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZyI6IHsgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgXCJzeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2dcIjogeyIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzU3ODZaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgImFydGlmYWN0SWQiOiAiRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIvc3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcImFydGlmYWN0SWRcIjogXCJFeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMi9zeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2dcIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM1ODA2WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJvcmlnaW4iOiAiRXhwZXJpbWVudFJ1biIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJvcmlnaW5cIjogXCJFeHBlcmltZW50UnVuXCIsIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTgyMFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAiY29udGFpbmVyIjogImRjaWQudGVzdF81NzA2OTE5MTEzNDJfMiIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJjb250YWluZXJcIjogXCJkY2lkLnRlc3RfNTcwNjkxOTExMzQyXzJcIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM1ODM2WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJwYXRoIjogInN5c3RlbV9sb2dzL2hvc3R0b29sc19jYXBhYmlsaXR5L2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZyIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJwYXRoXCI6IFwic3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nXCIsIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTg1NVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAiZXRhZyI6ICJcIjkyMDM3MmE4LTAwMDAtMDgwMC0wMDAwLTYyYTIyYmUwMDAwMFwiIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcImV0YWdcIjogXCJcXFwiOTIwMzcyYTgtMDAwMC0wODAwLTAwMDAtNjJhMjJiZTAwMDAwXFxcIlwiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzU4NzFaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgImNyZWF0ZWRUaW1lIjogIjIwMjItMDYtMDlUMTc6MjA6MzIuNTc0Njc3NyswMDowMCIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJjcmVhdGVkVGltZVwiOiBcIjIwMjItMDYtMDlUMTc6MjA6MzIuNTc0Njc3NyswMDowMFwiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzU4ODdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgImRhdGFQYXRoIjogbnVsbCwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcImRhdGFQYXRoXCI6IG51bGwsIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTkwMFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAidGFncyI6IHt9IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJ0YWdzXCI6IHt9IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTkxNFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgfSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICB9IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTkyNlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgIH0sIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICB9LCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzU5MzlaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAiYXJ0aWZhY3RDb250ZW50SW5mb3JtYXRpb24iOiB7IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICBcImFydGlmYWN0Q29udGVudEluZm9ybWF0aW9uXCI6IHsiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM1OTU3WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAic3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nIjogeyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICBcInN5c3RlbV9sb2dzL2hvc3R0b29sc19jYXBhYmlsaXR5L2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZ1wiOiB7IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNTk3M1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAiY29udGVudFVyaSI6ICJodHRwczovL3NhY2Z4dTNldXptYWwzby5ibG9iLmNvcmUud2luZG93cy5uZXQvYXp1cmVtbC9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMi9zeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2c/c3Y9MjAxOS0wNy0wNyZzcj1iJnNpZz1ZdDZWRHFtc05aY1JXV2pwVnJpVFl5VkNWJTJCazFpbldlOENZejhNYmw5WnMlM0Qmc2tvaWQ9MzgxYjYwN2MtN2E0Ni00MWE3LThjZWYtYTY1MTEzZTA5MjNmJnNrdGlkPTcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0NyZza3Q9MjAyMi0wNi0wOVQxNyUzQTA4JTNBNTlaJnNrZT0yMDIyLTA2LTExVDAxJTNBMTglM0E1OVomc2tzPWImc2t2PTIwMTktMDctMDcmc3Q9MjAyMi0wNi0wOVQxNyUzQTEwJTNBMzJaJnNlPTIwMjItMDYtMTBUMTclM0EyMCUzQTMyWiZzcD1yY3ciLCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICAgIFwiY29udGVudFVyaVwiOiBcImh0dHBzOi8vc2FjZnh1M2V1em1hbDNvLmJsb2IuY29yZS53aW5kb3dzLm5ldC9henVyZW1sL0V4cGVyaW1lbnRSdW4vZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yL3N5c3RlbV9sb2dzL2hvc3R0b29sc19jYXBhYmlsaXR5L2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZz9zdj0yMDE5LTA3LTA3JnNyPWImc2lnPVl0NlZEcW1zTlpjUldXanBWcmlUWXlWQ1YlMkJrMWluV2U4Q1l6OE1ibDlacyUzRCZza29pZD0zODFiNjA3Yy03YTQ2LTQxYTctOGNlZi1hNjUxMTNlMDkyM2Ymc2t0aWQ9NzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3JnNrdD0yMDIyLTA2LTA5VDE3JTNBMDglM0E1OVomc2tlPTIwMjItMDYtMTFUMDElM0ExOCUzQTU5WiZza3M9YiZza3Y9MjAxOS0wNy0wNyZzdD0yMDIyLTA2LTA5VDE3JTNBMTAlM0EzMlomc2U9MjAyMi0wNi0xMFQxNyUzQTIwJTNBMzJaJnNwPXJjd1wiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzYwMTFaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgIm9yaWdpbiI6ICJFeHBlcmltZW50UnVuIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcIm9yaWdpblwiOiBcIkV4cGVyaW1lbnRSdW5cIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM2MDI1WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJjb250YWluZXIiOiAiZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcImNvbnRhaW5lclwiOiBcImRjaWQudGVzdF81NzA2OTE5MTEzNDJfMlwiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzYwNDBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgInBhdGgiOiAic3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcInBhdGhcIjogXCJzeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2dcIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM2MDU5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJ0YWdzIjoge30gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcInRhZ3NcIjoge30iCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM2MDczWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICB9IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgIH0iCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM2MTI0WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgfSwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgIH0sIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzNjEzN1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICJlcnJvcnMiOiB7fSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgXCJlcnJvcnNcIjoge30iCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM2MTUxWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IH0gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSJ9IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTAzMVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFN1Y2Nlc2Z1bGx5IFBPU1QgYXJ0aWZhY3RzOiBbe3N5c3RlbV9sb2dzL2xpZmVjeWNsZXIvbGlmZWN5Y2xlci5sb2d9XSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjA6MzIgU3VjY2VzZnVsbHkgUE9TVCBhcnRpZmFjdHM6IFt7c3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZ31dIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTI1M1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjMyIFJlY2VpdmVkIGZyb20gYXJ0aWZhY3Qgc3ZjOiB7IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBSZWNlaXZlZCBmcm9tIGFydGlmYWN0IHN2YzogeyIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzkyODVaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAiYXJ0aWZhY3RzIjogeyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgXCJhcnRpZmFjdHNcIjogeyIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzkzMDJaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICJzeXN0ZW1fbG9ncy9saWZlY3ljbGVyL2xpZmVjeWNsZXIubG9nIjogeyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICBcInN5c3RlbV9sb2dzL2xpZmVjeWNsZXIvbGlmZWN5Y2xlci5sb2dcIjogeyIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzkzMjJaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgImFydGlmYWN0SWQiOiAiRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIvc3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZyIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJhcnRpZmFjdElkXCI6IFwiRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIvc3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZ1wiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzkzNDBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgIm9yaWdpbiI6ICJFeHBlcmltZW50UnVuIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcIm9yaWdpblwiOiBcIkV4cGVyaW1lbnRSdW5cIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM5MzU1WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJjb250YWluZXIiOiAiZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcImNvbnRhaW5lclwiOiBcImRjaWQudGVzdF81NzA2OTE5MTEzNDJfMlwiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzkzNzhaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgInBhdGgiOiAic3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZyIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJwYXRoXCI6IFwic3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZ1wiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42MzkzOTdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgImV0YWciOiAiXCI5MjAzNzNhOC0wMDAwLTA4MDAtMDAwMC02MmEyMmJlMDAwMDBcIiIsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJldGFnXCI6IFwiXFxcIjkyMDM3M2E4LTAwMDAtMDgwMC0wMDAwLTYyYTIyYmUwMDAwMFxcXCJcIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM5NDEzWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJjcmVhdGVkVGltZSI6ICIyMDIyLTA2LTA5VDE3OjIwOjMyLjU3OTk3MjMrMDA6MDAiLCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICAgIFwiY3JlYXRlZFRpbWVcIjogXCIyMDIyLTA2LTA5VDE3OjIwOjMyLjU3OTk3MjMrMDA6MDBcIiwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM5NDM0WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgICAgICJkYXRhUGF0aCI6IG51bGwsIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJkYXRhUGF0aFwiOiBudWxsLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42Mzk0NDlaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgInRhZ3MiOiB7fSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICAgIFwidGFnc1wiOiB7fSIKMjAyMi0wNi0wOVQxNzoyMDozMi42Mzk0NjNaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgIH0gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgfSIKMjAyMi0wNi0wOVQxNzoyMDozMi42Mzk0ODdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICB9LCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgfSwiCjIwMjItMDYtMDlUMTc6MjA6MzIuNjM5NTAwWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6ICAgImFydGlmYWN0Q29udGVudEluZm9ybWF0aW9uIjogeyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgXCJhcnRpZmFjdENvbnRlbnRJbmZvcm1hdGlvblwiOiB7IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTUxOVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgInN5c3RlbV9sb2dzL2xpZmVjeWNsZXIvbGlmZWN5Y2xlci5sb2ciOiB7IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgIFwic3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZ1wiOiB7IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTUzOVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAiY29udGVudFVyaSI6ICJodHRwczovL3NhY2Z4dTNldXptYWwzby5ibG9iLmNvcmUud2luZG93cy5uZXQvYXp1cmVtbC9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMi9zeXN0ZW1fbG9ncy9saWZlY3ljbGVyL2xpZmVjeWNsZXIubG9nP3N2PTIwMTktMDctMDcmc3I9YiZzaWc9T3hvSkNjTCUyRk1aNGVPTlZHbGlKUW82dE1iVENPWGsycEZoa1pFR0VGc2N3JTNEJnNrb2lkPTM4MWI2MDdjLTdhNDYtNDFhNy04Y2VmLWE2NTExM2UwOTIzZiZza3RpZD03MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcmc2t0PTIwMjItMDYtMDlUMTclM0EwOCUzQTU5WiZza2U9MjAyMi0wNi0xMVQwMSUzQTE4JTNBNTlaJnNrcz1iJnNrdj0yMDE5LTA3LTA3JnN0PTIwMjItMDYtMDlUMTclM0ExMCUzQTMyWiZzZT0yMDIyLTA2LTEwVDE3JTNBMjAlM0EzMlomc3A9cmN3IiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcImNvbnRlbnRVcmlcIjogXCJodHRwczovL3NhY2Z4dTNldXptYWwzby5ibG9iLmNvcmUud2luZG93cy5uZXQvYXp1cmVtbC9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMi9zeXN0ZW1fbG9ncy9saWZlY3ljbGVyL2xpZmVjeWNsZXIubG9nP3N2PTIwMTktMDctMDcmc3I9YiZzaWc9T3hvSkNjTCUyRk1aNGVPTlZHbGlKUW82dE1iVENPWGsycEZoa1pFR0VGc2N3JTNEJnNrb2lkPTM4MWI2MDdjLTdhNDYtNDFhNy04Y2VmLWE2NTExM2UwOTIzZiZza3RpZD03MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcmc2t0PTIwMjItMDYtMDlUMTclM0EwOCUzQTU5WiZza2U9MjAyMi0wNi0xMVQwMSUzQTE4JTNBNTlaJnNrcz1iJnNrdj0yMDE5LTA3LTA3JnN0PTIwMjItMDYtMDlUMTclM0ExMCUzQTMyWiZzZT0yMDIyLTA2LTEwVDE3JTNBMjAlM0EzMlomc3A9cmN3XCIsIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTU3MlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAib3JpZ2luIjogIkV4cGVyaW1lbnRSdW4iLCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICAgIFwib3JpZ2luXCI6IFwiRXhwZXJpbWVudFJ1blwiLCIKMjAyMi0wNi0wOVQxNzoyMDozMi42Mzk1OTBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAgICAgImNvbnRhaW5lciI6ICJkY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIiLCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICAgIFwiY29udGFpbmVyXCI6IFwiZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yXCIsIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTYwNVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAicGF0aCI6ICJzeXN0ZW1fbG9ncy9saWZlY3ljbGVyL2xpZmVjeWNsZXIubG9nIiwgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgICAgICBcInBhdGhcIjogXCJzeXN0ZW1fbG9ncy9saWZlY3ljbGVyL2xpZmVjeWNsZXIubG9nXCIsIgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTYyMlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgICAidGFncyI6IHt9IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICAgICAgXCJ0YWdzXCI6IHt9IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTYzNlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgICAgfSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IiAgICB9IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTY0OFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAgIH0sIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iICB9LCIKMjAyMi0wNi0wOVQxNzoyMDozMi42Mzk2NjFaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogICAiZXJyb3JzIjoge30gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIgIFwiZXJyb3JzXCI6IHt9IgoyMDIyLTA2LTA5VDE3OjIwOjMyLjYzOTY3N1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiB9IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0ifSIKMjAyMi0wNi0wOVQxNzoyMDozMi43MzA1MjhaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBTdGFydCB0byBzdHJlYW0gc3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nIHRvIEJsb2NrQmxvYiAgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjMyIFN0YXJ0IHRvIHN0cmVhbSBzeXN0ZW1fbG9ncy9ob3N0dG9vbHNfY2FwYWJpbGl0eS9ob3N0dG9vbHMtY2FwYWJpbGl0eS5sb2cgdG8gQmxvY2tCbG9iICIKMjAyMi0wNi0wOVQxNzoyMDozMi43NDg2MzhaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMDozMiBTdGFydCB0byBzdHJlYW0gc3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZyB0byBCbG9ja0Jsb2IgIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMDozMiBTdGFydCB0byBzdHJlYW0gc3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9saWZlY3ljbGVyLmxvZyB0byBCbG9ja0Jsb2IgIgoyMDIyLTA2LTA5VDE3OjIwOjM3LjMyNTU4MVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIwOjM3IE5vdCBleHBvcnRpbmcgdG8gUnVuSGlzdG9yeSBhcyB0aGUgZXhwb3J0ZXIgaXMgZWl0aGVyIHN0b3BwZWQgb3IgdGhlcmUgaXMgbm8gZGF0YS4gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIwOjM3IE5vdCBleHBvcnRpbmcgdG8gUnVuSGlzdG9yeSBhcyB0aGUgZXhwb3J0ZXIgaXMgZWl0aGVyIHN0b3BwZWQgb3IgdGhlcmUgaXMgbm8gZGF0YS4iCjIwMjItMDYtMDlUMTc6MjA6MzcuMzI1NjM1WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IFN0b3BwZWQ6IGZhbHNlIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iU3RvcHBlZDogZmFsc2UiCjIwMjItMDYtMDlUMTc6MjA6MzcuMzI1NjQ4WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IE9yaWdpbmFsRGF0YTogOCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9Ik9yaWdpbmFsRGF0YTogOCIKMjAyMi0wNi0wOVQxNzoyMDozNy4zMjU2NjhaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogRmlsdGVyZWREYXRhOiAwLiBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IkZpbHRlcmVkRGF0YTogMC4iCjIwMjItMDYtMDlUMTc6MjA6NTYuNTAwMzQ0WiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eS5zdGFydDogZ3JwY191dGlsczo6c2VydmVyOiBHb3QgZ3JwYyByZXF1ZXN0IG5hbWU9InN0YXJ0IiByZW1vdGVfYWRkcj1Ob25lCjIwMjItMDYtMDlUMTc6MjA6NTYuNTAwNDEzWiAgSU5GTyBob3N0dG9vbHMtY2FwYWJpbGl0eS5zdGFydDogaG9zdHRvb2xzX2NhcGFiaWxpdHk6OmNhcGFiaWxpdHlfc2VydmljZTogY2xvc2UgdGltZS5idXN5PTc2LjTCtXMgdGltZS5pZGxlPTE2LjTCtXMKMjAyMi0wNi0wOVQxNzoyMTowMC42NTg2OTRaICBJTkZPIGhvc3R0b29scy1jYXBhYmlsaXR5LmVuZDogZ3JwY191dGlsczo6c2VydmVyOiBHb3QgZ3JwYyByZXF1ZXN0IG5hbWU9ImVuZCIgcmVtb3RlX2FkZHI9Tm9uZQoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODc1N1ogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHkuZW5kOmhvc3R0b29scy1jYXBhYmlsaXR5LmZsdXNoX2FuZF9zaHV0ZG93bl9vdXRwdXRfbWFuYWdlcntmbHVzaF90aW1lb3V0X292ZXJyaWRlX3M9Tm9uZX06IGhvc3R0b29sc19jYXBhYmlsaXR5OjpjYXBhYmlsaXR5X3NlcnZpY2U6IFNpZ25hbGluZyBvdXRwdXRfbWFuYWdlciB0byBmbHVzaCBsb2dzLCB0aGVuIHRlcm1pbmF0aW5nIGFmdGVyOiBOb25lIGZsdXNoX3RpbWVvdXQ9Tm9uZQoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODc3NlogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHkuZW5kOmhvc3R0b29scy1jYXBhYmlsaXR5LmZsdXNoX2FuZF9zaHV0ZG93bl9vdXRwdXRfbWFuYWdlcntmbHVzaF90aW1lb3V0X292ZXJyaWRlX3M9Tm9uZX06IGhvc3R0b29sc19jYXBhYmlsaXR5OjpjYXBhYmlsaXR5X3NlcnZpY2U6IHNlbmQgU0lHVEVSTSB0byBvdXRwdXRNYW5hZ2VyIGNoaWxkPUNoaWxkIHsgY2hpbGQ6IENoaWxkKENoaWxkRHJvcEd1YXJkIHsgaW5uZXI6IENoaWxkIHsgcGlkOiAxOCB9LCBraWxsX29uX2Ryb3A6IGZhbHNlIH0pLCBzdGRpbjogTm9uZSwgc3Rkb3V0OiBOb25lLCBzdGRlcnI6IE5vbmUgfQoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODgwNVogIElORk8gaG9zdHRvb2xzLWNhcGFiaWxpdHkuZW5kOmhvc3R0b29scy1jYXBhYmlsaXR5LmZsdXNoX2FuZF9zaHV0ZG93bl9vdXRwdXRfbWFuYWdlcntmbHVzaF90aW1lb3V0X292ZXJyaWRlX3M9Tm9uZX06IGhvc3R0b29sc19jYXBhYmlsaXR5OjpjYXBhYmlsaXR5X3NlcnZpY2U6IHdhaXRpbmcgZm9yIG91dHB1dE1hbmFnZXIgdGVybWluYXRpb24gY2hpbGQ9Q2hpbGQgeyBjaGlsZDogQ2hpbGQoQ2hpbGREcm9wR3VhcmQgeyBpbm5lcjogQ2hpbGQgeyBwaWQ6IDE4IH0sIGtpbGxfb25fZHJvcDogZmFsc2UgfSksIHN0ZGluOiBOb25lLCBzdGRvdXQ6IE5vbmUsIHN0ZGVycjogTm9uZSB9IHRpbWVvdXRfZHVyYXRpb249Tm9uZQoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2MTgzOFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFJlY2VpdmVkIHRlcm1pbmF0aW9uIHNpZ25hbCB0byBzaHV0IGRvd24gb3V0cHV0IG1hbmFnZXIuIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBSZWNlaXZlZCB0ZXJtaW5hdGlvbiBzaWduYWwgdG8gc2h1dCBkb3duIG91dHB1dCBtYW5hZ2VyLiIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjE4NzhaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2NzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nL2NzLWNhcGFiaWxpdHkubG9nIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2NzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nL2NzLWNhcGFiaWxpdHkubG9nIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2MTkyNFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZy9kYXRhLWNhcGFiaWxpdHkubG9nIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2RhdGEtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2cvZGF0YS1jYXBhYmlsaXR5LmxvZyIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjE5NDdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2RhdGEtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2cvcnNsZXgubG9nLjIwMjItMDYtMDktMTcgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvZGF0YS1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZy9yc2xleC5sb2cuMjAyMi0wNi0wOS0xNyIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjE5NjdaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBBZnRlciB0ZXJtaW5hdGlvbiBzaWduYWwsIHdlIGZpbmQgdGhlIGxpc3Qgb2YgbmV3IGZpbGUgOiBkYXRhLWNhcGFiaWxpdHkubG9nLHJzbGV4LmxvZy4yMDIyLTA2LTA5LTE3IGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBBZnRlciB0ZXJtaW5hdGlvbiBzaWduYWwsIHdlIGZpbmQgdGhlIGxpc3Qgb2YgbmV3IGZpbGUgOiBkYXRhLWNhcGFiaWxpdHkubG9nLHJzbGV4LmxvZy4yMDIyLTA2LTA5LTE3IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2MTk4NFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFJlcXVlc3RpbmcgUE9TVDogW3tzeXN0ZW1fbG9ncy9jc19jYXBhYmlsaXR5L2NzLWNhcGFiaWxpdHkubG9nfV0gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFJlcXVlc3RpbmcgUE9TVDogW3tzeXN0ZW1fbG9ncy9jc19jYXBhYmlsaXR5L2NzLWNhcGFiaWxpdHkubG9nfV0iCjIwMjItMDYtMDlUMTc6MjE6MDAuNjYyMDAwWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwczovL3dlc3R1czIuYXBpLmF6dXJlbWwubXMvYXJ0aWZhY3QvdjIuMC9zdWJzY3JpcHRpb25zL2IxNzI1M2ZhLWYzMjctNDJkNi05Njg2LWYzZTU1M2UyNDc2My9yZXNvdXJjZUdyb3Vwcy9yZy10ZXN0cmcvcHJvdmlkZXJzL01pY3Jvc29mdC5NYWNoaW5lTGVhcm5pbmdTZXJ2aWNlcy93b3Jrc3BhY2VzL3Nka192bmV4dF9jbGkvYXJ0aWZhY3RzL2JhdGNoL21ldGFkYXRhL0V4cGVyaW1lbnRSdW4vZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBBdHRlbXB0IDEgb2YgaHR0cCBjYWxsIHRvIGh0dHBzOi8vd2VzdHVzMi5hcGkuYXp1cmVtbC5tcy9hcnRpZmFjdC92Mi4wL3N1YnNjcmlwdGlvbnMvYjE3MjUzZmEtZjMyNy00MmQ2LTk2ODYtZjNlNTUzZTI0NzYzL3Jlc291cmNlR3JvdXBzL3JnLXRlc3RyZy9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hY2hpbmVMZWFybmluZ1NlcnZpY2VzL3dvcmtzcGFjZXMvc2RrX3ZuZXh0X2NsaS9hcnRpZmFjdHMvYmF0Y2gvbWV0YWRhdGEvRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjYyMDI2WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgV2UgbmVlZCB0byByZWZyZXNoIHRoZSBkaXIgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2RhdGEtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2cgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9kYXRhLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIG9uZSBtb3JlIHRpbWUgd2l0aCAzIHMhIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2MjA0NlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFJlcXVlc3RpbmcgUE9TVDogW3tzeXN0ZW1fbG9ncy9kYXRhX2NhcGFiaWxpdHkvZGF0YS1jYXBhYmlsaXR5LmxvZ30ge3N5c3RlbV9sb2dzL2RhdGFfY2FwYWJpbGl0eS9yc2xleC5sb2cuMjAyMi0wNi0wOS0xN31dIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBSZXF1ZXN0aW5nIFBPU1Q6IFt7c3lzdGVtX2xvZ3MvZGF0YV9jYXBhYmlsaXR5L2RhdGEtY2FwYWJpbGl0eS5sb2d9IHtzeXN0ZW1fbG9ncy9kYXRhX2NhcGFiaWxpdHkvcnNsZXgubG9nLjIwMjItMDYtMDktMTd9XSIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjIwNjRaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBBdHRlbXB0IDEgb2YgaHR0cCBjYWxsIHRvIGh0dHBzOi8vd2VzdHVzMi5hcGkuYXp1cmVtbC5tcy9hcnRpZmFjdC92Mi4wL3N1YnNjcmlwdGlvbnMvYjE3MjUzZmEtZjMyNy00MmQ2LTk2ODYtZjNlNTUzZTI0NzYzL3Jlc291cmNlR3JvdXBzL3JnLXRlc3RyZy9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hY2hpbmVMZWFybmluZ1NlcnZpY2VzL3dvcmtzcGFjZXMvc2RrX3ZuZXh0X2NsaS9hcnRpZmFjdHMvYmF0Y2gvbWV0YWRhdGEvRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIEF0dGVtcHQgMSBvZiBodHRwIGNhbGwgdG8gaHR0cHM6Ly93ZXN0dXMyLmFwaS5henVyZW1sLm1zL2FydGlmYWN0L3YyLjAvc3Vic2NyaXB0aW9ucy9iMTcyNTNmYS1mMzI3LTQyZDYtOTY4Ni1mM2U1NTNlMjQ3NjMvcmVzb3VyY2VHcm91cHMvcmctdGVzdHJnL3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFjaGluZUxlYXJuaW5nU2VydmljZXMvd29ya3NwYWNlcy9zZGtfdm5leHRfY2xpL2FydGlmYWN0cy9iYXRjaC9tZXRhZGF0YS9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMiIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjI3OTNaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBXZSBuZWVkIHRvIHJlZnJlc2ggdGhlIGRpciAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIG9uZSBtb3JlIHRpbWUgd2l0aCAzIHMhIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBXZSBuZWVkIHRvIHJlZnJlc2ggdGhlIGRpciAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIG9uZSBtb3JlIHRpbWUgd2l0aCAzIHMhIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2Mjg0MFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIEV4aXRpbmcgZmlsZXdhdGNoZXIgZm9yIHN0cmVhbWFibGUgZmlsZSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvbGlmZWN5Y2xlci93ZC8uYXp1cmVtbF9jcl9sb2cvbGlmZWN5Y2xlci5sb2cuIE5vIGNoYW5nZXMgYWZ0ZXIgdGVybWluYXRpb24gc2lnbmFsLiBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgRXhpdGluZyBmaWxld2F0Y2hlciBmb3Igc3RyZWFtYWJsZSBmaWxlIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9saWZlY3ljbGVyL3dkLy5henVyZW1sX2NyX2xvZy9saWZlY3ljbGVyLmxvZy4gTm8gY2hhbmdlcyBhZnRlciB0ZXJtaW5hdGlvbiBzaWduYWwuIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2MjkwNVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFN0cmVhbWVyIHRlcm1pbmF0ZWQgZm9yIHN5c3RlbV9sb2dzL2xpZmVjeWNsZXIvbGlmZWN5Y2xlci5sb2cgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFN0cmVhbWVyIHRlcm1pbmF0ZWQgZm9yIHN5c3RlbV9sb2dzL2xpZmVjeWNsZXIvbGlmZWN5Y2xlci5sb2ciCjIwMjItMDYtMDlUMTc6MjE6MDAuNjYzMjk5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgRXhpdGluZyBmaWxld2F0Y2hlciBmb3Igc3RyZWFtYWJsZSBmaWxlIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9ob3N0dG9vbHMtY2FwYWJpbGl0eS93ZC8uYXp1cmVtbF9jcl9sb2cvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nLiBObyBjaGFuZ2VzIGFmdGVyIHRlcm1pbmF0aW9uIHNpZ25hbC4gY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIEV4aXRpbmcgZmlsZXdhdGNoZXIgZm9yIHN0cmVhbWFibGUgZmlsZSAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvaG9zdHRvb2xzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nL2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZy4gTm8gY2hhbmdlcyBhZnRlciB0ZXJtaW5hdGlvbiBzaWduYWwuIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2MzM0MVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFN0cmVhbWVyIHRlcm1pbmF0ZWQgZm9yIHN5c3RlbV9sb2dzL2hvc3R0b29sc19jYXBhYmlsaXR5L2hvc3R0b29scy1jYXBhYmlsaXR5LmxvZyBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgU3RyZWFtZXIgdGVybWluYXRlZCBmb3Igc3lzdGVtX2xvZ3MvaG9zdHRvb2xzX2NhcGFiaWxpdHkvaG9zdHRvb2xzLWNhcGFiaWxpdHkubG9nIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2Mzc0NVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvbGlmZWN5Y2xlci93ZC8uYXp1cmVtbF9jcl9sb2cvZXhlY3V0aW9uLXdyYXBwZXIubG9nIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2xpZmVjeWNsZXIvd2QvLmF6dXJlbWxfY3JfbG9nL2V4ZWN1dGlvbi13cmFwcGVyLmxvZyIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjM3OTBaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBBZnRlciB0ZXJtaW5hdGlvbiBzaWduYWwsIHdlIGZpbmQgdGhlIGxpc3Qgb2YgbmV3IGZpbGUgOiBleGVjdXRpb24td3JhcHBlci5sb2cgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIEFmdGVyIHRlcm1pbmF0aW9uIHNpZ25hbCwgd2UgZmluZCB0aGUgbGlzdCBvZiBuZXcgZmlsZSA6IGV4ZWN1dGlvbi13cmFwcGVyLmxvZyIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjM4OThaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBXZSBuZWVkIHRvIHJlZnJlc2ggdGhlIGRpciAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9jYXAvbGlmZWN5Y2xlci93ZC8uYXp1cmVtbF9jcl9sb2cgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9saWZlY3ljbGVyL3dkLy5henVyZW1sX2NyX2xvZyBvbmUgbW9yZSB0aW1lIHdpdGggMyBzISIKMjAyMi0wNi0wOVQxNzoyMTowMC42NjM5NDJaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBSZXF1ZXN0aW5nIFBPU1Q6IFt7c3lzdGVtX2xvZ3MvbGlmZWN5Y2xlci9leGVjdXRpb24td3JhcHBlci5sb2d9XSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgUmVxdWVzdGluZyBQT1NUOiBbe3N5c3RlbV9sb2dzL2xpZmVjeWNsZXIvZXhlY3V0aW9uLXdyYXBwZXIubG9nfV0iCjIwMjItMDYtMDlUMTc6MjE6MDAuNjY0MDE5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwczovL3dlc3R1czIuYXBpLmF6dXJlbWwubXMvYXJ0aWZhY3QvdjIuMC9zdWJzY3JpcHRpb25zL2IxNzI1M2ZhLWYzMjctNDJkNi05Njg2LWYzZTU1M2UyNDc2My9yZXNvdXJjZUdyb3Vwcy9yZy10ZXN0cmcvcHJvdmlkZXJzL01pY3Jvc29mdC5NYWNoaW5lTGVhcm5pbmdTZXJ2aWNlcy93b3Jrc3BhY2VzL3Nka192bmV4dF9jbGkvYXJ0aWZhY3RzL2JhdGNoL21ldGFkYXRhL0V4cGVyaW1lbnRSdW4vZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBBdHRlbXB0IDEgb2YgaHR0cCBjYWxsIHRvIGh0dHBzOi8vd2VzdHVzMi5hcGkuYXp1cmVtbC5tcy9hcnRpZmFjdC92Mi4wL3N1YnNjcmlwdGlvbnMvYjE3MjUzZmEtZjMyNy00MmQ2LTk2ODYtZjNlNTUzZTI0NzYzL3Jlc291cmNlR3JvdXBzL3JnLXRlc3RyZy9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hY2hpbmVMZWFybmluZ1NlcnZpY2VzL3dvcmtzcGFjZXMvc2RrX3ZuZXh0X2NsaS9hcnRpZmFjdHMvYmF0Y2gvbWV0YWRhdGEvRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjY1MTk3WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgQWZ0ZXIgdGVybWluYXRpb24gc2lnbmFsLCB3ZSBmaW5kIHRoZSBsaXN0IG9mIG5ldyBmaWxlIDogY3MtY2FwYWJpbGl0eS5sb2cgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIEFmdGVyIHRlcm1pbmF0aW9uIHNpZ25hbCwgd2UgZmluZCB0aGUgbGlzdCBvZiBuZXcgZmlsZSA6IGNzLWNhcGFiaWxpdHkubG9nIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY2NTMwNFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2NhcC9jcy1jYXBhYmlsaXR5L3dkLy5henVyZW1sX2NyX2xvZyBvbmUgbW9yZSB0aW1lIHdpdGggMyBzISBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgV2UgbmVlZCB0byByZWZyZXNoIHRoZSBkaXIgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvY2FwL2NzLWNhcGFiaWxpdHkvd2QvLmF6dXJlbWxfY3JfbG9nIG9uZSBtb3JlIHRpbWUgd2l0aCAzIHMhIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY3MDMwMVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9sb2dzIG9uZSBtb3JlIHRpbWUgd2l0aCAzIHMhIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBXZSBuZWVkIHRvIHJlZnJlc2ggdGhlIGRpciAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2QvbG9ncyBvbmUgbW9yZSB0aW1lIHdpdGggMyBzISIKMjAyMi0wNi0wOVQxNzoyMTowMC42NzAzNjFaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBOZXcgZmlsZSBkZXRlY3RlZDogL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL3VzZXJfbG9ncy9zdGRfbG9nLnR4dCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgTmV3IGZpbGUgZGV0ZWN0ZWQ6IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC91c2VyX2xvZ3Mvc3RkX2xvZy50eHQiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjcwMzgzWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgQWZ0ZXIgdGVybWluYXRpb24gc2lnbmFsLCB3ZSBmaW5kIHRoZSBsaXN0IG9mIG5ldyBmaWxlIDogc3RkX2xvZy50eHQgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIEFmdGVyIHRlcm1pbmF0aW9uIHNpZ25hbCwgd2UgZmluZCB0aGUgbGlzdCBvZiBuZXcgZmlsZSA6IHN0ZF9sb2cudHh0IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY3MDQwMVogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC91c2VyX2xvZ3Mgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC91c2VyX2xvZ3Mgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjcwNDIwWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgUmVxdWVzdGluZyBQT1NUOiBbe3VzZXJfbG9ncy9zdGRfbG9nLnR4dH1dIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBSZXF1ZXN0aW5nIFBPU1Q6IFt7dXNlcl9sb2dzL3N0ZF9sb2cudHh0fV0iCjIwMjItMDYtMDlUMTc6MjE6MDAuNjcwNDM2WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwczovL3dlc3R1czIuYXBpLmF6dXJlbWwubXMvYXJ0aWZhY3QvdjIuMC9zdWJzY3JpcHRpb25zL2IxNzI1M2ZhLWYzMjctNDJkNi05Njg2LWYzZTU1M2UyNDc2My9yZXNvdXJjZUdyb3Vwcy9yZy10ZXN0cmcvcHJvdmlkZXJzL01pY3Jvc29mdC5NYWNoaW5lTGVhcm5pbmdTZXJ2aWNlcy93b3Jrc3BhY2VzL3Nka192bmV4dF9jbGkvYXJ0aWZhY3RzL2JhdGNoL21ldGFkYXRhL0V4cGVyaW1lbnRSdW4vZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIGNvbW1hbmQ9Ii91c3IvbG9jYWwvYmluL2hvc3R0b29scyIgbGluZT0iMjAyMi8wNi8wOSAxNzoyMTowMCBBdHRlbXB0IDEgb2YgaHR0cCBjYWxsIHRvIGh0dHBzOi8vd2VzdHVzMi5hcGkuYXp1cmVtbC5tcy9hcnRpZmFjdC92Mi4wL3N1YnNjcmlwdGlvbnMvYjE3MjUzZmEtZjMyNy00MmQ2LTk2ODYtZjNlNTUzZTI0NzYzL3Jlc291cmNlR3JvdXBzL3JnLXRlc3RyZy9wcm92aWRlcnMvTWljcm9zb2Z0Lk1hY2hpbmVMZWFybmluZ1NlcnZpY2VzL3dvcmtzcGFjZXMvc2RrX3ZuZXh0X2NsaS9hcnRpZmFjdHMvYmF0Y2gvbWV0YWRhdGEvRXhwZXJpbWVudFJ1bi9kY2lkLnRlc3RfNTcwNjkxOTExMzQyXzIiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjcwNDYyWiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgTmV3IGZpbGUgZGV0ZWN0ZWQ6IC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9vdXRwdXRzL291dHB1dC50eHQgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIE5ldyBmaWxlIGRldGVjdGVkOiAvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS9leGUvd2Qvb3V0cHV0cy9vdXRwdXQudHh0IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY3MDQ4MFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIEFmdGVyIHRlcm1pbmF0aW9uIHNpZ25hbCwgd2UgZmluZCB0aGUgbGlzdCBvZiBuZXcgZmlsZSA6IG91dHB1dC50eHQgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIEFmdGVyIHRlcm1pbmF0aW9uIHNpZ25hbCwgd2UgZmluZCB0aGUgbGlzdCBvZiBuZXcgZmlsZSA6IG91dHB1dC50eHQiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjcwNDk1WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgV2UgbmVlZCB0byByZWZyZXNoIHRoZSBkaXIgL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvZXhlL3dkL291dHB1dHMgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9vdXRwdXRzIG9uZSBtb3JlIHRpbWUgd2l0aCAzIHMhIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY3MDUxM1ogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFJlcXVlc3RpbmcgUE9TVDogW3tvdXRwdXRzL291dHB1dC50eHR9XSBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgUmVxdWVzdGluZyBQT1NUOiBbe291dHB1dHMvb3V0cHV0LnR4dH1dIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY3MDUyNlogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIEF0dGVtcHQgMSBvZiBodHRwIGNhbGwgdG8gaHR0cHM6Ly93ZXN0dXMyLmFwaS5henVyZW1sLm1zL2FydGlmYWN0L3YyLjAvc3Vic2NyaXB0aW9ucy9iMTcyNTNmYS1mMzI3LTQyZDYtOTY4Ni1mM2U1NTNlMjQ3NjMvcmVzb3VyY2VHcm91cHMvcmctdGVzdHJnL3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFjaGluZUxlYXJuaW5nU2VydmljZXMvd29ya3NwYWNlcy9zZGtfdm5leHRfY2xpL2FydGlmYWN0cy9iYXRjaC9tZXRhZGF0YS9FeHBlcmltZW50UnVuL2RjaWQudGVzdF81NzA2OTE5MTEzNDJfMiBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgQXR0ZW1wdCAxIG9mIGh0dHAgY2FsbCB0byBodHRwczovL3dlc3R1czIuYXBpLmF6dXJlbWwubXMvYXJ0aWZhY3QvdjIuMC9zdWJzY3JpcHRpb25zL2IxNzI1M2ZhLWYzMjctNDJkNi05Njg2LWYzZTU1M2UyNDc2My9yZXNvdXJjZUdyb3Vwcy9yZy10ZXN0cmcvcHJvdmlkZXJzL01pY3Jvc29mdC5NYWNoaW5lTGVhcm5pbmdTZXJ2aWNlcy93b3Jrc3BhY2VzL3Nka192bmV4dF9jbGkvYXJ0aWZhY3RzL2JhdGNoL21ldGFkYXRhL0V4cGVyaW1lbnRSdW4vZGNpZC50ZXN0XzU3MDY5MTkxMTM0Ml8yIgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY3MjczNFogIElORk8gaG9zdHRvb2xzX2NhcGFiaWxpdHk6Omhvc3R0b29sczogc3RkZXJyOiAyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9henVyZW1sLWxvZ3Mgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEgY29tbWFuZD0iL3Vzci9sb2NhbC9iaW4vaG9zdHRvb2xzIiBsaW5lPSIyMDIyLzA2LzA5IDE3OjIxOjAwIFdlIG5lZWQgdG8gcmVmcmVzaCB0aGUgZGlyIC9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhL2V4ZS93ZC9henVyZW1sLWxvZ3Mgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEiCjIwMjItMDYtMDlUMTc6MjE6MDAuNjc0Mjc5WiAgSU5GTyBob3N0dG9vbHNfY2FwYWJpbGl0eTo6aG9zdHRvb2xzOiBzdGRlcnI6IDIwMjIvMDYvMDkgMTc6MjE6MDAgZmlsZSBMU19yb290L2pvYnMvd2QvLnRtcCBkb2VzIG5vdCBleGlzdCBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgZmlsZSBMU19yb290L2pvYnMvd2QvLnRtcCBkb2VzIG5vdCBleGlzdCIKMjAyMi0wNi0wOVQxNzoyMTowMC42NzQzMTVaICBJTkZPIGhvc3R0b29sc19jYXBhYmlsaXR5Ojpob3N0dG9vbHM6IHN0ZGVycjogMjAyMi8wNi8wOSAxNzoyMTowMCBXZSBuZWVkIHRvIHJlZnJlc2ggdGhlIGRpciBMU19yb290L2pvYnMvd2QvLnRtcCBvbmUgbW9yZSB0aW1lIHdpdGggMyBzISBjb21tYW5kPSIvdXNyL2xvY2FsL2Jpbi9ob3N0dG9vbHMiIGxpbmU9IjIwMjIvMDYvMDkgMTc6MjE6MDAgV2UgbmVlZCB0byByZWZyZXNoIHRoZSBkaXIgTFNfcm9vdC9qb2JzL3dkLy50bXAgb25lIG1vcmUgdGltZSB3aXRoIDMgcyEiCg=="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/execution-wrapper.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "14036",
        "Content-Range": "bytes 0-14035/14036",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "ETag": "\u00220x8DA4A3C6CD31D90\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:01 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": ""
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/system_logs/lifecycler/lifecycler.log",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "28057",
        "Content-Range": "bytes 0-28056/28057",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "ETag": "\u00220x8DA4A3C6C997856\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:20:32 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "\u002BICRvdXRwdXQxL291dHB1dC50eHQ7XG5weXRob24gLWMgJ2ltcG9ydCByYW5kb207IGltcG9ydCBtbGZsb3c7IG1sZmxvdy5sb2dfbWV0cmljKFwiYWNjdXJhY3lcIiwgcmFuZG9tLnJhbmRvbSgpKSdcbiIgfSwgc3RkZXJyOiBOb25lLCBzdGRvdXQ6IFNvbWUoInVzZXJfbG9ncy9zdGRfbG9nLnR4dCIpIH0pIHBhdGhfbWFwcGluZ3NfZj17fX06IGdycGNfdXRpbHM6OnNwYW46IGZhaWxlZCB0byBpbmplY3Qgc3BhbiBjb250ZXh0IHRvIGdycGMgcmVxdWVzdAoyMDIyLTA2LTA5VDE3OjIwOjU3Ljk3OTU5MlogIElORk8gcnVuX2xpZmVjeWNsZXI6cnVuX3NlcnZpY2VfYW5kX3N0ZXBfdGhyb3VnaF9saWZlY3ljbGU6c3RlcF90aHJvdWdoX2xpZmVjeWNsZTpleGVjdXRlOmV4ZWN1dG9yX2NsaWVudDo6ZXhlY3V0ZV9jb21tYW5kc3tsaWZlY3ljbGVfYWRkcmVzcz0iL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIn06ZXhlY3V0b3JfY2xpZW50OjpzdGFydF9leGVjdXRpb257bGlmZWN5Y2xlcl9hZGRyZXNzPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAiIGNvbW1hbmRzX2Y9Q29tbWFuZChDb21tYW5kIHsgZXhlY3V0YWJsZTogU2hlbGwgeyBwYXRoOiBOb25lLCBjb21tYW5kOiAiZWNobyBcIkhlbGxvIERlZmF1bHQgV29ybGRcIiA\u002BIC4vb3V0cHV0cy9vdXRwdXQudHh0O1xuZWNobyBcIkhlbGxvIFdvcmxkXCIgPiAkb3V0cHV0MS9vdXRwdXQudHh0O1xucHl0aG9uIC1jICdpbXBvcnQgcmFuZG9tOyBpbXBvcnQgbWxmbG93OyBtbGZsb3cubG9nX21ldHJpYyhcImFjY3VyYWN5XCIsIHJhbmRvbS5yYW5kb20oKSknXG4iIH0sIHN0ZGVycjogTm9uZSwgc3Rkb3V0OiBTb21lKCJ1c2VyX2xvZ3Mvc3RkX2xvZy50eHQiKSB9KSBwYXRoX21hcHBpbmdzX2Y9e319OiBsaWZlY3ljbGVyOjpleGVjdXRvcl9jbGllbnQ6IFN0YXJ0aW5nIGV4ZWN1dGlvbiBleGVjdXRpb25faWQ9OWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3IGxpZmVjeWNsZXJfYWRkcmVzcz0vbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODY4OTJaICBJTkZPIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZXhlY3V0ZTpleGVjdXRvcl9jbGllbnQ6OmV4ZWN1dGVfY29tbWFuZHN7bGlmZWN5Y2xlX2FkZHJlc3M9Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2xpZmVjeWNsZXI6MCJ9OmV4ZWN1dG9yX2NsaWVudDo6c3RhcnRfZXhlY3V0aW9ue2xpZmVjeWNsZXJfYWRkcmVzcz0iL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIiBjb21tYW5kc19mPUNvbW1hbmQoQ29tbWFuZCB7IGV4ZWN1dGFibGU6IFNoZWxsIHsgcGF0aDogTm9uZSwgY29tbWFuZDogImVjaG8gXCJIZWxsbyBEZWZhdWx0IFdvcmxkXCIgPiAuL291dHB1dHMvb3V0cHV0LnR4dDtcbmVjaG8gXCJIZWxsbyBXb3JsZFwiID4gJG91dHB1dDEvb3V0cHV0LnR4dDtcbnB5dGhvbiAtYyAnaW1wb3J0IHJhbmRvbTsgaW1wb3J0IG1sZmxvdzsgbWxmbG93LmxvZ19tZXRyaWMoXCJhY2N1cmFjeVwiLCByYW5kb20ucmFuZG9tKCkpJ1xuIiB9LCBzdGRlcnI6IE5vbmUsIHN0ZG91dDogU29tZSgidXNlcl9sb2dzL3N0ZF9sb2cudHh0IikgfSkgcGF0aF9tYXBwaW5nc19mPXt9fTogbGlmZWN5Y2xlcjo6ZXhlY3V0b3JfY2xpZW50OiBjbG9zZSB0aW1lLmJ1c3k9MTU4wrVzIHRpbWUuaWRsZT03LjE5bXMKMjAyMi0wNi0wOVQxNzoyMDo1Ny45ODcyMjNaICBJTkZPIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZXhlY3V0ZTpleGVjdXRvcl9jbGllbnQ6OmV4ZWN1dGVfY29tbWFuZHN7bGlmZWN5Y2xlX2FkZHJlc3M9Ii9tbnQvYXp1cmVtbC9jci9qLzU1MmFjOWFiNDBjZDQyNDY4OTIzM2RiY2ZkODdiMjJhLy5ncnBjL2xpZmVjeWNsZXI6MCJ9OiBsaWZlY3ljbGVyOjpleGVjdXRvcl9jbGllbnQ6IFdhaXRpbmcgZm9yIGV4ZWN1dGlvbiBjb21wbGV0aW9uIGV4ZWN1dGlvbl9pZD0iOWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1Nzg5MFogIElORk8gRXhlY3V0aW9uQ2FsbGJhY2tTZXJ2aWNlcjo6Y29tcGxldGVfZXhlY3V0aW9uOiBncnBjX3V0aWxzOjpzZXJ2ZXI6IEdvdCBncnBjIHJlcXVlc3QgbmFtZT0iY29tcGxldGVfZXhlY3V0aW9uIiByZW1vdGVfYWRkcj1Ob25lCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU3OTY1WiAgSU5GTyBFeGVjdXRpb25DYWxsYmFja1NlcnZpY2VyOjpjb21wbGV0ZV9leGVjdXRpb246IGxpZmVjeWNsZXI6OnNlcnZpY2U6IGNsb3NlIHRpbWUuYnVzeT04MC45wrVzIHRpbWUuaWRsZT0xMy42wrVzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU3OTkxWiAgSU5GTyBydW5fbGlmZWN5Y2xlcjpydW5fc2VydmljZV9hbmRfc3RlcF90aHJvdWdoX2xpZmVjeWNsZTpzdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOmV4ZWN1dGU6ZXhlY3V0b3JfY2xpZW50OjpleGVjdXRlX2NvbW1hbmRze2xpZmVjeWNsZV9hZGRyZXNzPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAifTpleGVjdXRvcl9jbGllbnQ6OndhaXRfZm9yX2V4ZWN1dGlvbl9jb21wbGV0aW9ue2V4ZWN1dGlvbl9pZD0iOWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3In06IGxpZmVjeWNsZXI6OmV4ZWN1dG9yX2NsaWVudDogY2xvc2UgdGltZS5idXN5PTUuMTDCtXMgdGltZS5pZGxlPTIuNjdzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MDI1WiAgSU5GTyBydW5fbGlmZWN5Y2xlcjpydW5fc2VydmljZV9hbmRfc3RlcF90aHJvdWdoX2xpZmVjeWNsZTpzdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOmV4ZWN1dGU6ZXhlY3V0b3JfY2xpZW50OjpleGVjdXRlX2NvbW1hbmRze2xpZmVjeWNsZV9hZGRyZXNzPSIvbW50L2F6dXJlbWwvY3Ivai81NTJhYzlhYjQwY2Q0MjQ2ODkyMzNkYmNmZDg3YjIyYS8uZ3JwYy9saWZlY3ljbGVyOjAifTogbGlmZWN5Y2xlcjo6ZXhlY3V0b3JfY2xpZW50OiBFeGVjdXRpb24gY29tcGxldGVkIGV4ZWN1dGlvbl9pZD0iOWY5MWEzMDEtNjEzNC00MzJiLWFkZmEtMmRhNTg5M2QwYTg3IgoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODA1N1ogIElORk8gcnVuX2xpZmVjeWNsZXI6cnVuX3NlcnZpY2VfYW5kX3N0ZXBfdGhyb3VnaF9saWZlY3ljbGU6c3RlcF90aHJvdWdoX2xpZmVjeWNsZTpleGVjdXRlOmV4ZWN1dG9yX2NsaWVudDo6ZXhlY3V0ZV9jb21tYW5kc3tsaWZlY3ljbGVfYWRkcmVzcz0iL21udC9henVyZW1sL2NyL2ovNTUyYWM5YWI0MGNkNDI0Njg5MjMzZGJjZmQ4N2IyMmEvLmdycGMvbGlmZWN5Y2xlcjowIn06IGxpZmVjeWNsZXI6OmV4ZWN1dG9yX2NsaWVudDogY2xvc2UgdGltZS5idXN5PTY1M8K1cyB0aW1lLmlkbGU9Mi42OHMKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgxNDhaICBJTkZPIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZXhlY3V0ZTogbGlmZWN5Y2xlcjo6bGlmZWN5Y2xlOiBwaGFzZSBleGVjdXRpb24gY29tcGxldGVkLiByYW5rPU5vbmUgcGhhc2U9MAoyMDIyLTA2LTA5VDE3OjIxOjAwLjY1ODE5MlogIElORk8gcnVuX2xpZmVjeWNsZXI6cnVuX3NlcnZpY2VfYW5kX3N0ZXBfdGhyb3VnaF9saWZlY3ljbGU6c3RlcF90aHJvdWdoX2xpZmVjeWNsZTpleGVjdXRlOiBsaWZlY3ljbGVyOjpsaWZlY3ljbGU6IGNsb3NlIHRpbWUuYnVzeT05MjjCtXMgdGltZS5pZGxlPTIuNjhzCjIwMjItMDYtMDlUMTc6MjE6MDAuNjU4MjI5WiAgV0FSTiBydW5fbGlmZWN5Y2xlcjpydW5fc2VydmljZV9hbmRfc3RlcF90aHJvdWdoX2xpZmVjeWNsZTpzdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOmVuZF9jYXBhYmlsaXRpZXM6ZW5ke25hbWU9IkRBVEFfQ0FQQUJJTElUWSJ9OiBncnBjX3V0aWxzOjpzcGFuOiBmYWlsZWQgdG8gaW5qZWN0IHNwYW4gY29udGV4dCB0byBncnBjIHJlcXVlc3QKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgyNjVaICBXQVJOIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZW5kX2NhcGFiaWxpdGllczplbmR7bmFtZT0iQ1NfQ0FQQUJJTElUWSJ9OiBncnBjX3V0aWxzOjpzcGFuOiBmYWlsZWQgdG8gaW5qZWN0IHNwYW4gY29udGV4dCB0byBncnBjIHJlcXVlc3QKMjAyMi0wNi0wOVQxNzoyMTowMC42NTgzMDBaICBXQVJOIHJ1bl9saWZlY3ljbGVyOnJ1bl9zZXJ2aWNlX2FuZF9zdGVwX3Rocm91Z2hfbGlmZWN5Y2xlOnN0ZXBfdGhyb3VnaF9saWZlY3ljbGU6ZW5kX2NhcGFiaWxpdGllczplbmR7bmFtZT0iSE9TVFRPT0xTX0NBUEFCSUxJVFkifTogZ3JwY191dGlsczo6c3BhbjogZmFpbGVkIHRvIGluamVjdCBzcGFuIGNvbnRleHQgdG8gZ3JwYyByZXF1ZXN0Cg=="
    },
    {
      "RequestUri": "https://sacfxu3euzmal3o.blob.core.windows.net/azureml/ExperimentRun/dcid.test_570691911342_2/user_logs/std_log.txt",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.9.0 Python/3.8.6 (Windows-10-10.0.22000-SP0)",
        "x-ms-date": "Thu, 09 Jun 2022 17:24:22 GMT",
        "x-ms-range": "bytes=0-33554431",
        "x-ms-version": "2020-10-02"
      },
      "RequestBody": null,
      "StatusCode": 206,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Disposition": "",
        "Content-Length": "125",
        "Content-Range": "bytes 0-124/125",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 09 Jun 2022 17:24:20 GMT",
        "ETag": "\u00220x8DA4A3C6CB11B9E\u0022",
        "Last-Modified": "Thu, 09 Jun 2022 17:21:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 09 Jun 2022 17:21:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2020-10-02"
      },
      "ResponseBody": "VGhlIEF6dXJlTUxUb2tlbkF1dGhlbnRpY2F0aW9uIGNyZWF0ZWQgd2lsbCBub3QgYmUgdXBkYXRlZCBkdWUgdG8gbWlzc2luZyBwYXJhbXMuIFRoZSB0b2tlbiBleHBpcmVzIG9uIDIwMjItMDYtMzAgMTc6MjA6MjIuCgo="
    }
  ],
  "Variables": {}
}
